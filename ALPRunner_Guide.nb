(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    757873,      15574]
NotebookOptionsPosition[    749515,      15415]
NotebookOutlinePosition[    749981,      15432]
CellTagsIndexPosition[    749938,      15429]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["ALPRunner User Manual", "Title",
 CellChangeTimes->{{3.892194594994377*^9, 3.892194605350554*^9}},
 FontWeight->"Bold",ExpressionUUID->"29d66fd7-2431-4bb0-b94e-300693c0f54a"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SuperscriptBox["SDB", "1"], TraditionalForm]],ExpressionUUID->
  "422c8279-9739-4cb4-bea6-011c59179d8b"],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["JM", "2"], TraditionalForm]],ExpressionUUID->
  "f69ac5b5-6057-49af-b611-029d535b3b72"],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["MR", "2"], TraditionalForm]],ExpressionUUID->
  "78fdd61a-62a2-4862-9a2a-a12b3ef044ab"]
}], "Author",
 CellChangeTimes->{{3.8921946122685347`*^9, 3.892194616744958*^9}, {
  3.892194649346813*^9, 3.892194656553391*^9}},
 FontWeight->"Bold",ExpressionUUID->"d9219c39-7c30-4b74-9716-a96ccf7144cf"],

Cell[TextData[{
 "U. ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Granada", "1"], TraditionalForm]],ExpressionUUID->
  "24219d42-1f7d-4004-8896-308bc6477079"],
 ", IFT ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["Madrid", "2"], TraditionalForm]],ExpressionUUID->
  "42549d2a-0389-4601-97a2-e626fed0146f"]
}], "Department",
 CellChangeTimes->{{3.8921946399667873`*^9, 3.892194687635195*^9}, {
  3.8922032635916653`*^9, 3.8922032672888117`*^9}, {3.892203331190168*^9, 
  3.89220333248425*^9}, {3.892203385625931*^9, 3.892203399152563*^9}, {
  3.892203432682765*^9, 
  3.8922034477817507`*^9}},ExpressionUUID->"4d60c931-98bc-43d9-9f57-\
61eb6eaf3a5b"],

Cell["13.06.2023", "Date",
 CellChangeTimes->{{3.892194632043331*^9, 3.892194637241878*^9}, {
  3.8956484946278677`*^9, 3.8956484964375277`*^9}},
 FontWeight->"Bold",ExpressionUUID->"2c437474-571a-45e6-bf99-fef681688897"],

Cell[CellGroupData[{

Cell["Installing/Initialisation", "Section",
 CellChangeTimes->{{3.892194716840225*^9, 3.892194725406621*^9}},
 FontWeight->"Bold",ExpressionUUID->"f0205d89-241d-49d2-8914-508281dceb93"],

Cell[CellGroupData[{

Cell["Importing the ALPRunner initialisation file (one time):", "Subsection",
 CellChangeTimes->{
  3.8921949727629147`*^9, {3.895649059560902*^9, 3.895649085120077*^9}},
 FontWeight->"Bold",ExpressionUUID->"5682ba6e-b862-4dd0-9ae9-3c3db5011579"],

Cell[BoxData[
 RowBox[{
  RowBox[{"URLDownload", "[", 
   RowBox[{
   "\"\<https://raw.githubusercontent.com/sdbakshi13/ALPRunner/main/ALPRunner.\
m\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
      "$UserBaseDirectory", ",", "\"\<Applications\>\"", ",", 
       "\"\<ALPRunner\>\"", ",", "\"\<ALPRunner.m\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.895648968651794*^9, 3.895648968931713*^9}, 
   3.895649048845619*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"6c74d0e1-9d2b-4332-9fd0-7e030a6cd0ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Post-installation:", "Subsection",
 CellChangeTimes->{{3.8921949727629147`*^9, 3.8921949835192003`*^9}},
 FontWeight->"Bold",ExpressionUUID->"b97bdda6-b361-4a3e-86d0-0d9352d8b06b"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ALPRunner`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.89219476088463*^9, 3.8921947864802113`*^9}, 
   3.892194842151513*^9},
 FontWeight->"Bold",
 CellLabel->"In[2]:=",ExpressionUUID->"3aecb975-3943-475f-a401-fd6fa015a235"],

Cell[BoxData[
 TemplateBox[{
   StyleBox[
    GraphicsBox[
     TagBox[
      RasterBox[CompressedData["
1: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
ZFn3Pf+QEsCfu+WRhFkwcqUOu0ytna+n1cX6Et/0407xt7967XSzEbKz/LTr
HqIqvVVI5grkVM+V2a9eWnLOaTkpkt4eSFIvakkd1X/5xnWHSKU3dJOpbjD1
UVgHAAAAAAAnBgv3lnoz6u7+FyfIas5hiYaTV3I90t5L1dXb/eppy1V/tWJN
/5Oje0KeqRQE3kzD+80LrpMi+QpbC/U0JzQuUZ+Xinq0UlDHU0k5hS//4Icy
TZUPmoIltWQHAAAAAADgBCKW6+KD2T996KPnXR3ZxcV8Xta5Lm9g8pFodcOh
v7p46CmueDfiqPYntu46pUf9Nm/Y65J2b4L7RqXVdOHeUqucMXW0e6qHLDRU
WlfHkxt45KXtATlhdEU90GmTAAAAAAAAHP8EkXVEYlQiE0nn+ruSdiUdecil
rL1o76fNEetOUQnvlNPPaeoFmmpqlv7iO7eRUSXw/FCvAmRRcFH1KaXPO5w8
ZTbarnqFlFNImAXelyvV+/mVds6WoV+leF6q+qtf/cL1rx066IeePnDeV4CZ
pgAAAAAA4DiHTCmR2ZvRsYc3PflCItfPuegFluhLdX2Kkqcqd9Zd4VQMSzwq
lNb4059ev2X3HtqR2o2sAaLwc89r/LeLf2Cw3pYRSxSxziKcExrdaHWgd610
uxTqRa7rmUo04bRsX3E/O+FnJGeddDu0OgAAAAAAOP7RBm9vJuSpQoF/aOK1
qQ+cfWnaynOgOo0uSphLm8l1QgtlpFvlFRyrTj+ahSsefkGCH0OR6mROocD2
gOcVbZ089L4z1iecvNpL2uo1zApV5jlrPX7ZOSuCtFM2OKedzDA2h8MoMW/2
3/7UVvXSHu3FI5tNMPsdQrkDAAAAAIDjFL/Vkanu/3rtEDeTDlAuulXOZMux
VF4ym5E3cn2U2ZLrS5vlf+q/Q9IUfbnzm6LVA71Dct1c8vBzSU5fV+sCJdpF
5LNib0+AidMaqZCeyrFct7QTxsiVUk7hw+dcuu216VBPMPXFbxOrdC3VodgB
AAAAAMBxBRWiZaJQ4Pm+7977VJodLB0tBU6K3TDFIr5kad0spZ1+EtVW/ufP
vWLnwWm9h0DJcip2B7EjXslpX09G/WTfkJErprLfN3IFnm0qvatuLNTFpq7l
ulM2rAI9wdFpM0rhU1OqU/r7/B2NcEaUOvt6aPRqu0qHVAcAAAAAAMcTkX5t
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
VDKm0ucDVIR3ioaTX335/boELfEyYVuD5pvGF+/MVc/uydZGV9cnrOrwtc+9
xmsNLeN52KquvcvMVT+cufZHL6vDTnMUTMZ0I63uRuX0crKVEh+1l+qquyvP
zNgF9XY+cOb6sd3Tcuye7pCFMgcAAAAAAEcWLaZ9bYD5t9oTNG/UcSWkUfLJ
lfxOzhtUOt/snTBLaYduavtjX7jy4LQXyVmW0Sy3D0/hxk2pX31whxLqXTW6
mfWJ8f3NUK4LkIqe5lGjnuwl0EOXmv8ycOcKs2Q4AzzLqRQL8qiQXm6vq3Mc
Jb9TRwYkFY0e7lF1iv/927fxW1Ev7UOoAwAAAACAI03Q3iwZeE+P7HjHmv6M
3ddhDoj2JolLOrzSYVEE4hKZhxJ7aORKCYsGJz34yhjr5hmKTxGJrtNU3mAW
jN8+3lT+4qDnmfXJzuro6vpWqq7XRr796L6AM9v9NiuP+HnEuq7+t/fAzEfO
u4LbY8txNE1Cp6m33lHsxieLOw1ppW3x3if5moLR0/+9jY+HMiM1CCSPHgAA
AAAAgCOFr5WzEp/TXvjrX7mGfOZKoudKRk9f0iGjSMZipWoX5k0pnWX2TpgF
JekNcncXz79lk+7vbIW06Fp09O9NECUxhk/tONRZ39pVH1dC3dwwuXpoXOn2
TRP7I5/NjOyR8+G9eHWg/nvX86PpnJs2+3Xke2R3iWrssYM9ssTQu6jwaqWQ
tHszdoGmmuYK7zy18vT4HmkyRWkdAAAAAAAcWQI9pdQL/c9e+0DGGkhlye9B
5fFsJWmT9SWVJX27hAEmzidPmG6HVfiDr14/zeNJfammaz887UWK+IelcZvq
r258aWe2NqFu3dWx1bWRLtoeP+eeyRnS5lJZn5XrSG+L/1ZtnXvjw+pNJWel
2bTs92JQjx9Xz2F/flFC19UfppxCyiwowf87X72u0Vyecw8AAAAAAMASNFlK
+75/z0+2KTlq5ApKnWYsihbvsCiTXAl18qubSwt1yoGRSabvOG3d8+M7wzj1
hcvr2mijZwm9CWTIqU6S9MNvPrqrsz7WVR83q+Mr6+PZ+vCnyLU+eeML++Td
BNKCqpMnA707nsHamAk+/tUbdDwjVc5L4nWhllirFE1Z1RcIZvvYeeypelzO
Q67whesfDpEDAwAAAAAAlgkRkVr3xp5u0rVUc959cOYXP39lyhrImK5h6yo6
55C3ys7tbaRkXFda1yp3OG6KGlErlADjFDN2ofeuJ0KJaqcat/fW81IiZzgF
uzhDw0qZK5Vu3ra1qzaxujZmVUeVXHc2jmw7GK8C/ECvCJS8nwmjwr56n0+N
kxvfyH2f5hw5ecqZtF029pQ59YXSGudlyJdbPhlHl9wzufL9L06ErQsEPC+V
FgdeoN+y91beMgAAAAAAOMnwpazth554un1fd3r6fvNfBupKvqYpcbGUdvpT
5lqxf8ydFsQZhhSfTvqcdKxhr030UCIi1aKd4v/4/u2BjCKKlwNvJlC9nblz
VIPwpT37SahXt3bXJ7uGhldtHO2sja+ujZAlZnCy8MQumX/U2iM7VSgLXalo
X+Jiwos3Pq00uXo77MOngBee9OTKiNIlLhxEvag0LCmZK/xfn79q7yE2+gSN
IDbiB1Ja96MTDgAAAAAAwOsTdXSSY1ycKCJrlXS/7odbaM6R3auEekapcbs3
IXkpTmmWCcTWeS/aCmLnE04v/UhZMWsNx33/py8b2XtQkhJFskapiYev1eMf
ldSubpnqqo+a1QmlzzvrY6tqW6xBMq6rB7MbhldVx57fHqc1elFKZLM17VTd
eaEX+J+4uGrYfdxCSzNJO5ySYRfatTqb1UtyBSG+V/o8DmanCwp236pL7vF5
KBLJ9dZbjmabAgAAAAAA8MaYbUPxyVXCBfDRPQfe/+krlBBNmv0UfkJZLsVo
EpDbHvwiWp2jUVz1ZMN2O+x1CYeaT9MODfe8ftMLscGGtepb6sCMtbreCMK1
T+zuGhzO1ij7ZXV1XG13DY521iaVdF/JJvbPPjCpq/oszXUl3RMDTIOdKvSr
rbsPvv+sS+mwc3nDXqsjHPmNxxJd9Hnkhynrzlk5M05exiRlzOJNj78YSl+u
Xge13jzkOgAAAAAAeKNETZ2clqJlbNP3PvG927mV0hUfSIJ0aTnt6GzD9sjx
9jZSEro9FcPSIY2G5a5ady973z3OXpFAde+t6NX2ojobwf0z7hzp2jhB+vyO
se4NE7RN4Y3jq2qjUmBXtw0v7qb35zf1e43bS0N/Rle/6Z1fsekFqZN3sOue
ExqLi09lLfNYqCKlrDsc55grJW2yu3/g7EvH9hwKo3ybtosI+gAO++0DAAAA
AICTiFZXaTPQPpWZtXc8mzBdmUxKgeqUpl5mG0xeVDolN9paq0c2GB1Crv6K
bCQOSfePfO7KvQcOaY8Na2O2xHt+2JhrOz+MA2fGDzRWD40qid49pGT5SPfQ
WNfgmFkd766SZb27tnVlfWx1dTx318TuQ40gTqGJo2ckRj4OpQn9/1O6g1pi
s+UorVHWJvN7S6PZSXyhQf9I0etiYu//697bxfyi3rkfBvCrAwAAAACAw0En
v1CTqZLRz4699s7T3EQPGc7T7PGQoT8Gt09qN4hdnBer7vJ8UmrMJFu7Scbv
u5+fjN3p3FgaLQcOL0k9Pt62LMT7h6e6attIlg9OWvWRrsHR1bUxdVMSvbM2
2Vkbp6z1qnp8uPjkvlkxLEGr15XeOB+hesG9B2Z+6dwreT1SWESft/fVxvmN
LOkdbq2lSnuv+tu++56ivfjNtlUJhDoAAAAAAHijSPNjoLV0ON30Pn7hNTSL
02GVzhV1KZ4n7YoRpRRKLT12qnNQDHVWZqxew8mTa93Jf/aGhyibkXbSbHVx
yv0yxY2rA688vVcJ9dX1Caquk91lXLQ6PVgjs3r3BomFGTNrwz/Z1dBFfi34
/Uj08zBTjqlU/9n47GhKriZYbntL6RwDTLrljXHj3HUW8ORaV2fj3acPbN62
V97+W7+OAAAAAAAATnjmyEUl0cmk4eugks/94AHyvTjsSOfhpHPmeErkOGt1
UqQdliSlqCcP0PRPNnin7MrHv3LjgWDmSMSJx1KfGkP94LP37+mqj5L7pTrW
WWeJXh2njerkyiGS69nB8WxtVIn2lfWxLz24s6H/tqFfTozqkYzmUa3NMGie
ee0DZP6x+zlcvcJvuSxJL+2zkBa5aelu2H1/8LUbPLGoBzQqteXVD0IkrQMA
AAAAgAXwdY5KqOvqkosyc9/Lk6ke8nJksmXS6g6btJ1SyizEjhcaV8oVdY6C
IZWuhH3GLspMT5742fuuU0s/Htke54ovSz05ts2wnNYvu3vGzw6O0Y07SZUy
j+vqLN1JwK+uT0hdnRpOqyN3bDnIvpRD/FphoPVzGOqRRTpYfqbZ+E8XXJ+x
+5I8HSlja2s6TTLNthnU58etm7TM4WGmfXLF4YLbNskBN+T6QvDWcnAAAAAA
AMAJCrdRcl3Xb5fQ1Ge551D4kfMuS9vfT1ORvKJDxR0S5/HMIzaEKDlaYpMM
dY+qbe4kpeJzxqqQaz3nXrzxGf2yy2fPjqapKs3uedFC49HJ/V2DoyzIt61u
d7/wtkj0zvpYV22b0u2r6zTS9NS7RvdNydDSVr8n936GjbBteFEQPrN1e8ca
TqHM0TxW8QLJ2Vg8GYbL6abE0VcyNjne02uKj2wd0Wsi3cAbnxbY1wEAAAAA
gCaIol7ClhlGPNvNrkvv46p4SbojJaeR08VLqWypPaRRdHuHXean6bAUI1dK
mX3q/hPfut33KVk86ipdXmROExXEvcC/6rl93fVJ0udD42RNr5I+p/DG6igp
9qFxJdHN+phZnVCK3axPZKvb1JMv27w70M20Ad/PSBqMGFQCf8aPztE3a4+n
nD61ElFLGDb/FHmwadlYSqvTcwybUnSMNZSWo07dL3/+6oPTM9F59+KzAvM6
AAAAAACI0YksYaurUqrsNzz1AhXSzX4lLDuyZaoe5wp6SilFu1T0jE5Lt5pS
TIrNZg8W8+SEsXpX2O77zlr3yt69oSwE/CPSSelL0iJnIX754R2rasPmIPlb
lEqnAru0lNYmlFyXH7NVEu3ZoW3dG8ZWKUm/cSxbm9iy7xApcz/QLp1oeqmc
I/Lw+011a3rhn150u570RO+agisTsye3zrnFHakrnLw6Reo0pqyBjN1nXvGg
PuVRc6t+NwAAAAAAADDtdfXoIX/0tQM/e/YllCje4xr2WvJ75NyESHH2pZOp
w4oC1c0ST/N0JZtRaVGlSDNmMeX0G3bpykeeD3WYOHmzuWV1+fJPgshjzwXw
g81QukrN6ni2PkzVdbHBVMcj6U4mdpMbTtVzrNrEqo3D3YOT6q++/tA2P/RE
8Id8QrRO52I7Lwa0if3lHQffe+ZA0u7Vp8Iq8NtfVKtT0KVJ7n3DXsdjlehM
qlOUcHrrT25Rx+8Hs9U6AAAAAAAATDAvB0ZJ07/K355w8pLuolQ6R4vrwHCy
c1iS+hINA7Ir7AMhj7oI0bSlu03/uXJXXDrmflUvaKUjLsOR6/iXQBYBzWe3
N1cNTZi10c46dZJmB8mazlEwY2JTVxJ9JT+iVLpZn1AaPiu19yFS8j8cmw4C
1utiiAka+nyEjWjUqCwMmpc8+BOKgjH1tFa9TlkgYT4KgbHz7JMp8DUIl/1C
a5NO6d+dc/m2/VNhqHPdg7caMw8AAAAAAE404iq33Lv3bKZysR05WxwKgdGx
hJTZWI5aKcuxXBch2uGUEhYZ1JM8qPTnz7181wEKV9GDQYMjokP1RQEWure8
sLerNiFGF7M6EbWRTnRWhyX1hW0w46tphunYp7jwLikxZGsfHDv77pH9Pg0/
4lebiRs/W04VrrWLPeaTfUNph9pL9SrGWUKrS9C6a+QKZOx3SuoU8TWIfnU+
/65vQ2RCakarAwAAAAAAANpdFz5nEzZfnNz3rtPWpUl5LtUsObtxsizxjDTD
NKdEe0V06cbntrC01eHhWqsvt16P3SNKR1/8yK5sdSRbG19Zn6Tqem0ySoAZ
iQJhFrhxEV6yHLdd8+zOgK3votibbIGhuPmwIU2g0mSq/rdjyv/QuRwgT2Oe
ijwiKkqtjKYgJS0OumShLoualDTeOkXD7iPRTgsit/Lgs624mfbEdXmDrQcB
AAAAAMBJRSSkubI7E4a/9/WbUlwYF2v64oXiuTYPw6RJSRwhTj+edc1D0cv6
M20jQZdVqvvaNxLdzrp3PDtI1nSrNpmtvso1dimb04OLavXapExN6qyNW/Wx
8b2NOERR9HnII5ZiCa1Fc+DVnhlP9bjcS8tJOBI+37ruIBExepBrwnTTTtnI
5nVTKmXUr5Xnv+e00is79vs0jEnmmfLrN+OT5R+R+BwAAAAAAHAc0PSk5TNs
XPCDR0lpO1pekgFmyShCnXNilzOmm8q6Rm6ARyYV//MFV041DkXtqk2pUUe1
4uUc+9OmYP1m2Hhmu8epjGMS7aKT1YdGOwcXLapHM5JoTJLS6tna6Lcfm+TA
Gk8farSQCXUfrrwLn/83k7vqwbSV5zNWZhuMy6ubuLTuilYXQ3tslZHQGMm0
zNiFDrv8Rxfd0gj8hqRE6t21heZAqQMAAAAAnGyIfiZhOhMG/sMv7+hwXJpn
xD4Ntp1TWTjOUV8058Sm2nLaLKet3pSzLtNTfGJ4L1e8mzqlsb2evnyyM3KR
68RJeTsbX3mte2hi1eBI9xAp8JXsUV/aAyNyfXV13Nww/qn6sBL5j4xPSVp7
qM07nNko9nXenec1ZOkxNeN97LwbjDUldvKLn799dUPxOGm+l65biqa35Qzz
RFfHJdeQXe6w+y7c8LjYYNp6B5pyAH6IujoAAAAAwElHEGnc/YeaH/3iZRm7
uMJaF3mqadpRPJx0Kb86GWYqhlVQktWw3W/VfkQDPyn0MLKRtAUeLqPmjNwv
oTjMxWGjRHX56V3Z2ni2uk1p9exga2jpYreu+qh2rQ9OdtdeXV3d/tl7dk03
vWiF0Wj6h/SIJDLDNAI91IlcMeoJm16dzOQGUs5asuvb8Ygot80PI6V1ssoY
5OQvJhx6ZtrpVxtUaTdpCuqKXOFHWyZojRA2PV/X8+OLEfCrAwAAAACcdES1
aefK+xIcmW7kemXqqNSHY7/6ktX1skQ4pq38n1x8q8dp6lHqiywFuD68/Pnh
2gAf+DOUtOiLu8af9v0LH9jZuXGSxpXWR7KDSwn1tttId5VVfX1rV23ippf3
hV5b8rwf5b/ICdOZMGLvaVy44bGkXSG/eq6cdnSKo0TlyLWJyCGj3S9iNDKy
efVkw1TnnE6vOvm/fsEVUzTL9JDHDa1h7LdBVR0AAAAA4CSEezNvf/pl7ifl
IrAjPZISafIGc2BIqGey5feevm7L9oPysrrfU1pXdU3YX/55P5KRonNbOPWQ
49B3T3tn3kW2ls7qcFd9lG0wi6v06jhV1KtjStt3D5HRXSl8pz46cdDX/aT0
og3dKKtWBn4ziLMi+U01veAPL7qB1LiT12aYtop6fJNxrtHyhwrsMg1Wd+ay
jD/16gfl6kCg+0x1PAzUOgAAAADASQZJ3O37pj947lUps6BEJuV+mxSNLqpS
63AqEc+tqyfs1k2K8IZTXP/AZnnZphi8Q0kj58zwKG9meUWn7EC3fFLEoicJ
LofC8KVdU/ZGylrvqo8r+W0Otjth5trXu6sjStWv2kjp65zfOKL+5Pub9ir1
T9ntnhy9Dj8nuc7TkQKdQkOa/aXtu955xgBlXZqSolOUVlO2EpGPXcdattzs
vGH2k6c9W6GnZemvUj35+rNbeBHQiAJnfHpny9qTCwAAAAAAjhHiUURhZIKO
+z3Vf/++cBvFlbC/muK+uSDc5ruO7dak4Wn0j6PN2Go7ScN9dDX+H9yaNqXo
4BStLZdlROnrv8donBP/QEJ6JgzvGZmm4aScykiZjfWt2eo2Go1U51p6dTwe
aSqTkiTXUTY6q6PZwbEndk7JqZuJziEtQFpOmKC19zDsv+95dYqMXNGwCjzw
qJixC9JYutglidjcLucwZVfUxs+de9XOqYPxm2rqTxAAAAAAAJyYeK16dlMK
3WLqGLjvWcOpGHZfKkfeDMNWgrzQri1n60wKIZRYwoz6kx7XsEmUKpH5c5+9
bPu+aRHqi2nzoyPaw2ixwEEuzcuf3U1x60qTD42uJGVOBXOqotdHKHp9aLw1
0pRzHbuHJkSoczV+9HP3TXBPKb+k19DulLZ1gdh7tFPF8/82fxvpbc5Oz9AV
hzIFM+bKycUVO8fRl8l6ZPanHO4/NSv/u1SNWgn482olXgIAAAAAgBMKcZ6w
4GyGcbJI6L+047X3nnFpwskncv2sJFlYivvFKUVdkKVYZCqVnrEqaYuiwpWe
7HDchNWvpL4SpdVnXw09jyvpftCa6RNnDx7l6rrPgfH8Pg+FX//hdrM63jVI
YYycD0NmmOzguJLrsRlmVY0M7V1Dk+ppXfw0Kbyr7drLe7maTpo98HSJO9Bb
0b3etbfttekPfuaSZHeBEi+dotFTlkx1aQGYc50iXgHJr8jrHnnak3Zl/SPP
y4ojDGZk90f/fAIAAAAAgCOO2F1oS+lXj4bthMGhIPjDi66jBtJ48hE5qysp
s8AuazKix0JdC0tOFySbB0eXGA51R3ZYRfvqe/jFm2EQ3/vz/dVHQV6KVufA
GZ+Pg+72N4Nz7trRXd/OKn1y1RBZXFZWR7o2jnW3ZTnyICSR6GM88HRs5cYJ
c3DrqfWJndNNejN+EL0piWjx2iwxUWBL6N/y1Atpp5zmCxCGXcjYfWKJYbuL
K/ahdn8R+djJ+lKWntOU00dXLqy+95152Ss7p0moi6eovYAPuQ4AAAAAcOLg
R9GMIjWp6P21DZsMh5pJ02ZRaUuD2yGVFO/QwzfJ6KJ+FLkea8uMVSGrjFVQ
f5LKllJO/8fOv3b/dMMPteekFXL49glLbRrxJTdSLU8ar+ybzlHAC9XSlWL/
VH3Yqo91VkeVPtdmdRbnVG+vjYpcpyJ8deuqoYmV9cn8k7vDwPf0i7faZltC
PYjOMieud156p5LfnKVTMThXJ85+aZ+UJA9ygwCtergCz3Ngc3p07J9/+wbd
1UrWIu29gVAHAAAAADiRYCnp+7q3tKE05eNb97wjV6GMF2utYVMROMNjemik
kV0WA4zU1eP+R536YpKbPdWTZ5tHcUWuuOmVnVH+eEN2pdtL52nJIyovZ/eW
ypokjogk+8rD44eUVrcGJyTjpWvDxOraCMl1jnMkg3ok19V9d50iHEnDD46a
g2PZ6rbNew7KCwaRR729ri4mdj+6rHCwMfPRL1yT4fiXjOnqQBhrAb86h9LT
ICT1WdCZt9yEWkA5rvqxg0S7++36YzzoKWyfhQS5DgAAAABwwqF96vu95n/6
0tUkzp31Sg2SVqTGUokZbA0/ag8qEaEuvo6MVUqZfYkeCoT56m0/IlNNqMd4
0gSfYCYq/vpHs64etME/h43Al8h1HXoThlc/v3f1EDnVyZ1e38bDj8ZlaGkc
tJ6NK+3SYaoEfG1rdnDsSw9si3Jt2ncqvpT2ircvTQEPvLo9k6OFT9oRc9G8
0Eu2FZFE1wulUsopSAiPYfLFCy6tn5Lrf2Jkp240iN7pUTifAAAAAADgaNGU
HHKZ3XP61Q+QbswV6N7Oiw7PWJVowuYsoS43kY4y84hvSt67f/zNG5qeNHI2
JGk8VsVvL1HCYSs0Ugrtvh9++7FJ8aibNZqRFIvzOLBRttty18cl4FHdb3z1
QBC/4EJSOWgfMBqE593yw7gXYH4GZmuSlK63u2KG0Q52iy9zKPVuFj7+pWun
D3mIbQQAAAAAOL7xdbpgm2V8RvJD2O9MD2585tV0zk3alYyZX3oOqcTCJKTV
lCvqHdQjyb9yij91euX5HXuOyCjSI8lMIzzvvklJWc9WR8zadjGrR8p8TKwv
8Y+ruM+UXO61iZ47RqdmPJHjPFc01M6idsOP1PJ5TXTIa/7u127kyHS1tCnw
lYuKUuC8ICqnF7LEzPkUDLuPyvLmujNveCDUVvkgtuL47b0BAAAAAADgGIcs
GfF8UG3V9qnoLV2W4a7XDn343Esy1oDRU4qL5JLNOMeeoR0aTjmKLhF7jGs4
lZRTMLKF/ns2667KY9uMMcsYwybziSm/566RrvpotsZm9aHRWJnH9+3jTbup
9k7CXm1f8vQ2eZU2T37Ut0snvxmGrXh59Ytnx3e/e02F+0aLHZbMMy1RLMys
AabzTOySvWMXua5OQT0Zq3THT4bb2gHiUVbH9MkHAAAAAAAxLRXHopSnbAZk
UJERRWH4j5WNKzjghTShXVlUq9vatU5FYOmLpDCTkmGvZS9H5f/prYvvRfvU
j1XF2J6aoivSlOfoP7FjenV9W3dtK+W9DLaNKx0c7ZR8mHie6RBtZ6vbOusj
Zn2ie2hsyy5eBPlBoAvbvKO4iTU6FZ6+yBEU7n6GziSvcVJZcvvzSKmyGF0W
u6ln8nUN8s8YPX1JO/8fz71258ED4SyjkR+grg4AAAAAcJzQrhi1NUMsKqTn
Gpc8+CxHu1TIymIPGHZfh1XMmK66UWyjOct9IVX3DtLnhTRP8yGRmSP79C+c
NTA+dUBaSnWM4TEs1wV9hAFJaJlDWn1+yqpNrqThpBT/IkJ99ZC+j1tNO6vD
2dqoek7nxolP1YdXVye/8vCketeejnCUuUjy3ltm9aY+MdRnqv791Xdv4ejL
kpxkumwRNQgscnMpD5P97R029fCqhZXRU1rZf78XpfrottZwgbwdAAAAAABw
LKIr6tqxHnBFXWwTr+587X1nrUvlaOAOZapLNmDOpXlGjhsX0tu7SumZdoFn
Hum5SClrIOUUbnxqKye+BNGI0mNdq88KiPEktZJE+9rH97LFRYwus+V6pNXJ
sl4bZh/7ePfGkX8huT5+3/A0V9QbUVhlqD3krXJ3qOU0n6WxvQc/eNYlVFe3
BsSmnrDdOW287TeKrzcpvp66TXOFjFo3Ob2GU07a+as3PR9GV0n0fo+ndgEA
AAAAgJMYP4gqvWKfFl+1fyjw/vS7t1Bt1l6btJVczKd7KkmzP45kXLCxMWm5
K+ySYRYylk50TJtruy69x4vyAz2ZDxoe00I9nKPVOV7e5/uGH57/AE9HqpEN
piXXI9d6mxNmXCIcc1Uqwp9x17aDzWmR5HHcuqBtMdGM0cjP3rx505YE+V7Y
gGT2c7vuolo9YfXrj8DOG3afWkzJJ5XOFj5w5qUju6f0FNrYgw8AAAAAAI55
ouwXaij1tIYkpfhvQ48rlZi23A6zwgqwknDyqVypPUF9vl9dCr/UXkqGdsqB
+cgXrt03PR1ZpJu6ttymVI9Z2ozrXluaSjg5HZx11855LaWzbl2D/NuhcbM6
vqo6ZtZGlby/+rmDgZyBIMre8aXczWuleBeRnle/7Oy/i6wvUaw6Sfd5lzOi
hVJZRscaNlnWM9YAbXOYjLr9+cW3ilM9bjUFAAAAAADHBUEUBcNOdTJhPD62
411rKqmsazj5tA7xFk1YluGkS2QGxuHqVGPPFe97aUd7grp44o83rRhpadpo
qrvS03vaw9Xn3zpr4+Rgl6lJkglTG7fqI8MHvDhvh1cCDU6B8bQXRmaYRpYk
pa33HTj4kfOuILluy4LIjcLq5yp2bhbQTQSp1m95tqlabVn57ww9o/cQZcgD
AAAAAIBjkPaok1BP7IxdGc0pL/itL189r3heXkyfR5V2LReTDkV8p2gQUvmL
Nz/aamk8tk0vbwrR6osJdZ5tOkY+mUGOcGQzDI9PGrnokZ06bIcE+Yw++W3W
/dlnqalU9d3Pj3dQgwAV1aPpSHS9I22WJc5R3XNQzKLhMAY1qPafcnrhudG9
Tb3rwNfF/SiaRpf34Y0BAAAAAHgbWEQN6kd8PfuIAk/Ovu6HUpudp8YXFYTs
ly6TmMyWOANcqcri7379mkNiTo8U4Akj15fQ6qzS6WbyqFO1IWYYJd3Z3z6+
aWxKy/WAVjFzstxjAn3OyLhy7nUPZrJlyqjPuTKrlIzoZlGucUhU41L5MGrd
lC2o53/8a9c1vVB26rPrKWi7qhIiHgYAAAAA4Fgj8Nr7De/ZPJLOkedZCrbR
La6rL9reKIM15a9SPe47ewZ+PLFLDNitGv6JItdfr67O5fT6RLY2ygNMKRDG
rLINpjZx1j0TPrfaBq3hUwtC3aYi46ebwW9ceJPBxfOMVaKYHbsvafZn+Jxn
7ELSXmKebNmQT83uVU8+56ZH1MfdDBvit4lG1jLHnzcJAAAAAOAEpF0wBwHn
elOMn7f3wMx/+Nw1KaeQdEpRXb1VsOXJmEvVb8kabRWMXMkwS733PBNlErIk
9f3wRBHq4ZJaXR7XdXXqLRWtPka5MYNjq2qUGHPNc3vC1iKmLXNmlnAO46x1
JdqfGhl712n9JLyz3MOr11A8IMkqzx9N1bo5FLaZ7i5xjyqF+Tzw4lYvbMv/
CbUXHwYYAAAAAIBjh3gupy+jfrzwUwP3JJzeFEvBlF0RFzqr9NLr+tXlaRkl
CLPl/957GxVsPX8Ba8cJIddfv66uPeoTaqObOkzHVw6NmLXtVGmvjzr1ybHp
GX6lpZYw0kzAv6Vu0Is3bqKPI1dI2uvVmkidcO4LICneseTnErvZDYec7b/0
r1fsP8gtrWHUMctWJT+ACQYAAAAA4NgiLuZe/ejLRk4rutjuIh51Hm2/VLi3
VODlyR84q39s72tK/zfjmagnlgEmfAO9pZ218WyV7mU6EoXG1LZ1D77SvWE0
W92mHvnOE7vY4uLNN6u3HmHxzH25njqVSl7/5cUbkk4xZfZJIZ1C7M2SWlXx
Ymqxnl+6zKE+HfpY7TyF3ufKXevui+vqOt+dcykBAAAAAMDbzqzgEZ5PNLlr
7wc/vY6nF1FmCNlgdFHdna3Sl1LslObtFK9/7OVQh7Q3pCB8ggn18A3U1aXD
lHNgxlaKB2ZwXMwwXfXRLCn5bU9sb4oPZuEzo00pkU2Fm0BHd0399JnrEmsG
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
jle0rkdmZ1xnt9lr064ayKi7xifs41KqO+MAtgaYctqd7DmiTQbaa4Fuba9N
cfVFzleHVlOHE4jZxQfJo2qobLPDtjYE1NPOmgzorp/NDhSD6ODfOtZF34f9
jnvcwNo1REUgsb77F7coniBl1PEe4e4DMrt+0FEhCNukx4491NE/zF+REzOR
mTEmoFsqeXXxSNuNLMB1rdCz9OPQC1Sx5doFpEjgHZYUInVWU/jXVLlEyXoo
4FZ6pj38esaQQjAyZMg4FWOkyw+kP6Ct/tU1W6v8IcUbAaa6H3ziTAUY0590
RH7MqgBDU265L/ahCfHE5l4DewB5LbR0ekvN9ZE9rFzfjf4dqNsWCJmNTmjG
GkLrveKv9afSEAKh5KcTVXxwOf1nCGxiTDUJdl762zOpcz6VdLoTLpRedDrS
LnsKRNHPSanjEk5IrTPM2VoNjaVpBjtVF7ciRSxqUYM5ZHvpB1sxBrPruOVB
0gs7dG52VBOuGsquJ1wuBtpXQ77dwV687fobySuBztHa3b0VgagC7IUIdXYo
w4QK5eAXudWKgk+z3mhZXQwc1gLBZOduuN613KGnq1Ed0PrEW2I5/Z6EFklh
dXtP799e0WzC9XIvAXUTq0O5oRIhus0foZQRMtXDaCAFJHaYIgJNH7uyeXNP
z+hfWWTIkCHjyONQHBj2rHcgO3bSTIY/GRCFVdUXLBN5MCs+J/l088sC2dLH
fT3Y4/0vtJoe0yU3h6K8gAZiI3nja3+eT7akZFYiEoOcfyuxxwkfxGLFZlKU
/gtE7Nc93L1/iCSaUW9EM/oHMt/7kRBCd7c7xjHEDvlzVFBPCJ1w0AYfC1Az
A/LpaE6q4ssQhbKBsJN//0CU/oHF6oLSrwLFRXULIXoVqhXUdspZQw7+RHWv
Hf8pPctp1QZqwpx92+NK/RSTO0fiezKv/p4D4Kg3xOCo4g99874nhyyeFKUJ
R62mRQUCjw4uHvrst9Zir2hYbFVCplojzAN+i3C9kCMD5iEJ52Kpt8wD25zv
NywsiUSQDBkyZBxhYHaD269rBgqq804949fTFlcISUYuan3otZWAqyJcP8CJ
j2z+vOELHnxOEBWM0d3vU9CvGGYXqHO8Me+dtSBkwRvlSIVACqqfsGFaa5E8
Iz2ySwjtHYMMq1Az7yvt20FQQpiSsjO1fdJNKXVcClB6jYCXZqOoisCb1F1q
28D8qOBz1OoCL6QWpyuDVPYEfh8YHQ7+G1II/jNI+eAI38F57yNp7fxHw1A9
2KHaXdbvp9BjCCRoVAC6ScEDp70D/f5hOLkETZfY8WTHfOCNN+jWwaypfsns
V8Hv2EtzCNw7/FwX+6ob/QPmGU+8ytfIZuD4G+2kCQPHVTNMncxS1z/huFrT
fxJ+3uZtwKolmw3iCNFNFcfQCOKlpU8qROJCJAvDpo4Zr6cMU78Re694S6vE
8DJkyCjN4H1JVrMfw3hiVUe5rxlQN7SDmdSOQ66tZQjUq5C0oACzHZAVg1h/
d/mMDd3dfMkWv3zUzpVWLhA90YlXaRhDg1r1TY8oHuDeEzudM9Vli9yJHNEK
3jsWMvXqAaJ7m4nEe/tz73CRRoNfUT2LF0Fu3OXK2JHfgoqCBeMehOtAVneo
GXt1wgWAnL0MtBlVcOEEdjq2nULeWFXb7E7Az5zTXk2IWkB9GAyIppAEQpgf
08vQbsmhOCbqQczQ4QbytgW0t4GICsfhBODT/Dew34kZfvZOkPttZu9RKZE/
lswQJYlt902mtl+6m+KvpUnYhOMruck9sgGHi7auqIvy8aun7unfj6ZffMIW
ZgJG6SqfFPCzbmzv2v/3V0/HtE/EFmigjw/2CjzBPvL4mMoGpEtPmSL25d9c
Fd+yd4BULnWr7i7/i3nrX38/P6wMGTJkHFPkhPlzlrSpDT2/dV/v3101DfOc
oHlLGXLu6n7YZYVAbIUvZgtg6swXnrViDWbucxoWO2lBGZWTo2jXQlUxvnQg
xYK0K+9f3FLhI+/FEGV7KPcrFtPiL+unwKjAsgU0i3mboKgdiPD2OuRLfPu+
BXk9h0gdltq8ruU3b1p77pdbq2vSn6zlcFcFkEycavalmZduE2ImGYeKL3C1
YNYa5NYxkZ5SxxVQMYfxoCHDs+guDtHbna40w/OqmhY9qmQSBCl01W0i/BSy
bti/SmAKPQWah/gLTZVIF6flJN1qAtE+MMARz5sQnefhiw6/j2oIEtGm39Sx
mURY3hirOrcrdU3EbYAMAIr5HEl/+gd8UFkTypQBgOtV3nDdzGU0X5GyLn/+
fs+WJyyGCRogH+bRt9sVHwht2eqaxvhjZd4pFbhVF5kiaklGfO4JmdXeKpyK
heUrzBvfm/wsuaHpxoAVqls7KWTIkCGjNELkHLDfJ4ceSPkLJz8Hps+eGHHO
kZEe4w4dB19TokR34QT1ulgF5EJjv4i9oAsLDJEGMjRj9Go2cmHGQnZdo+Lp
7oHcP1wxlS0B6NxKhQMugAwfuU7C9RMzkG6K7XVoccsQOyzZ6Ev48aunbdnd
h+3JqCMEZyi35he/bHECcs44C4TqFOdRu61J6YQw8WGj3cGAsUqpdRNhJlUH
9KWq7lbQNqG8t4snzDnmV0lLHJA2CsjAN11OhNNuMyWepnZLZzWJoqB8Ct8p
pF21pBKZYO/ZiTKSqordmuzPjcfndtBFFBCd8D/l3osPwo8Yq6MGpmvtl7/K
NlamNF9fNnt6fZSdUAUVYNAfrfjX2+gfyMEW9TtfA1hK1YdfW7MTkW1eNFeT
qmxpy5/wtlP8/3+HFyuY6kFJxpiN2x5FRF69oCBUUce/CQmlgFih/OGqunCZ
f3Ls1ZQQ3dXoN9Pfov5cCddlyJBRQiFIfQyp6wxONy1NgzqWr3EMm/d8wXIS
OcG58dB5sCjJ4bIXVCFqZRDrrD/M2Ns/hG4dBrcTghjlVVorUDcMToPRJsx+
naF0xRdFs/sw5nnwUPgjBNRHNNjKcazIhLcDkMAO7Ph8TYq/ucoffPbddToV
ZWBFz7GLdedfgikE3kQyTxHthFAxg+XY9kg5c+oVBRYKyoNTxhvJLeyV4/Cf
qAS2Ew5qOK0hZE5Yuo3rroOJUsKFOFx1pelXwSshr97igr+escPLOj7zxY5v
XLDuhz/Z+J//teWii7dcctmm667ZfMONnZOu337rHdvuvmfHn+/bddeftt92
y/brbt5y+R/ZP2zFN9PuGEekmjQn1XPQXkKpddTYwdKGs0bv6TF0s0hlsAkB
6MQeEokayT2W46CD9jWoDAPZ9UpvM7s1Pn/7o0SC4VOWmVgYrTmQIw8i82zr
GfzXqyk30giPmConRhwBda7WCIn0CMi6+sI2P9Z/2YRcD3AdutF9sY9dEu/c
vR9QOupEig4X62PpHzIZMmR8EKIwV8FUn9m+5/TLIuWBJkikg9ziZCQENuF8
GDoMN5tU9djLFH+0bAKYBC1LbUbXjpwulHVN/cPROj+avaWGISZz9gFS2/vG
TAwjZ5KL+prO12ZeXbLWj3+I7Q9+yesUnIA6cc4bvGxNl5Ju9L39VrIGWCtJ
1ZEChomrVa1uRaCY4kwM1dqnmUaNQcLV4GHqBA12sENSAXu3usZRpyf7PUgs
d6HIiQNEHVX2Ssict33m3A3fvGDTT36+5bcXb778im233rz7/vt3z5jaNX9+
39KlAytbs2vX57r3sjeZ0yxsWH5dQbkKU6EmoNIwEaoNta+HnL9DbXU5CPlb
8+qpkuOro0Y9ier0p5OC2ABb9m/e9yR0/3mjBLHkLXNkI6R4IriBZUA0rrDb
IQCJkb8sfce8tHA3pJWMIdIBgZoG4q3rnCs5d1UaGFPeaCW7WrzNB+TVC4cI
jS1wU2Oa9OGWUAmEFV/0e5Ofxb+Qh1y6ZoJzmudlXl2GDBmlEWKKhPlyIJf9
0l3zTV466CH7oauUPVZ6QodoLBX6t5w6iF4V3tCV894kxov4A7nCUz1blE96
hDFMZB5C+8+G58v8QeqWhdq9P2x2MMnc4AkcVOu39pZSAvZTt83tz+Z4aQaB
31DX3vbzv9GGzPOUoxa7OFUiohBQF3AXiDHUxUnQHZjnqrvN/dntd9y2/Zab
O6+btPn6G7bedPPeu+/Zdc+f2dgRDO6ZOmPX3Mf3Lnyuf9mrQ39dlV2zJtu1
R9eG6ALmW01TJUis/lyXRh9hy6sVcp/DcZSJrPrf/SvsC5y1PKWPKjGcQi9A
e7Hh91EP3OO4e5a8YHr+svjttKWmxY/0LT2K4Q9zAyl0doDJ2Rf86GXTtuzt
pUoTKe0UoHtJhZX6Al/zTwDGpr+MLAE7JB+XUhd59WGjoi5U6Y1x+yQxYyDD
ikN39p3g8lb8nTleQbbk1WXIkCGjNELTOZ7Q9Bue/StSIgGcA//cFyN2B8x4
3mk4N3K1WzFVCi9s/iSCnJDIp26f3ZsfEvZBBY4Nr9KO3rw6hdlkCsBrSWZH
lQkmvfFynsaRutAnZZA4G5do88ESfMalsdSObvPUYIeyvrVuIkp8AyZMcuEU
htuBQELglro4ibtObJaEC0jmwHtx13YtWkB0X/Fb+TO9cN7NK2F4rvKAC1cX
ijSWa+YQYdXE1i1YffnylIsaYNW03WVqRZbuoF1G2l69b8Z09hGzwIIDht11
j73BzRc8IarTSX319x5cVDwK6XRfA6VNygJxmzf488gSapM0r69TgNGhCw8O
9ll27N//j1dPo/79Q2F16xieOSFRUEitf+zyqev39hpC5dWQQF2GDBmjNkyE
jPq8hma2JekoHq69vm57hT8OFWp/sNLXJOa9goCtmA9j1Emq+IMKtgHylDvQ
ZkC58fSJsXc37TYsTaulku0R6dGCfKWmaV+44/EqT1DhrXDRMul5dHKGUNum
dDr0O+C2MTb1lSTf9OkERXI9M+ag3Ir7EERuNB5F7x5sDnVn7MA2T6NgI4OR
u2bNoty42TvMwnIFHCr4NtOE3DrnHej8JmJ7Xo2L8xeuKIHIeSpPy/HkHu1h
8dm+50FzsvBBHCWO1R2omYO1jJ0P3M8PHSL2+55/l24f0/JY8ciy1BEP5GxD
gc9PHEVAsAuSm3QudaJpXHKntPXDeXJH47fO439tJ6Y6aB346FM3VXqbqb5w
mJyJsFKCJ0og/O0HnhHkS94/RetfUT+rDBkyZBw8dNPq0TBIipBotN3ZnPum
2bCAwsQYwWIrTXojsbo5yAu7rC5Gc2llXbSsHoS27n3+r6KdLCfUsUph7dDQ
8BoZ0bhMgILl9NfayBu9LBBH5iQ53YckVj/ho8LTxLaKULMAlf4IeRf+T2wp
F/lEegm7jPrb2pJnn4M6Km7SQkxbHgVKr0aBF7QxdTpIUx39hqp3hqOcNlBo
djYw92twjSKzBm8I7SJTDoiE3TWuKGFw8be8dTdK3+8dzG3a1d2yZfeb67e9
kNo8b+X6Ga9noi+1RF9ra3hp9bPvrrP8E23Pk/NN0o4oBBQbbx/HoKR6AsRt
3J3XXYeHiU8CM95oV7xNyFgIcVJHsa+6EhqmeGkFsbLRWKr2hkcGh3Kmb9sB
haFSDM26YLAn/xtdqvjZtBAEiQNUUIddnh/3er6mQx8xMJCq9FBDLvDeG19K
QV6KkjC6ZWMu1IRlyJAho/gh0nm6UKzCADjNvvA//FoVqfj6YySQXiG4f5bZ
D5IYhFdJyJG9kq28Nm8DcWbYP/n6vU9lNc7hLb0JEAEbKHhjB2D//uwn/jhD
qQuTfiD7vEiApAywrN2f4AFCOp5GaArwovqQP6JOmruvf8jc64H9y8D+Nf/2
vVZuc4/gUAB17BjlWLFNrW1xmk6gKKiIauo7brvTPNFGnm4BsyzO7wjRZCEQ
uCgOsa97BnKbd3et7tzzYmbz3FUbIq+m717w12vmvfb7GS//R9Oib/zlmXNu
nvOJa2aMCaB+OFwzxC6G20qY+YZs/mhg5qtcGhTeSX7PrNnmOy9FavpBsTp9
kE6fjw4qHfNFqY2mazxpd0i4fgQjalpCc7Y/mg7AAYRUc+iGp1dQU4CmD5Wy
zjoPrA6YGw9gT+3t7We3leKLmgLCNuS3mGqWhx3kegzqr39z+fT1e/byJlOd
tuGjWulAhgwZH8golPs5+CGvat1Y0LoWspq+SBVSESrqYgxUWIwncIGALDr0
mYLbEdC2Q4oH8HylJ6jUwwvK6kMfvWR6596+fD7P9wJaaVEoOU8SVYvhrd+w
4C0UB8MKLCjhYLOtb9hhkeNEDbYKg+uWJ1LlA8vCMYHoinXbzPwz4GlN33r9
9Rk7yLm0O11cw9zuon7MlFBlhIz6WEdadSYd49HDtDbldCQc1VuuuBq5XuxX
DQoPGW3OynXhV1Js/GnRu/c9v+quRe/c/MzbVzz+hmfWS/89dfmFDYu+9pcn
P337Y//6h+kfCkSIQq8Q2kQtU0BNWAsg9QkAD9D3FwOgjpV3AOd1jdTsxnYi
yDELXTbvtUJiXzd2RsLku5Rxuk8BrJ5yquj6BDLy6/7zp0QNIo7Qik1b0QuJ
ylJR09FGjsMM4d0QqvLFgQDDJmFfkKNWf7TCM+X0ic2Zbd35fJZc2wq+QiUc
mmjnYLdJLg8m2muV+iilg9jqY+Pbvfhh6pvg8YFgni1P7K60+aYzuH7BffN1
zRBiUjndzK+X/h5HhgwZp0aIop/GkxYiWbltX88/XjtT8UUBKfnDFf5GeOJr
GoHVcXCqNlsygKbujZT5G1ByHKw8Gc6f/nqGmAPoPGHqH5ZGF4+pQUBPOvf2
fHTCVAbG2KGweYNg8MQ2KXUx8uUp+gpe+uPA2kQIVmFPlPLqdz//LruE8gzo
CSGVnoULqI2UMG2GejBBC52rkRMNpvAjnt1VE46aTk9Ay+VzFgFFdpne/dwq
8m0HO0g/dqKBnnOUEnfs8ianAIBGHrBZ4T3U/ghvcws0lXkoeR6mfg0B2kOw
s0PHHyGLTSR8QFkMX/1h/pvmJcfuwl1/uZ+499hYWnSkfdzD5aIzwp6v+erX
dUvP4+auXuontYm+PzmOZHDrUi/KXXobOQ3G0wRA1N/MZuPv3fcUTbm6fnCs
XkrQHd8p7/XW82CnjcXfi5oXwy4e3aJJ+OW9jlsItjlAXITZW/E1Vvmmsifh
F9P4uzXRSUKkUBkyZMgYFSHEWGg+z5tKXz8NLlICDYjPo2An4YOiYQX19x2M
AwPrBffrhFcyPAOZQ3/kp+FFKJMLsyvyeM2/qpVEe2mB6ok53N9MW0zbEJsp
9I0i89TNJJHGcY8RBxAObAXBjwnBbzzwtCbaMAnp5To7U5/5fNo5DtLpag0i
cxdnd6OUt5lXJ9ILvSDhdLa43Wv+46fGYD8YnmqgFopnWIsvTyl+cLYi4E2e
5tCJ4EUc7osp+E1SeAakVIcVpcBUgkx8BJoUNvzBMuGcKIguoO3MPVwwD892
BGPYDhd7H+5a9I618L7z9jvSrtrUqcKBgYFnBBTsa8YjhNRQlC8/mDdgtwLb
MbN1Xd5H7z1wvm3iivR++g6kiyltAqxsX3jOirUGSYaWfnsprRfYKGuIdSrf
1Zv/52sfwo8fZUeD3WWwZh0ubcI5M0oggr0wTeCZ64ueednUjTu7RL+JMfoX
JhkyZHywQoglUm1R1wAINb+aROvqWIWnEVt1qDxtSluHC/LpBSOkkFIXRD5M
CP0mYAX5xNUP7e3rI/kU2ghgDjNnlmSL/eGPIESChb3nlRt2VQZiFWJlVMCC
JEoav8pByg1yHPMwqVZRohuxY/4PVz68vbvHEJqZmpHN5/VNP/tli9NF/aEp
p/pOdTXpvWBG2m1Fiah8iM8Rva//xr/n9+6FtmHC/TnI0z+6IgM9CPWgSoop
SpRiBk0Svr7DiQ7QNQ/pdGh39YcqOGQKi+biEN+x+iLUcUx5eKg3YXcD/Sr4
dAz5+6KYBYW0/OTFq623xPbrJyVKWUr9wJHkA+R3cnt2W8pVxj9ePb1cKHPK
Bu0jGcMFcsNU2SkXOifwGGhUAqF/uXZWT//+Ik2dJzIsmo0F4jrVw559dx3R
WpAMEyED3EMl2Kk6Rh5J4jXET2v6xgNPE1Ndt5RTZciQIWN0hGaYQur4//Yd
3R+5LM69myHfhT1xI0VOuOwVx+p+gCVVvmhlHaQc0f99CoMxzyU2EbfQEKJb
eforpQDSKbhEAKrBfPsvT4KjE4Pofo7W+PzvNam2xV/ES3RQvYZguVm+YVs/
sIXFS/GZ1g0Fbxe0Bt/+lz+h4mINgnBwKQXzIIeTwDnw1QXKRYL6Wa0qQ4lA
aO/47BeGNnTSFozXu43skrbNH66HVRvgupfceEMmrq6o4+s7rPUescSLQS0b
BJ/KPELG0xMyrVjKORAdJkVYgU2mZd5GchaLv9RqGLz7mj1svvJK7rJabIx9
4gbfRrHHvkTa1ADXNO28O54AXQ5s0LZ5Oc9fjiMbUW6EZOZPhAAmXG++4OWP
vmycAkl1gczJXAyf54QfQf5305dVBKKkaUCedGJzfZDDxQX8ocekqaI+iJcc
8NnKPfEHX2zhZDgtV1LLlAwZMk7NKMhoCGEvkjrJ5fWv3/skJSjKh7tIHNBc
L3yOkDNZ5he0AZoqA9MvnfMapC1LpqdJ+DMBE9Io6GwLus4T72wAVoNH0CH8
4TKfaXkvx3EP7MoEXQtkcWMhu4l9E7VTmq6ei1xuvdDmsP+119pRhpGc61MC
loPMC3cjrSVDUobS21X2vJYBddB+qRm//603ESHmclRLymvvbNxzxsQ47A7I
ghbfkjU7V3ai872UgRdmrPC3Zr3ZYZj93Ya2pf4SMxedOgVS62LfkXTWtjtd
fYtfopoGKTf+NLyIYS3scOGHnXQI5f119INz/qs805RAA3tSGYi9vXmXaadr
0GEv1RjJnKSKbVff4D/9cToAdbFrLhN7/wOOD25kxD6a8lHIdmtk9/4Zlzav
2dlrmLv4kmqtkiFDxqkYmvBtwSYdkV2/e8E7bNYq9zUfSvlKfBOUwWhpoEyF
EghDClQAePeNj/TkBukvlQJQt+RQ0K3eND8irJ7NDtbe8Aj7gFW+uOKPInU/
Ivg/Mgd4AkaZN17pgRyX4kN1FGj7CrHrkF2NX7prfnaInYgc2rtkQdRi987M
V85PVtcmVUc75NJd6EyqEmg3e0jTqivpsKfUce12tcUFKXf2oz1PzjcMweGF
pTi3tavvk9c8XAUU9EaqH1UMz8gdbMU/3iGakUMmVn981XrLxahtqvOZpYGC
SnwpjyRK9JB77O7p08WuBLDQH55YySATFK0CADVtXEXnoHlROd77uuK9luzo
eeI2f+RLdz+qU5MpJh/yZgqiFCbmA0KzZJkM4bOgP5voJIKZ2PXjEHs9C/cM
dBpJXhiwvTcK8sKeOP1Dtop95f55Bs0P8J+p3Sr5MDJkyHifghN9ud6FDt30
pkQALppvr91xWn3M5o9CkmF4Xt3E7aKxlPrvqI4fFtp0MdAf8IVPDwRXru0y
LIvBgdaNoy00vUCGzOua1b+S/e/BFxNKIIJNgjHwb/VGKCMq/dBPHMYg71cA
6uW+yeWg2B9kB/nMy+KpbV3c1pO3fRmbf+dtc45N2Me1udQEqBq6UDgdMa1a
k7A7AOWqDvY8A99Xoat0LPSc7goFxQLPTjDbABh7+nPj7nwUqC/1IdqBYjHd
bMTAMw7KLbGT9dn9RPuJIGGscD2u+5+LSBzeCtSTDq5FWbronXYf226ahKcz
n0c604zX28rqYrBXIoUlDyVFw+YpkDviIx7RijreK6Fwm+lQmb8h9LKVYaUX
7oLSCe4+wB/hS+hP1nKGlkUyTO53M5ZA0ZNt8L3mRg8tP/DiMetl5bickXUU
PPqDcNcDs5HNOSHFE3vg+dU6z9jTdjJb7I8uQ4aMD0oc0OFuJgpy0E+qGwOD
2dqbHyv3NZQVmMMj04mE2OlRQbYAdynFTjoQbPSx1bbhtgUtqFarG4U/ZwxP
hozGILsNnfA67WjAsdTY3Zv7uyvi8NHqpyp1oO/B27j8wbICWbRwfOQ4tgGX
ENv68UaJZmKtz3ijnWSVBU81uzM2tc3paFFrSf6Fks+QS3fUJnjmln+nBTB8
dUL9VJvdnnDV7Lj2Ot28JPFJNpv/1oNP4QLNNggNFZ7GsvookdWJ9cr2rYQV
T17Do4CjkZfWbDPoBkEf1A3/9ct2cFnl6WgaJlC3frO0BrdD+r9fG5yJBxvk
19duKefOUGC7Vi52RrBjGn6LyfHeg20860LQ3V8PtdFKb3O5L/iRy5u39veD
G7XB2z1KUDycr1ymBKVRIC3CN7v3D5513Wza1uFiFKY9S6HfltcdQF0KHE5B
lwl4VkogXMU2OGyfGIjZAsEzJ0xt29FtZtR1bRhcH81LmAwZMk6VoAZS0yGd
fB/hef3s5VUgpR6p8DabHi4FRDEchXJGsZ+SFSEil6IOTPhrdz1DxVaRCEWR
rVEP1IdlmMRShpO1dsXcV9mqp5Cgui9MTXDEC0UikEQRJ2Cgm0mUrIKqfFMV
kF8LXxRbaqCoMhjG4kZqINmaGncuA6sMx8KjYxylzZOqCnl1e3VGiHhnHOPw
BeC/k1LdG371ayM7IAxOQI+IXYy/mroYNYvwkoYez7DZMsw5GCDwEkPAc9Ly
6qKvdtWmXdZLsOPCHybsKiBb1W1m0Us9r84+UZsLDJ7WfO1bmgbiO1Ta2zuQ
Rz0c7OENsCdT6LDg8RnWOCnHEQwiImIrtJ/bm1Z6wr9uXgr1TfS6M0rQP3pE
Xp0/1/K8wQPv7YXJdihU+RvLLRAde/+jYrsN+uqwfnG30yhVIpR6YH4Chq8L
2yY0ffnuJ3grK/yPexkX7ZPLkCHjAxaCBmNpz0F69guJTuAA+COVKHahBJoO
0ZjDpzt8DVtYefkeNQzZdBf/yCWxtl1dYhVAKezRjM8tIfwvSImYJ3KNvJbe
3v3hCc1cKBsp+koAS8x+kJ0vl9X5E4YuwmjpEq3AbWClr0m9YXb/QI4o5WxD
CRWO/b0dF3wn5VST9pqUC0gvrSp6kjoIuAKybVVVoKmzF5CyunMse7LmWxfm
u7tNTWbdANf16x9fUVWHrRb+EFoURao8Mdp7YraNcHtEcDBO/KcWNDOO1dt2
dPNLEWPdd/+d89UdTjOLXtJ5dWgrANEeV9pVm3DVGPv7zNQo+++fr52B1gxx
kNOvp3IGMs1kXv0oBwkWVV4c4o2TVCoNRCoC0WVrNiPpiMBniXFgLHl13Xwu
5IazyF0EM1Pvw8sVX5zT9VGki0ozijc0rAklEOHN3WiyBkje11w2AcgwoPro
n3rf8yuJKYp/KHfA25AhQ4aMkxg0/1hFYHbtH/jkVTNp4gLxDX+BA3OIPnrK
ukM/oEhChhVPhE13oVfTIhGRo0YmK1Yf9bhdIwV4naoNeeAz/zz0goI+8kqA
O8VXeZtICBqPhkQRxz9CZtmariW2yFbVx1du2GHunij7uvXKq9J28PHMON3t
zvEJNDYSMiluklgH91JAswDXW10O9th+3hf3b+jgRipUMTHy01e0o11RuJxr
pIM+pOJD5oAnVOWNHCixeGIHFaqoj5Ww+oY9veaFyD51x9e+jn6sbvZZig6z
TwhQB+VMVNSEE2d3DSYSXGsD+WZfv/cpBJbNkBQVRmPicMlb7MgHljiB0wW0
bYDrnjhd5+xi+/Qts/NZrQTZLxAHFGe5NRIuZ3ku4ajr3YM5xx9mo2eB5RLC
K4pS6/BIJMZ6tDPzQ0UPajr1IVtdo1LfSBrsZ0ykThlj+O5AhgwZMt6nMKc7
moJ+Fn6uivxJPVEO13FxFHrRI/LGUXNFqEDLmAqhZPvD4EIhcqWXnpeELvgR
EAzNQUZ3WftGqpNyN0DkRXC1gYJfj6SpH9swAVio0AIGBZ0YQxp/WbKKc6gM
Luu356knM/bqFpeadNYm7I42UFB3JVWVgcCEOi5jd2ccDoZsW9XqdrUGYby7
tdqVdp8z+Mpb/BTDyQXJo5fatn5oAimoA+UG/mKAvxMh7s2vfy6ujk9OBmWd
mpQpgd+5t0fXC/dmx/lfw7y6KXVYfLx9IgbUPkC0Rx239+mnDCLIoYpg3YwX
2QEBNR6RBDipe6VTd0SrqPWjjnIvWAT0RHlLUV3onkWrxJSXK0nIPixQp4V7
Sus8yW5oLyQ2spkElXUjps4SSgFwbQQ6Ggr5ERfcMcxqTgxN0EJfvufxg+aa
Rn3SSYYMGSUcnNeBiIWAKZvcZrzeVuWlBGO00ttcgabVh4UlCGPqoMLIEGw5
5iXYovCvV83Y1d0v/pQpS1s6cJ3IL4CWSFUAnn/ujvnFXnlPvWFmusIV/iaU
SmvGRbOBCDBskf03tulD6gtvKjWMgY2d7Wd/Jl1NkFVlYK9NrUXD+nEMkKdQ
9YWh9wxkbuFLMDxy1rJX7ps1SzeGeCUbm50zO3v++dqH2Ia0yhfn17kvaFEa
eZ8ZF1HanrAPvrufNE6RoqYb6fM+l7QXktKoFV8ExJ6gPw2qmGwfpLY7z2H7
I1SqB7pRq7MWdhModJ921phkJPGk2mLnpNLL2D8netLuUFTce3Cyb3h6JbXA
lPsahKClhOsnbEBN0A+enmdcEl6/u4c7/vDMBPYzk0SMUZJUdkMwx8zwz1yu
+GMVpo4Q++woBUBt44c9ViGxSQePsz+98C5XdBdavlJuXYYMGSc3SJkRJ2li
emzc1fexyx4isM3WRy519R5AJUoQi42qi+OKr7HKH6nwND61eoPBpVQohLVQ
6YQQU8eKqp6f/kYb8JaLvcieeoMQMuS1fCHQXfGFKuuiii+Kggyxf7gqvn33
foEZ8IzkBjt+8h8plzPhqG5Tx69WnQAUnbUMsadVF/aTuhPquJRa04Ka6pRy
b3GpW269WTQ4g0Apuzr3DAydfdPsMk+TbQK72oOiOFKcsogox4QqAlF26/UM
oAcXIQFNz5z7GUC/pmZjkbB62s6PJ4PZCZcr7bDD+3GMR868M6M6CaIzBM5Q
PeBwSwPsiIw6Pclg7YM92XrjbRrPUObY7qT59Xas6JlSmYfyspHjWAZ1ZABt
29f40+ALhb0wIvWceZsAKC1JiUIrq5PdRD0DOed1M0ENxhtTAkFyVUPp9ZGu
uGbPqY335Ma4xx8k5ENnBsLJbbtwGsnpwnS7RNz9ZMiQUXrBvX1M/IPi6l/7
yxOVXsiigyChjzfjkDzvIad9TM4A0PKDFHYZ6tPWzVxG7jIa9vjgHyw5TiQ3
CmFvm8G6gcH8v177sM0b5DO5xVOj3CstWo5j4PVDT9gyyh0qQQJ6Mi6mDXNX
dAgCVZbSfTvvuZdhvzb7+HZHTdtYV8bpSjFk7kTVdIcbdUWABQ1Q1g78Cgbm
2Zcbfv1r6KLLczoWexzUs9+5/xklEAZrVE/IVh+jPNtwQ6v3SXUE3gBW3tlW
F4gKgcig2OZShjPhriW422rnKLc4WF10szKAjRhbXW0HZ1h2LtKumoTTjkje
2eKoQU171eSlC6UanmPn6vdOagcGYN/pCdAUQXYGLyQ3lNXDhcEta4t+oZ5q
A4V2vaEqX7zMG39q9RpLXqXUaqCHCFM2nja8izOdkIPyNqBIY1hQYsImvcos
H7MlDxrbcV5icz41KNn8kFe3+SNfvPMxoETyX20QaC/ah5QhQ8YHIiCjruXy
bLa59/l3gK/rawIpDK+QtvbEEUgccq1EoE54HjvjAhHXDQ/tH8RfqxVmsFLk
q/NAG+6bnloFkhTCAt5kpFtEeuU4loEuJBGkuzDQ3oS6K9Ey8CEKV/mD/928
xDAMk/rC4ETfyy+1uaqTjvHobcRwox1k1Z1OoGE4xjMo2OKqbnM6WlXgqzN8
mz7L1aaOX3vB942eAQ3V6dj+MYeo5NI5r0LxSAiNUjc0amXEKgqbr/ePAFNR
F0HvJ3DXYm9jWLJOzxNRhOFh07e0KFidcuAMgWfswIfJ2GszDtgoJezjUvxd
gbI9aGZ+sjbhcnNsj8KM1nfLID07awDdVUDy7WrNuh/+BCQbCTHqxrtbduK0
E0VZe26aLFPrJ+xi4+ligOvsy7GTHuobynNlJPDXMKnYhUmwtMLaeWo2TE2c
9TIVi4HYeXFEqY+beXVzDhdPosTnV3ygREQ95iB35oNO53sWroKCK8hD5tD9
oCRLDzJkyCiJ0IxCjvHdTbtPvwSmbhBpZNNUAOQHlbqmCqSsHyZvTK1wihdF
HfFfvbV2OyrL5AxRIqRmHzISKqGgNiWGH7Z09515aQwzruj9xC1KCV8haPdL
/HCMgwTlsLGrSZlAi2ZUASWW8FlXP7y3f4jX5fECynV1rf3i15McMUJbYsZ1
dqvQ6O6w18D3XajQ6MCu0rFuoGScd+7QxrUA1AuXXy70UgYW5UAjEXcrfZhA
8xfZyL4M/H+BQDtmYtRyHbL7J0c5bQaPW5zFVFOnfDg4qCIIX11dnbY7d9w4
aXdjw46779p8+RUdX/gSA+Edzhq2aWp38P0FvZ49Yicp/iokrrc52N7K3cFg
PDt9Xz6fBKkoS7mte4Bt2agXknyTrSj9EH3uchz5COFGNVjlaSZ7iD/Mf532
xJYssVaKKN2wQnRzw4sJ8N7BvHr9LJxtSHQ9ajFQGFEkBWQO36xrVAKxCn8T
GhkDSc/mj55WH1vd2ZUHcTAw+SvNgyRDhowSCDPRzZ4MZY3xt80mMwglMJl4
CIBCfTEAMCgIc6g5H/SsPISvopXeyE1PrxDyKTlBUC859guELvph9bzmeegl
cLVD4ReUu5HI/IQNU0UHuCiY4hsDfCrg0y5JdeZgf6eRPAh73DrhUgbFM3aG
7twpdVyLw2wdrUmrrgQoq9cKXRH4UaLannLX9rz+hs5tvgxqo16W2j4GFRph
CcadF7VFs80mYXXLKX6fkuqKaGEDryV/8KOXTTM1lMA3fV9PysJ7KaKaOilh
JhFst1XXZkBD0r135iwup8k25Hv61n3vQvaaVpcj5XRgsl1Nu2rhH6pAUiIS
O3HaIaMuTmKq+myRn4QZYyCnw/bN20QMhHKZVD+hg2RmK+uiFR6GRUFpZ8yE
eLJzt8kYQTNTrdQU10cE3DoWjwz2PL8ks9Hmj7PtMLVlWfnqw4ukvNKH3e5B
tFfAnwJFDdw0vnLHY3kWuJ0p6WMkQ4aM0RyUNKZswzWPvFbhnaH4GssCccoY
E2YALQ4PiDciSeDgcz4I3KG7RKUn9MW75rIVljqTdEPQFlDz1jBzGyUU+HZX
bdrBDsIY7HxUSDHAHzHz6pL9cpyDAJhYLpFH6gsyCD1h9uska69h4ipr5Hqf
eYo0Rhgsp7x6RnVSkpaBcwYaWyhbq45lz1ETBjoxux6eY3ZMaFjZyezu+djl
8Uof8G0UHyD2Sg/SU4WiXXkx9EY4MCBhCm/4765otlyImrFvn5lLTxTV9ggy
5C5kszhAeAfUYJy1O2+8BRWlsLlD13qefrrVeQ57wxk8BQjR+aOZVze3G6QY
0+J0snOnd3eR4yRlEs68pJlLA8EhCo04XEW/dEt68F2htxHt28DCgN16377/
CWoWEE1MdPWVqJY4bTo0C1bnil7AhPGHKqBqE6PumIMfIpRtJCMkStEgW69R
8UMKq8w79dYFK4g+WvgrMmTIkHGsMWIaGVYfNIzF6U2UZLCBSykoWqP6LhDR
oSLviY5okx85Ak1ssNeccWlzx2Zwb9G5G4V1htdKUfiLdJ6/ff+Ccl+D4otX
UtnUAtTlOAGDC6ZFCTOwdZBdS7W3Pr5/KMv3e7i8Du3enP7sFwGoA/xDOrrT
1eocz9A7ppqB/NwOX1aD6LqjhqH3pLN264234aXITyf7f/f+odobZ1MCH4jQ
XMsdnArLuCdmEY8G7HmVQLjKF/3kH2cZQjePPRncss20K+WFgyJh9QKJBZ+0
YeZ8/W9+K0wv4R7vSyTBsAmz6KgS42bwPsXZ9QX9RhOuw0lU4ftDGzrpTBFK
dE8CRzZ2SdDBkfj8xF5sNqQ7KoEIt/JEZ945b3bAGdAGddQb0HnjZIlN3QcG
7CJJmljTewfzNZPmIgWu6TC6T2aLhHUFpMUR64BNH5oQXbVll7hJZciQIePY
g3vHGJwEgGxQQtEwcXX1Ze3XzSr3TSPirk303ZRzuSq+OKLEepxUHG2o1wF4
1duo1Ec5M8QbnbL8HaqZmgmZklCysrRQZUG4kmSGqbtf159+Z71pLg/OUP6m
k+1feaqOgnmQP4IegjydDs0Ofu5FQk3KZ0yIvb15l8EFP5FJlTM21XlA7EUd
CzqNKFcIzApQDlQBOnJpEZBVz9hrUc/QveGi/wVpci1n6oUOafq3H5hv85Oo
MhefsazCxT9KeKAAGDivm21eosAB2rw5VaRm0pED+kYdlCEnJkxKrdl22RVc
VIpu+L4+drKQ6wL1jhTWAoY3lnK+Oqm1MySftoPQ+sC7q+kT01355XvmwqUi
zKeK20pwSo8QiaKwJeDvr56+u3+Aq2DhTMiZY4KR9T7Nyyc+TKenHPtYL7dt
RcIb7ATBGYRfZpQuCB+G84lZrBCaGjcpgdgXbgMmDEkfC+slCN3ISQAvQ4aM
owudYxWYcFEKgxiJbOL9VXwRGa8geS9WXsDqByJSAFSV+FOQGfc1sC+r6vBH
voYLJz/HE+lcbLbIn/goghdIBedQhzwS7WaGsvmzb5irBJqrfNEyT5Pip9Rr
2PooxxEOzGBzqTSyAqT0FFsWbZA7RSIosscbn2/FC8mkympdc+d2ONyrVTLc
4RARSc41RK7gMoYmPcZRu+ab39Z6e+iKBM4q/qIJc16pAknSqC0QsmK/gtV4
UQ8RCU3QHnn8TY+aW10gb7evoYw0mhAVF6tzM6O0qUtzlrq3KShqZ4hW9Oya
87+ZcLlNfG5q1xSwOj4h9XsUhIE0e+9Lrxq8KgfTyPcbniUQhdodI7Q05Tj+
ES3sly0ipRNnLQe6iNmzc7CkeklN8SIgZyW2k3r+qkfeJIlUmJqAkQ4KVDac
kQ6jEQpaZ0hXg+yNN1jua77l6bf1wgrCW8D45FWa0vQyZMgoXoDPhc5BS45o
wI+s2IJ97k2kMWvzTYYOOyR4QO5xuMYCEAY8Ue5S6mlEYB+FbLwv9A9XztjW
vd/QzAlcK6FmG92cVuE/OEqcbW9oU5aluLIZzMzhAlndAteLDvBKadClhW3I
iujVIpFGsMpFNePvNyzMFfobYM3bv7E9fc5nE45q7E8EznOrCoLeDKgzWJ52
1ryLyVuQB3TWgDiJ050+77zB9VDKtyhGG8GlLbRNUAJc+QE3DpH3sA94H4fY
I8OTT986j1+fiC2GMu0mPC4uVk8Kh6O0HZB20j4uU+3eu3w570MU4pobf/d7
cFkV2pIpQZ4x0bv4FGqbMHViv7nnqQWiAghn7jfTFpfx7r+waYf0vinefzBG
lFv0oitQOTDYo2zX/Oa6XXg24Szk9SFDgHPBZSxB1odFA0oHpWJjYGCg9saZ
Fd5mmHnQLBgE0Opocjjk1QVkIc9UKLZ6G9ncVekJjpkQX9W5nTu9YjrdIrVa
nM8qQ4aMkguRGxETiMabStd19f/T5dOBau4PYoqgoZy6RNmCGIiW82a3wpRV
iUYtkILwxElslvQZ2Osf++s6zNlnyd9TQ5r3QUnyozOQa1HgZOqYfuneP/Tx
q5phNvY1VvqaqPR5mj8mkAMH6jK7fuSDS534g+x42rxcVh0SpyDJEmOrZM0t
j+zqG8L1Lg8yjWzblNU3gkWpK+FypVxOEnhByAd89TYw33Ei2IM2RuCoO1yp
2vF9b6wkznPWGCLnxSWpzspAVPE10ams9PCkOsmyEVxnj8XdeZF2JeGEz9/1
mPWW6W9JAAMcc9ppezE1G8lzit5DBnpCXUlnLfSEChIAqeFvu+m2hAs3UwKu
iy7gamuyndPXYYcFPJm9D83kdyQ+XjH3VW6MVcDqdKzeP9H7U3WQ8RZppUK/
El51kCiGjET0s3c8OoRsQGACopwKvxB1C1wvreBZ77zOcLrG68vL27eN8TdD
i5Y/rtQFbZ735lnZBL+dGk7ZIsig/udvfwJ/X9ZkVOqFvylDhgwZRxB61lr4
o4mWzbTfefBpdDuCSRvk8nxT2Rw1xhs/MK9uQexYjwYCTBAsBTHD/JvpSxnU
5dbgRl5It5m4d/QTYjRTyg8/AQmP6Nc+9iZN2rAxQWCAhpJN5UJbjyZ2mVc/
UmxALj+gFwTAwDySpAvK9kS+h5Z39w0wfG3WZ9jDtnvuAhd7lBNhUDztAqNS
wXB2QbslQr6MHX3q1bMYMuyeOTNPUEKk5tu27f7o5c3wNjxxtlMguil3KvQT
LSdCoL3oOy+417Di8NX7njIvUHY09q9cAWnq4UySouXV6Z2wk+Jypp3j1n3n
39j9khMpdZpn9s1+NDPWBfsL57BcupW1Xngu+k93TH7QKDjXGHc8txIOC+8+
Dg0H6jKvfnxXmo9nY2h7CJ04xPELgAVehbe5cVkLVbgEszFvlHRenQeVfWi5
gv7Zq+a9TLbFFXwy5xYPhzpubOLiP/VNZv8KyoL+SJU3POmZVRodIYgc8k4l
ZV2GDBlHHCLdBaomOimr5R98odVUYkRqR8h2cQSFdoMI1CMHqi6ALAyCmUpf
I9AYAoC+qq+f0TUwhInpnMnW43nRkgqd2m81ToDp2LnnQ4EIuiU2VYH8S1wB
cT+qFA/jqxcd3ZXKKOOJUFBRwPQd+pP6g0ogdGHDorc37TRwp4RJ2Tw7HZqm
9S9ZnLHXAiPaXoM6gbVsgBij6koADqR0upu87NkLWp3jd9xxD9aidX5ONWNL
b3/NzbPKvHFbXag80EhbUWxu5Q1lVhrMaNh5YZ4z8o0/zzcs+czsihWAaU1x
8qIO2jpRa0DG6dp0zfWG2BwJdSmt7823YFeF8i9p5CyZ1B0LXAcCDP+d2Fu6
7ZZb8W7kVZGm5SlBJA7zZKbMq5/Y4SfPCLgL2L6VIXb6Jjvsf3PZtG3d+2nl
0IX6LgfppZhXL1hm0HPcW2q5waGcevNM3lVKG0D/YecB3mgTRatl6DBlx0rx
xU/zh9/p3Kkh/VMkCUZ7lkqGDBmjLiibYICNdMvmvR+eyFl56HMURrYeMAE4
Jftg8sXEKyY3twrkwFT5Q0vbtwPRQIP2PXKnNgp2qKUSxDA0q5bwEX4RfgHw
OeR+o5RxwuVsZL5FAvWjGmC54mmyBULQ7+BtZkfvh41LXl2/k3Z2GtU1eIVD
G8ykE+d9HrLlY0EVMGmvTjjtKacDIXo1AXXgqNuBPp0BJoa70/t7Ywi4tYgk
oJyUyxrfuf8ZBVP6cPV64tAf7Y2R5kxhQ8qAyqihM9lwN/GD4CJTTIk92bf0
RULIPDtdVIl1IrSwg4+9A9VdTzxt4hKRFjDyO3em1BrKw4Nj6SGY9vSdtEDy
Wy+93Lwt2Qeft3ItnCB/2GyBHCWdBafSEIeUd++yeZ58mSs9wV9El3EbWcHB
HvVF0kOGLm4lroHAW6pgtn8zs6PKT6IK7DhExSJ48MKNua8Xc0gYPQRBV+pT
t80bzBkjlIplyJAh48hCIz42mVwMDmnn3T6PkoqmFCHM0lB8j5RZslWmThpN
TUqgAfnqQf4yf+TaJ14DU0W+CyikXEpVj1fTiSO0vGOrqDhwdnplHRyW95aa
l+NwkCCGCW2wwWXPv9/wzBtrt/PjrnNNfvNUZNes6fjy+QjwVOwn5T6kKUct
e5Jx1pjtihknh3kdF/5Q69tP/1wXTQd1M5aCclFdjExRcUNKrcGcBW16FArZ
5OIPtFKN/DC4sHAT6Ubf0qWkS4nCKcVMquM2gXL7KtU1shs6ibkkNhfcWyHz
uS8knfSe3QeTmlShX5iz2d0I190bL/qNYZhZXGNZZns5FhpM0Z5Rco5OxUEz
PxYv6kJ4q8JtsjTZSeq179s0fLJCcHiQYpdHvI7sUEwvXTXv5Qp/HEmhEZzt
o0J3feSETwLFHNj7YlV8mQiT4vGN89/UNcLr1CCfK+6HliFDxqgNc14VXPEc
TEq8jpn7w+OvIQ2AKLvhA6ajKOEWbDsClF4F3o7cNaMc3c+hn7Qu9rnb5g2A
ffOwrsxSiREsekQXeeKrM9TxpTvnQSK9cGQkPj+Kgf5ZXCScMqIopc5NANml
9YU75r+c2WbWiTXBl+LnJG/sa25Onnte0llL2t0p0GlUyZmUIbqEw9XudGWc
kK1tVXmvZcf5X8tt3WLqctPZvG9RK7gTirbEUX4eLSgUNtG/DL0glN/gQ/Us
eKGI+HwYVkfV9DQefIbbM1/7FvTriZuJeg0Iq2/6xf9Q2+9BZeGTIq9Obaoo
tF678Uc/EBJSMKWs3rwTCiKo0UGC/NAsI44YNRoU/cSdeoOAKOwZA1H39Y/k
sqYxBz81gvJdqkC0oIZKmXZD68/mzr55JtWXFR/ZQiE7DrkxmK0C2d5yS8WZ
uENmOgvKr97ohwKxlet2ouSvzmk2B6tHnAp7HxkyZBx3WJ1JNSz3IajOvZLZ
WlUfp0mGt9chAfuAwU2ReBYd7R1hUvLji/3hD18SbQW3Gq77IDJppRFWoG6V
sB7C1qCHV2SEf6UE6sc2QnT9kG8UWYKWAwslcualsSlLEkhKR3iep7XezMhq
/W++2fGDHyAItAOTmVwv1ZqMHbgWPJ2rutN2J3QjulwZNCddc+55+zNthpbH
hTFPVNT5iTVjfFQn4qLlxT4sR3MA/eGLml8Ulygcq66nni06SjcHJcNbXO52
h3vb5VcbQlCa3iq5Q7Ivt9x4Q2u16zDmTbxAIEhNaWdN5ivn44WgE4ja0t1H
myybP35ge4jE6idp8GITajna/JEbFrylCUUCg9uYGhZZ1dKKgugBcMvRGZC6
oVes6UaLh0YxcRFWj2DpmY4MLzqLnlzeWkLfYQgfDEe8kU/fNmcgZ2os5M0/
V7RPLEOGjFEZNAUNmxzA38foGhhyTpqDwCmK3UMx3kl0iEYt6rwDiSq/MFn2
xAl33beklc1F+XxBBbIU5yLRB2eY1YG+waFP/nFWWX2UnJ4En9k8PrKd7YgX
emwdRWZ4WAGDv/A5tzyW3LqXknL8skG/KfAx1/XBVHLjxXUJB/QqZsaObwdh
RjAkJckRtKp3ATudPaLlZdp5NrgCuaoz7vG9b7wpuhGx9cDIJrbs+cglzaA5
4yW1olI6jzaUG/rN1BcNvsTD8el5/MnhLJSiptYdTnAvcoFp7J65j+LNxFUW
eSEAc7B7H3pIsGUON1arqC1DBqbjPiWwE/wSBnnK6iMmobrCdwBWL/bJOvUG
bW8r6iJjwPQH4Ci7ldp37Ob3q24KLGlmGavUQrM+UmML5pyy1zy2wuYNIlsv
JGqCYXLrxoNjzhtRLp6DVyMqHqODUgDkrZRA5Non3tDRHdUQeXUZMmTIoBhO
6rDU3TQqXuZ+O2MZFpHDVb44m5GAow60luCB0IVADkq+EGsRGYz1MIGzeexb
k582tDw2kGqlOlubQF1H1RGRvbxrwWob8BXjNEub3UbDJ2o53mu5J4tJXwOJ
rlTVRb/7wLNdA1kkvoqMkwEtFOxhKLNm0yVXpZFQkapxpceOS1er7yJWpx7G
jLMG2xiB7gJ63a7ajBNe3O4cz5Bez5NPC/dzlAw1tC3dPZ+4bhZ2ZLDdaKMg
OZtCf6P/PMLuuH7WK9a7ePfMOdwntNiajSmsd0AHASqiD63fZAiVxTzhtzxX
2eh7/fXDvNukaJJl27F28p9F4vrAblAEEuKPxj9fN4OEPQVWL6H6SKkOXkj1
xivIuczb9KPJCwnO8gZw3qNklBz7UcwVZNud5zpLOidz9me18bc+pvga2Xpn
Zqi4PO/weYPy6mZzegXVoD1TlQDI0p4eCK5Yu1soNpYeR1SGDBknNazUlwLN
Ayelx1etZ1MQ99ykNlK+8B0EwJiaGEogQpbKQBO9GGakj185vXNPP3IX8KE0
sbp5cFBii6ELQI3buwbOvKS50ocurnXERRyRj5XjvQc/YgxceeKKb0qFp/Hr
f17QO9Bv6Fm+vzP4ZTPQuWnb5VczHL5adTL4DaqM9hpw2LG72x013D0HVQoh
rw68l5o2tTY11oWUCedqh2Pn5CDVdExqaP/A0P+7+yngvZDPi6+xrADwSkSX
GzeJl8x+xbBoNu57aBaKVbqLnlSnltI2p4Odnfavnk+pAN4XjE4z1MbOnuZ2
7DAlGQ814Mw6QTOfVGXYRmz/6la8RQ1KBXzjT0/BWZtwyF4/OU7swGalkOKH
HiVqL1Ww6XLuO2tQnEAzqyfv/7x9gkJk1MnliWfVsSFUN95eu6OqPoY0mEL7
eVkhY1MYfOfop9RESEF76ypvEyge1zV86ra5Q9k8UvqtLnsluVzKkCHjJIWV
j80mis59fX9/xfQxXjSCEdJnw4H6iBUQvkTUGiEmTAWKriu+6Jw3M4Zl/iGA
VAqGR8Ni2PFBgjMD63Uzl8MiNYGKmzFyYKkocNdLAeaNggFLvC9qqwtV+aJK
oME+6ZGe/Vk41ugVSJdKLrt/x5//3Db+bAbSUKMbW0TH1qRd44FcAX2LkFRn
QJ1+CpY6BbtSoEmzL3f+4YZ8Hn8z8l5QoDH349BzZZ5IRSCKSOP/s/cdgFFd
V9qjGUnYKU428aYnaIoKjtO7nWQTZ/9kk93Yu3aK481uNkEz80YYcHfiFttx
nLjFNtL0kehgjAFjTDNgDC6AwcaoS1TRe1NDM/Pe++855977ngQCjAVC4t4c
K6PC1Hfv/e453/k+aXkZs3UfnO/HLtj0Q4k7Zq7glyh+3RdPnoT4fS4DGkWR
mNRUULR11GiG3zKYUGf4rWnv0XRGx1ZTA+nN2YavfrN3lC7kHAsKG33FKLxZ
VOsuPDJ/LtCi8JWzA8D/JhfIxIJKqp+TSEAVNZAgIJofrMgLlDvKUkNvn9TR
cUy3lNUHJFbnR3vxFX6EOjBsZRL0+8xdz69xcNl5bsxNRmn0/sBtv1hMLHX6
GIo94sbhT9E/vH36Cu4ONtD2RzXUUOMcjB7LAluPfvr0QlpbwLshFKe+P6fF
wTsBUCc87wDVlzhR1tnPb0gs4Ut1VuhTCAnoAbcWWV2lWT1jGtXbt+dqKWew
PC8Qh4XaH+nvHXOgBokfkhYo+7q0eRs1pokmrkxrU3PLj39W5/bUeEqaPMWU
egVai9dLeWNIp6Mitw0Wkpo3iIrUe4fWeUq2+kO6SO/BnqszzJgdMfE1tmmy
Mya5f+Zy9xxJeB4YQVqpd89awa2F4Bo1D4ajdZIAc6pk9TkIdnpin+CBqdMM
yqZjTiC2rKFm535qLKWfbPnlDb3dA/tMweUK4Xr9UG9DIQrCeIr3JeLCagdy
nvfOexOmJJppkgy+fKP6Vr+xd0HIC+uAIIVMKa8Oc4eBz1CEfXvL9FV2YdUB
tuJbw+KQI0bXs0aXUBsG7vqxdNdX759qK8ZxEp2oseK7hH6vskKNmmmxHCG0
TjJiQ7Tk8i17B9zOqIYaapzt0T2dzkdkaQ33WePlvCh5rnXPMXbrncnhLTOw
IjFsn1cKoOtzd0w61NYpJTukBvKAGz2I/QQ2fvLkXHgT2K4U4BiP5Cv7fesc
eKGBnUoeqgb9IrbURhCFG+0rVmy87Ask4kcWnJgzL6r2QGshg39NHh+k1pGd
Xi9pMJ7CZrfU6PZu+e315jEymE3LNtW/L1gLsNxf4bRQHN9YBxZWp+d//4tr
+EEY/9v39NNWZrugX/PqBdBKUO2Dj6+raQPnM+FqcH184bNrN8PnLPjMO++5
r7eTRRNqOWKtpBAFOX1USdl11591MytN7aev3oIH5yjW+Kx+UjrR0EHshNHj
oz/+GpCONuI952ZA4sqxS7ZeUNwbAUeD5CAG4o3Ey8oLJdZu20s+HXhtZgYu
XpfDMCxfANA3RtbZqq178stSsnXUGZA9L71KDwHD34/6tCje6NCSuf6nLrvv
WYb85QPZRz++ZDXUUKNfhyDFye+MdNPOQ+8fWQU2o5glOB3lBPE3UV7jI9GY
UGRx02ZsyNH5Ywjno7P6cqQNom7jmJNyiPgjqreLJ2WgNo2ezRpd8o6kOQs5
qgoRS2LwwB+8UL2ZjjNk3gpEa+3Ub5QKsadbCUnRjct/WL1tH+7raXz/M+0b
NzZd/lXgpQvS9Ul6D6F70U22pOBbus5X1FwA6H3z1f+VPXqYf9xAqoFPcPLK
9aIebe2kolQ9sCLhCkE33yPz14rLF3qfDzz6BH9n+jupXkPuRV5v87e+i6UN
IjGzSWl+8raJD859U9o1sg/9cNU4yMDT4QLoLlA06eHlJK8BurH11zfgi+bZ
ADaT39q875H5b//rmAXcbVmLQZo9EBMKP2yNqqCsJoB5Dc7XDg2SDPkBoltz
arEDDeDYUvb+Ecmfls+7a8bKCSualzRvXb119yvrd0YW1V31xNzcQBiZDLBg
OkJJkgQ5CeAflCF8wRK88QR/CA2n/sQVj87Sdb6i2mUbBzT47AGeabO4b/Yb
+f4kN4ciH7cy7p+LJZ5uc1belobIIg+fuPXZlXwD0g1y9D5eBUINNdS4gIZh
n/iwLnSY2W/8bQZxd23JgVMHkBUDKSdSQRxgDxG/edpriI1A+1GkCbD2fZZe
Cq+0crguX1eaJ/OJfdPFxbTxrwQL0dpEiPUqUz/wKw7yM5Zel6kfy+qX3z+J
tn7iTuSVJpQc3OmH/aIivOQIVbLbVz48E89EBhaa4d3e+B/XNXmAgo4sF+go
rDsOrjcIP/paJEjQH0PuHVLxJZuu+rG5/yhqM5KSA/uSmVWzOW9Eyo7VBzym
0mJPvLROTmU29v3tEQ5xzy1WP158psHrqfF6mwqKto8aZVi95XrNroO5gegN
8cVicQBWUserK2t90BLLPmuh9HLcAc3LnWfp5+u/+XVR7TIQ3GR1Ya7U1pWd
V9MyeurK4rufhXnqj7pCccfwxEVagpqIUb0qSo42sHZpSZCu4g3ySQb1f1+5
fGH9bpS/zvIDhZ4RPCM9Y6YX1mz/6K0TSS8LOdsxO1a/cEKYVvPKAvIhozla
OTsBpV5v4C3PoKA1aLomZeMV332OZc0v3T+dfJZzAmNytHD+8BT7FreJCKXZ
gZ0Fao3yfRMtFahYS2/gkFDkjQ27QBHSEN2s8PZBo40C7WqocYEOhERADgAO
dvah51eTrQNbPUiD0WmjI/YWbDV2+SPUIZgXSLJN8EsPTGvPZHTRwcfzZrS0
2OiLffD0eX6Dr2n8p9T7A4LL/DfZrPHIgpX/FV345JLa2q0H4OUaAjPA36RN
LvBimlzklv/Q9hCU6WXrpzlmWR3tRNTvnyOYh/2+XQ6UyLHySJI9BWmoB15c
hZ+LTqmkIwtfoh5S5FFg2lzA8hMGNRtCItdT0uT1sH+48TtXdOzaLvua6UN/
Y9PuS8riedoY6vAiXoRT+JX0+5tzRgE7fnhpnSE0V9mXXff+uQExbYNAtv0G
1wuGkm/R/inPkJ06fhqZMYur84OJz9/3rIEQ2yRNvN0H6jzkdtTtg661qdkQ
GYZKLUiOKuk8ekjXM6J4l6HFJmtkRH8CPNz63Qcjy2qvjr70T7dUOoCtEQfR
vGAl8YfZ2gW9OZAbZ6A9PvSuKY8vWnu0o0u3EsHcIc6y3hS/eadl9/tC4KKV
W1rhCMWPE/wcoBfVuwjr1IOVC8whQ7WRvcO5/sRHb5lwqLWNL7kDkgV5/KA9
Rtd1fjlgC4y5Ztu+vBvjLqHZaLU2c9kBeIvy/UmqODhl1gKzW/xNQzcl3/2T
O461c/Ko3s01Vd7ot5euhhpqnPuBrGDaQF/f2JIbojJunFeHRcfQyYEomZOy
P8vzR3NCqYvK4mu37RebJjdOtnL4fb/GWPq3YicAngO+KNgdmvcfvOLR6Wj9
jNtxIOK9e9qdM1as3bqHkhXirTCFoGSG8rq8YkuHANqjdePQsc5Lb6sCkXkt
5vBzgUpImyim+mmHreYLGiYM3kCuKRSdV9PC5d2QN7X1xhubCkoYSkd+MkNu
7lNi9UbP0Ho3qL7UDi1q9F52aNYM+OywF5gaS6u3H/zQqFROqMoS39biVttX
f78zZxqQLk68UmfaVFh333OPoHYDrD1nKuvU7dsNrnuLq6GhoKRz82YTjRaA
Xq4b18ZeYpPxIi2RzoCbgykO8U1f+xaC8CIBxQtRnt16CCqd8F/h/bevXkPT
X+dEtS7TjguR54YJSkiLp82u2h0HYsvq/JNe/+6jMz9x+3h27aHhcuzjI8dd
E1v4/Dvr9QwZqkIxDu8zm+ELARbpkKhsLRumed/st3PZlVzG4HrkOD2ofr88
zuF1SIthUDD2URYsd3jyDxOXsaOTaZyF5b//BjS/iLqtafKq8YOzV7uguIye
bvzgBjdA5CoQgeS5PyJoQgnaW4HkH6qgdw9Bezx/eOqW6W+YEpxjSdrsYYOi
hhpqXDBDcuGOdLYX3js9X4vnDY/maglgX6OKQt7p8tUTCLrAJunRhW+Je89K
MopMT/XhKmNrjM3KvDro+5n8F+xrcnnNB0ePIwt7gjRsqczTxji0JIuv3D/1
sYXv7Dh8FMmB6Sztwzqn1hv8e7rrNABI3bx9xkpIqo+IYyMV0oS08BB/XGH1
U4YEw0IeIcrb/UKJPH+YbW07j7RzCX7kJjV+53s1xcVkfMMgGcj0eXpSl3sC
RQ/8ZU1hcYPXt/57V5jHTC4pg1vqhj2HPvXHFJ7XQALaGZCaDAMbrpNZ5Pg3
muxb+Y6bb+FckXPrhdQTqENKHD7BDd+5Qqq1kPrdx26udJRB+rF6215DlPgZ
Itn23/9DeXUu0oi4XepP1mFencF1+e36z/k2/eaGvZHI4TkvZTZvIrSO0z9N
xzQ8BGRoIhP4IadmHVtU8AmZBzuOtWcyfLHiIkSm7Ick6pSJzTeitRDP7maX
gRS/PYc7hoyoZNcPWzxRsi9yQeXVWTj8cSkIBj+BhvGkw1/OPmL2nuQFYyua
95A15+BqlpRlFp0KvOls19cenukIlOOeCNrplEV3BCPYeGutM7ZUGNQgqBzD
rhxXKVJlyhLLm3caePyUjfamgutqqHHhDUv21jD9k5eJDEAEFQijqKHHCTCn
ol8miADDMMO/PDGb582sFAq7/7Rd9qpvhx2o47fkLpfZfbTtmoo5YMkUDONX
EJ90lFbkYb7LwRA7OsdB6qMs/m/lcya+2dR2LJNB0qy4a1qHM8gbhJexYd/h
i0elXFokrzTBG8pg1Y3iPtX/2+VACXvnXQ7PPkUvKotTRh0RVdbsytRz0rKX
ugtJqrH2pM4+0teSYfXdjz4mrwp21Np7pMt379Tc0oiD15pjTqpB96LSMCBC
eiCylzPlzWZT6BSx2bbr5psx53zqN+0sZdcllgbr2ALf9ttuJQV1RNLpVVt2
k9gpOzdNxmcuJp2+88GH6FAmna3qu5/RpBoMUdnZWaDRRwn2ompP4aZvf3fH
LbcfmvmCuf8IJ5mT8AynKwi+nC7O4Dp1pGTFSoWHdFyyTP4HmF7fsfPItOf2
33dvy/Dg1ut+veuOewzQ6+D3w8a/V8x3lYVdpbwrH3OkyQsEqBNhks9rPrOi
sCOEEvloqMeQ6pcemo4FlLO1EfTjkHsQbalrtu3LHwnHE4bVaYnjBhzIV7eZ
JfE3yinYMnTKg+p2EBooCu+b0tGepj5s8UCGqeC6GmpcaEPM9dnrNgj4xFbX
OKEX+3pycr46LUrsb/5pZKplXxvJrOAKk+5OTj971sm2zk98UTPXbvr4rRPY
s8qnFwX+9WEirsCSGKhAQ3kub5uPPhR5geQlN469PrF4ypuN+9s67Ul7vH/g
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
9rn2+xdkLvgCg+UEiSFhrpAxKIBz1EsE6AiC6uzzjhOJyY+NRRlYdVcQo4PU
GhvYVX3ik51rVpm5LFIVzhu5l5p3fOSmWcIEEBQI2RJkK4icjCxW73MN4GMS
+GeRN+K//1Vcl/L4x9C7V69BlE6a6opwLO23VJEw/5U0LZ3m0cbduegpcw3M
Gfq+ruy/3TgDTWmheQ162bxBAQBkjkKGjGjfopv5PIo2BKSOCMyTGa8mDZ4Y
Hx7NRNivk4Ae9xuF4lfstTTR0emwMAAsMS/V8gStMbyRMm/dZZGlOaTBDEM3
T47TYBx5Z3ILL+yz0HqnvlRvut8ek/doar+YQkMg+CwqTSguCth+7K/v33+o
d7iz4KhrNoQfis61ol9Jb7WpdXRulTVfGadLAJuiFITTo8WBGi7khZwuUu4t
Ums/fMsDLyS2YpO1ZoiNxvTw7Vr11ubvXMIJ5+8A7fx4yXMFjwaIP52uZqc7
Q5rh6AeEuoXlKdd5DL42f+Izh9eug82HU+OAjJfXtWnPN5apdDA5teZ1kcVX
iNrESlHrnn3eFggvWrtBZMDgz7Bv6t8bne5UeUE1feCyBTT5CkspqH04y+sV
aEdt+dZ3jVw3Jiho9TNuXrSyxFsjG0hlyBhSEGDGfvwZ0J7vjf/r9TOa9nZg
c14BDBmUDOwr8yJsgrkKk6blKJfODV/g6zhbgDrzgAkz9SlSzEPrmVo0boNF
o2RAjzYhxs4WFmz9U0ML32rhsIfLwVNCJj8cJyc5Rsmw7umFu5H4KUhw1bVc
0872f504u1Q0LBf7uHO39Ya37hGCJ4lVHm+sqDqEdttws72Y3Gbe6icAseuQ
P9Q5sQy6Uy+evrhY7OnWGpMMGaM3RM9RFOnZMTO3DFRGL6gw/e+0Z3ceOsQz
LZiFxukBLSe923dsu+HGhKI0YgZ7ROC66WpEPaSozQhp/NTYigY09GGPjeWu
pk98ggF1tuNk0acby3m5w9ncFbGXgeEJexz3axCepCM/u2mREc1rwpcKpR5K
1cjBrh7cPklJy9j0w8ubFHJB4tr1x3nrnHTAUdJjuQhMPTBh3IeeeU7ThWuL
oe3qOPQv10aptt6X7Hp0bV2GDBk8TE9nXp3EpCKDzR/+9Zw/PLVy7dZ9pq1z
Xuep8oJBkl7gsecJKZEOLvTVaCKFyBB8NzYK5fHH5FrbDr3vBrSr89XC9CTR
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
Xv3as60NVtratt4vY0fkWEU0QAVok+j/OCBRioxF6gCNYcCT2MVIyLClwW7v
MP6C5krYD7swdjMOD/FEePDwAoFYPVl8vNvw/+If2pZZtcNn3vqWJ3/4R068
5H86+dLpx1760id//CeSrz/LF7DNd/wB9CAgAnlXVRlbN4YN7JH+Y9pdK7FB
WE4pLfH4AEuZtQhLCBNNaVInbFfxgSjuYB/gJhS79bVWePLyMx8+efHNnzz7
+uXPvfIdH/u56vH//fXv/h9+5X4yyLNVlqsisBxue/Ahyr0o9RNgXWcLrcSd
UuB0oSMqxo/dDaouGCzSChcWM7QjVaM0Zcrck6t0FDLML/zZx0POr/mxP3ov
LPAUD5OvUL3QYFOhua7rcy4DGe2Llcy8xD69/5EvaOllJwkuSUbEb+hW9Iq1
aUuiBsz6B08QZhal9dhEIHX5JDXbcffc1GOzdtxzc4eknmyrJcRObydp7JDD
g3q2sETZGSUUV6m/6FXN21/3wI/9yQfuOvZXv/auTy5+6NH3fe7Jv/ni1ae+
8pwgZpxGFGqLE6dObxQ7iIHQcSf80CJSN3W1LTY2lS50C/c677o/7Uhe67iO
a0V333jw4GH7AEEG/Iht5DAr6eHn2E0JTuMkwGfe+OYnfuiHT7zk+0//sx+h
ZrxQ4keDl3m48dCP6m4yq0d2cLR6bN+nspCtfMtyuMZDOkHvSSKiVCczwfVV
E7CRxvJnV0yOzlny8eBIIvO+zngjii8/+9wnP7/+rs99/shfPvZr7/nUwaN/
8eN/+v6p33znt73yGMJjIPNMwN5OxtvGeJ5C3/cile+WVQoQXETpopwfR5Et
5QWjJdGHnIxg5Pn5N334+Tj+4tWvf9urm2xaXzD/ikRjknz629VZyWKjfYFK
XmQKRzLl2vf+6pu+8g2jyrViycLZ1Kpg76FHvLqB0+vPfvurKOZnotDk8i91
xY1bx66eSum2FqWeRLce+ObCql3lW90SUgPH1pVduyam7d46foVyiO7tJkvV
7/3lN/3Q777rZxeXS2/7q//8EFU7XDt58eSFLz/z9xtM4NKGg0lHOmfnnx0m
DfsusvaOtDCLhVhDEDcL25uIeR/M15KhNtNNpX3nB14e8OBh2GDjgyEKJaFN
/Y6TNg5gLOQjFALw/N9/5Z0PfPVd74klWD1xIjw9eCBITTedFH8T/e+i6lFf
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
l1EyntEDgxMoN0uKHX2EunpFZkjNKdGDgGohPYLjp4Xj4vJRToa2RKYU1xwa
Slku/TEGTGzICKY4cGtQhajokNfcRAWTVGIOiOGFpb0MOMy9H6B1yxV1i0n6
n+ZhBv6t+WqKar4+uFisbGccjuvPEas3nfCKtjMgAVbZof3Ilb0sN4Pi7psG
0XcWEUWgO8hooVIZbLT4ObGuPiccfanNPUHCr4TBh1BjhjhQ/9RU8MGPVr8a
fpvNUmKVhgrIenWhgB77cF2wtKAshTyoQl/f5LJm5IGDFsx+PZHgUsBbLjMF
rRmn+zlIK2GAt3VSKBxlGXoaKUDdPkRFqwMrGSuRqdf5dXX/hlkc29ecv3du
mCpQ4HnIQRYrTaVY9BX+pMXqR+0i6ZSfr8B18BvQBSx6DDA4y64oT7iA6LRr
KS6K4f0sQdICCnfe4CIwUQtgmhiCnjNa14yR/5PX/fvT52e5oooac9L0ITK4
iLyGquvsJcl5cqOq2gQQDkTKQ9YywTOAy1TgRjtvi0Wr3fZwTzJEtpeqclda
co2mzvZaAuIs0NXHGEujgJ8mBFhFCUtLpZFOrTrWl9AEqd28RqR0B2i/ei2T
kBh9C8q66TXcFDBWgNvlm8DJ97UoHTgFwIuNzjt2CFraVTnUeX+mTsSj+8OR
9kDfL3qt09zKUWEpgUXp6diOrpXGKaX2bwsmimE2lqA2HfWWvjmyLa410fM9
zi/1XOgdhPakYq8w3mNoaLHx443gvurk2Ke7C8iWlTHWIbTq3t5ptvDzkozY
SMUAt/enDNHjl9WiKacub2NQ2tXW0gMAmC8ZrruBLwaB5woKaej1uEIWQjjS
dUXhnfpr3fer7UuGyR3cvORhcBE83Wxi7CKl0oqmiDEKoIv/ZAAYUHZLYFAF
pI2BeSjdbLSvKUxdY4x0nrXsZRIQy4uCj1zWXSQaSKH+Pe2L9xxqllxyVIt7
+l9uqVW7qvpdynuFsO0wn9OJnigytsmExrJmxNrkKncvWPmuw4uf/mbrycau
krNtxnJUjxIK6rFVebVQ5qdAqRmTpRSenuS/4qfAidKdJUeyPaVxqSnTo8RR
ygbAv88U22WwgoGR9ZS/t6Aiqg0FVI+5kbmK0cVUt6UT0UKjFto9/BUGj+Gp
T6vWjuBMiMJS93xj/1faL+kBoqTk+4tZ4wzvQfmeSo1CDtp9P+cKtHSHhRW9
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
cDgOjf8DWmt/Bw==
       "], {{0, 797.}, {996., 0}}, {0, 255}, ColorFunction -> 
       RGBColor], 
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "RGB", Interleaving -> True, 
       MetaInformation -> <|
        "Exif" -> <|
          "Orientation" -> <|
            "CameraTopOrientation" -> Top, "Mirrored" -> False|>, 
           "XResolution" -> 72, "YResolution" -> 72, "ResolutionUnit" -> 
           "Inch", "Software" -> "Adobe Photoshop 22.4 (Macintosh)", 
           "DateTime" -> 
           DateObject[{2023, 4, 1, 11, 29, 0.}, "Instant", "Gregorian", 1.], 
           "ExifTag" -> 168, "DateTimeDigitized" -> 
           DateObject[{2023, 3, 31, 20, 12, 11.}, "Instant", "Gregorian", 1.],
            "ColorSpace" -> "RGBColor", "PixelXDimension" -> 996, 
           "PixelYDimension" -> 797|>, 
         "IPTC" -> <|
          "Application2" -> <|
            "RecordVersion" -> 2, "DigitizationDate" -> 
             DateObject[{2023, 3, 31}, "Day"], "DigitizationTime" -> 
             DateObject[{2011, 12, 20}, "Day", "Gregorian", 2.]|>, 
           "Envelope" -> <|"CharacterSet" -> "UTF8"|>|>, 
         "XMP" -> <|
          "DublinCoreSchema" -> <|"Format" -> "image/jpeg"|>, 
           "XMPMediaManagementSchema" -> <|
            "OriginalDocumentID" -> 
             "xmp.did:3257a60d-cb19-4aa8-83ac-2e1cbe831c18", "DocumentID" -> 
             "adobe:docid:photoshop:7de0d1ea-8273-ae4a-8b9b-edc5361a3bd4", 
             "InstanceID" -> "xmp.iid:c6f3b803-053c-4e31-a380-e8d08e53e631", 
             "History[1]" -> <|
              "Event" -> <|
                "SoftwareAgent" -> "Adobe Photoshop 22.4 (Macintosh)", "When" -> 
                 "2023-03-31T20:12:11+02:00", "InstanceID" -> 
                 "xmp.iid:3257a60d-cb19-4aa8-83ac-2e1cbe831c18", "Action" -> 
                 "created"|>|>, 
             "History[2]" -> <|
              "Event" -> <|
                "Action" -> "converted", "Parameters" -> 
                 "from image/png to application/vnd.adobe.photoshop"|>|>, 
             "History[3]" -> <|
              "Event" -> <|
                "SoftwareAgent" -> "Adobe Photoshop 22.4 (Macintosh)", 
                 "Changed" -> "/", "When" -> "2023-03-31T22:41:42+02:00", 
                 "InstanceID" -> 
                 "xmp.iid:881f2651-6cf8-4fb6-a3c1-bb8dfca7134d", "Action" -> 
                 "saved"|>|>, 
             "History[4]" -> <|
              "Event" -> <|
                "SoftwareAgent" -> "Adobe Photoshop 22.4 (Macintosh)", 
                 "Changed" -> "/", "When" -> "2023-04-01T11:29+02:00", 
                 "InstanceID" -> 
                 "xmp.iid:f99f826e-88f9-49f0-9edb-233a7bef1cda", "Action" -> 
                 "saved"|>|>, 
             "History[5]" -> <|
              "Event" -> <|
                "Action" -> "converted", "Parameters" -> 
                 "from application/vnd.adobe.photoshop to image/jpeg"|>|>, 
             "History[6]" -> <|
              "Event" -> <|
                "Action" -> "derived", "Parameters" -> 
                 "converted from application/vnd.adobe.photoshop to \
image/jpeg"|>|>, 
             "History[7]" -> <|
              "Event" -> <|
                "SoftwareAgent" -> "Adobe Photoshop 22.4 (Macintosh)", 
                 "Changed" -> "/", "When" -> "2023-04-01T11:29+02:00", 
                 "InstanceID" -> 
                 "xmp.iid:c6f3b803-053c-4e31-a380-e8d08e53e631", "Action" -> 
                 "saved"|>|>, 
             "DerivedFrom" -> <|
              "Reference" -> <|
                "OriginalDocumentID" -> 
                 "xmp.did:3257a60d-cb19-4aa8-83ac-2e1cbe831c18", "InstanceID" -> 
                 "xmp.iid:f99f826e-88f9-49f0-9edb-233a7bef1cda", "DocumentID" -> 
                 "xmp.did:3257a60d-cb19-4aa8-83ac-2e1cbe831c18"|>|>|>, 
           "XMPBasicSchema" -> <|
            "CreatorTool" -> "Adobe Photoshop 22.4 (Macintosh)", "ModifyDate" -> 
             "2023-04-01T11:29+02:00", "CreateDate" -> 
             "2023-03-31T20:12:11+02:00", "MetadataDate" -> 
             "2023-04-01T11:29+02:00"|>, 
           "PhotoshopSchema" -> <|
            "ICCProfile" -> "sRGB IEC61966-2.1", "ColorMode" -> 3|>|>|>], 
      Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
     ImageSizeRaw -> {996., 797.}, PlotRange -> {{0, 996.}, {0, 797.}}], 
    Magnification -> 0.3, StripOnInput -> False]},
  "RowDefault"]],
 CellMargins->{{70, 5}, {5, 5}},
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{
  3.8958967039767933`*^9},ExpressionUUID->"20ad06da-68a6-493b-b5f5-\
433affa60ca6"],

Cell[BoxData[
 InterpretationBox[Cell["\<\
  SDB, JMR, MR.
  arXiv:2106.08036

  Type rg$variable_name to print the RGEs.\
\>",
   FontSize->18,ExpressionUUID->"45951f51-6d03-4e24-be6f-d40db4a5a6b6"],
  TextCell[
  "  SDB, JMR, MR.\n  arXiv:2106.08036\n\n  Type rg$variable_name to print \
the RGEs.", FontSize -> 18]]], "Print",
 CellChangeTimes->{3.8956496429580393`*^9, 3.895649677618885*^9, 
  3.895653893961974*^9, 3.8956541871015863`*^9, 3.895654333064493*^9, 
  3.895896703988937*^9},
 CellLabel->
  "During evaluation of \
In[2]:=",ExpressionUUID->"4acad692-8429-4fb4-9d32-005eff9baad4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calling the RGEs", "Subsection",
 CellChangeTimes->{{3.8921949727629147`*^9, 3.892195017407775*^9}},
 FontWeight->"Bold",ExpressionUUID->"bd9e3af9-debc-4a92-9c26-6e61a8417d3d"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Call one of the following variables to get the \
corresponding RGEs.",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195047459399*^9, 3.892195057803287*^9}},
 FontWeight->"Bold",ExpressionUUID->"7d0a1503-900b-4c3f-be37-a3f6959406ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rg$*"}]], "Input",
 FontWeight->"Bold",
 CellLabel->"In[14]:=",ExpressionUUID->"47710a56-bf63-49e4-9885-bac37198fd79"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ALPRunner`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["ALPRunner`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["rg$as", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$as", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Las5", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Las5", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$ms2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ms2", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$as3", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$as3", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LasA", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LasA", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$as5", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$as5", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LasAdual", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LasAdual", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asB", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asB", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LasG", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LasG", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asBt", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asBt", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LasGdual", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LasGdual", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lme33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lme33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yd33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yd33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdAbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdAbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcd33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcd33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2u33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2u33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmebar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmebar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ydbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ydbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdG33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdG33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lms2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lms2", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asd\[Phi]bar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asd\[Phi]bar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcdbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcdbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ubar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ubar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ye33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ye33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdGbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdGbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmu33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmu33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lce33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lce33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuA33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuA33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yebar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yebar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeA33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeA33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmubar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmubar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$ase\[Phi]bar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$ase\[Phi]bar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcebar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcebar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asG", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asG", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asGt", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asGt", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuAbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuAbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yu33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yu33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LeAbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LeAbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2d33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2d33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lg3", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lg3", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lgem", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lgem", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcu33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcu33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuG33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuG33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Yubar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Yubar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2dbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2dbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Kappa]s", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Kappa]s", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Kappa]s\[Phi]", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Kappa]s\[Phi]", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmd33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmd33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Lambda]s", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Lambda]s", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lcubar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lcubar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Lambda]s\[Phi]", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Lambda]s\[Phi]", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Lambda]\[Phi]", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Lambda]\[Phi]", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asu\[Phi]bar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asu\[Phi]bar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA12", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA12", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Lambda]\[Phi]SM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Lambda]\[Phi]SM", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asW", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asW", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA13", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA13", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LuGbar33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LuGbar33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Mu]H2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Mu]H2", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$asWt", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$asWt", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA21", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA21", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$L\[Theta]QCD", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$L\[Theta]QCD", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$\[Mu]H2SM", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$\[Mu]H2SM", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["rg$g1", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$g1", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA22", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA22", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$L\[Theta]QED", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$L\[Theta]QED", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["rg$g2", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$g2", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA23", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA23", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2e33", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2e33", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$L\[Kappa]s", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$L\[Kappa]s", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["rg$g3", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$g3", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$LdA31", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$LdA31", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Lmdbar32", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Lmdbar32", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$Ls2ebar11", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$Ls2ebar11", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rg$L\[Lambda]s", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-8a2f546f-ce79-4fbf-ae1c-ccfd9aaa23d3", {
                   "rg$L\[Lambda]s", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.15833333333333333`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.8921950318170557`*^9},
 FontWeight->"Bold",
 CellLabel->"Out[14]=",ExpressionUUID->"7a6f6714-373d-485d-a186-d99ccb4abc7e"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["Above, the one that begins with rg$L__ are the \
broken-phase SM RGEs and others are the unbroken-phase RGEs.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{3.892195083550953*^9},
 FontWeight->"Bold",ExpressionUUID->"47861e54-3feb-46aa-817b-b1c3024cb809"]
}, Closed]],

Cell[CellGroupData[{

Cell["RGE functions", "Subsection",
 CellChangeTimes->{{3.8921949727629147`*^9, 3.892195017407775*^9}, {
  3.892195679474826*^9, 3.892195719841238*^9}, {3.892196447901972*^9, 
  3.8921964658424997`*^9}},
 FontWeight->"Bold",ExpressionUUID->"08c2894b-03a7-4454-a4ea-8bde602e00a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rge*reset"}]], "Input",
 FontWeight->"Bold",
 CellLabel->"In[17]:=",ExpressionUUID->"66894d6d-e72b-4764-b00a-a0bfa34c3bf7"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ALPRunner`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["ALPRunner`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["rgeLEreset", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbed8cff-c2db-45d1-97d7-c1b4ef8b8cea", {
                   "rgeLEreset", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rgePSEFTparamreset", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbed8cff-c2db-45d1-97d7-c1b4ef8b8cea", {
                   "rgePSEFTparamreset", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rgePSEFTparamsolvereset", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbed8cff-c2db-45d1-97d7-c1b4ef8b8cea", {
                   "rgePSEFTparamsolvereset", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["rgePSEFTreset", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbed8cff-c2db-45d1-97d7-c1b4ef8b8cea", {
                   "rgePSEFTreset", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["rgeSMto\[CapitalLambda]reset", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbed8cff-c2db-45d1-97d7-c1b4ef8b8cea", {
                   "rgeSMto\[CapitalLambda]reset", "ALPRunner`"}, False},
                 ButtonNote->"ALPRunner`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.892195722570117*^9},
 FontWeight->"Bold",
 CellLabel->"Out[17]=",ExpressionUUID->"e8d069de-29d0-422a-a0dc-3f3d3959aa22"]
}, Open  ]],

Cell[TextData[StyleBox["All these RGE reset functions solve coupled \
differential equation numerically for the given boundary conditions.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.892195237169911*^9, 3.892195243951406*^9}, {
  3.89219582551799*^9, 3.8921958836489773`*^9}, {3.892196088863428*^9, 
  3.892196104079425*^9}},
 FontWeight->"Bold",ExpressionUUID->"7ccf515d-93a6-49b2-ba57-4ce0d8e59e42"],

Cell[TextData[StyleBox["In the subsequent sections, we show their uses. We \
also produce the plots (as demonstration) that are discussed in the paper.",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.892195237169911*^9, 3.892195243951406*^9}, {
  3.892196129349699*^9, 3.892196154830378*^9}},
 FontWeight->"Bold",ExpressionUUID->"77c7a02e-b001-4256-863a-20a3a8463c30"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The SM RGEs", "Section",
 CellChangeTimes->{{3.892194716840225*^9, 3.892194725406621*^9}, {
  3.89219516159726*^9, 3.8921951661799498`*^9}},
 FontWeight->"Bold",ExpressionUUID->"5d0479ac-3660-4bb2-a53f-0cd87eafc55f"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The users set the value of SM couplings at some \
scale, here scale=172.",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195047459399*^9, 3.892195057803287*^9}, 
   3.892195146389086*^9, 3.892195282496069*^9},
 FontWeight->"Bold",ExpressionUUID->"0707b00d-f861-480a-9a46-d44d52093ff1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vevscaleboundaryConditionSM", " ", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"g1", "[", "172", "]"}], "  ", "\[Equal]", "  ", "0.350"}], ",",
      "                    ", 
     RowBox[{
      RowBox[{"g2", "[", "172", "]"}], "\[Equal]", "0.654"}], ",", 
     "                        ", 
     RowBox[{
      RowBox[{"g3", "[", "172", "]"}], "\[Equal]", "1.220"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Mu]H2", "[", "172", "]"}], "\[Equal]", 
      RowBox[{
       SuperscriptBox["246", "2"], " ", "*", " ", 
       RowBox[{"\[Lambda]\[Phi]", "[", "172", "]"}]}]}], ",", 
     "                   ", 
     RowBox[{
      RowBox[{"\[Lambda]\[Phi]", "[", "172", "]"}], "\[Equal]", ".13"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ye11", "[", "172", "]"}], "\[Equal]", "0.000003"}], ",", 
     "                  ", 
     RowBox[{
      RowBox[{"Ye12", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                       ", 
     RowBox[{
      RowBox[{"Ye13", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ye21", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                                ", 
     RowBox[{
      RowBox[{"Ye22", "[", "172", "]"}], "\[Equal]", "0.0005748"}], ",", 
     "        ", 
     RowBox[{
      RowBox[{"Ye23", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Ye31", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                                ", 
     RowBox[{
      RowBox[{"Ye32", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                        ", 
     RowBox[{
      RowBox[{"Ye33", "[", "172", "]"}], "\[Equal]", "0.01023"}], ",", "    ",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd11", "[", "172", "]"}], "\[Equal]", 
      "0.000022402218714514104"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd12", "[", "172", "]"}], "\[Equal]", 
      "0.00013100800059039354"}], ",", "                   ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd13", "[", "172", "]"}], "\[Equal]", 
      RowBox[{"0.000030630892115227004", "\[VeryThinSpace]", "-", 
       RowBox[{"0.00007897115443513078", " ", "\[ImaginaryI]"}]}]}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd21", "[", "172", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "5.185172146546565*^-6"}], "-", 
       RowBox[{"3.042723119739366*^-9", " ", "\[ImaginaryI]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd22", "[", "172", "]"}], "\[Equal]", 
      RowBox[{"0.0005651646560389477", "\[VeryThinSpace]", "-", 
       RowBox[{"1.7793821109734878*^-8", " ", "\[ImaginaryI]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd23", "[", "172", "]"}], "\[Equal]", 
      "0.0010026651774180785"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd31", "[", "172", "]"}], "\[Equal]", 
      RowBox[{"1.8706544011996077*^-7", "-", 
       RowBox[{"7.320794584782447*^-8", " ", "\[ImaginaryI]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd32", "[", "172", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "0.000023656137441897952"}], "-", 
       RowBox[{"4.2811949722817027*^-7", " ", "\[ImaginaryI]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yd33", "[", "172", "]"}], "\[Equal]", "0.024124133259358013"}],
      ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yu11", "[", "172", "]"}], "\[Equal]", "0.00001"}], ",", 
     "                             ", 
     RowBox[{
      RowBox[{"Yu12", "[", "172", "]"}], "\[Equal]", "0"}], ",", 
     "                               ", 
     RowBox[{
      RowBox[{"Yu13", "[", "172", "]"}], "\[Equal]", "0"}], ",", 
     "                   ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yu21", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                                        ", 
     RowBox[{
      RowBox[{"Yu22", "[", "172", "]"}], "\[Equal]", "0.007"}], ",", 
     "                      ", 
     RowBox[{
      RowBox[{"Yu23", "[", "172", "]"}], "\[Equal]", "0"}], ",", 
     "                  ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Yu31", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                                        ", 
     RowBox[{
      RowBox[{"Yu32", "[", "172", "]"}], "\[Equal]", "0."}], ",", 
     "                               ", 
     RowBox[{
      RowBox[{"Yu33", "[", "172", "]"}], "\[Equal]", "0.931"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.89219476088463*^9, 3.8921947864802113`*^9}, 
   3.892195290766019*^9},
 FontWeight->"Bold",
 CellLabel->"In[4]:=",ExpressionUUID->"7bb9c2f1-796d-4665-ad67-4621d7e42a4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Use the following functions to create the SM RGEs.", "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, {
  3.892195304294286*^9, 3.8921953153549557`*^9}},
 FontWeight->"Bold",ExpressionUUID->"ae9d726d-9a18-46f5-a11d-69c5877f0632"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rgeSMto\[CapitalLambda]reset", "[", 
   RowBox[{"vevscaleboundaryConditionSM", ",", 
    SuperscriptBox["10", "3"], ",", "172"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.89219476088463*^9, 3.8921947864802113`*^9}, 
   3.892194842151513*^9, 3.892195329736376*^9},
 FontWeight->"Bold",
 CellLabel->"In[5]:=",ExpressionUUID->"04e0595d-452b-455e-8af8-2a295d08b8ac"],

Cell[CellGroupData[{

Cell[BoxData["0.611765`"], "EchoTiming",
 CellChangeTimes->{
  3.895654351625762*^9},ExpressionUUID->"d0bb37f1-918b-4270-b06f-\
75fb575f2645"],

Cell[BoxData["\<\"Output saved in 'rgeSMto\[CapitalLambda]'\"\>"], "Print",
 CellChangeTimes->{3.895649720877665*^9, 3.895653904583961*^9, 
  3.89565419274714*^9, 3.895654351633157*^9},
 CellLabel->
  "During evaluation of \
In[5]:=",ExpressionUUID->"b3f9e18a-bfb1-449b-a80e-d049c31862c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["This output stored in \[OpenCurlyDoubleQuote]rgeSMto\
\[CapitalLambda]\[CloseCurlyDoubleQuote] are the running of the SM couplings \
disregarding all contribution from the singlet. We will use this output to at \
some UV scale (1 TeV in this example).",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}},
 FontWeight->"Bold",ExpressionUUID->"8cba03ca-0596-41f9-aa98-2e469109c3bf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Singlet+Unbroken SM rges", "Section",
 CellChangeTimes->{{3.892194716840225*^9, 3.892194725406621*^9}, {
  3.89219516159726*^9, 3.8921951661799498`*^9}, {3.892195514502874*^9, 
  3.8921955292992563`*^9}, {3.895209541003717*^9, 3.895209570320209*^9}},
 FontWeight->"Bold",ExpressionUUID->"2829038c-c8fd-4f3d-9298-7c13838da9e8"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The boundary conditions",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{
  3.8921949727629147`*^9, {3.892196399800112*^9, 3.892196408006854*^9}},
 FontWeight->"Bold",ExpressionUUID->"54b69eb6-933e-48a9-bd54-f66048cbf887"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["We put the boundary conditions (BCs) for all \
couplings in the theory.",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.892196370141884*^9, 
   3.892196373256632*^9}},
 FontWeight->"Bold",ExpressionUUID->"e18e25f0-4d96-4aea-91e9-1cccbc3bb603"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bsmBC", " ", "=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[CapitalLambda]", " ", "=", " ", "1000"}], ",", "tmp1"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tmp1", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", "\[CapitalLambda]", "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Head", "[", "#", "]"}], "&"}], "/@", 
              RowBox[{"vevscaleboundaryConditionSM", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}], ")"}], 
          ")"}], "==", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "\[CapitalLambda]", "]"}], "&"}], "/@", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Head", "[", "#", "]"}], "&"}], "/@", 
                RowBox[{"vevscaleboundaryConditionSM", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}], ")"}], 
            ")"}], "/.", "rgeSMto\[CapitalLambda]"}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ms2", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "2500."}], ",", "                    ", 
          RowBox[{
           RowBox[{"\[Lambda]s", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "                            ", 
          RowBox[{
           RowBox[{"\[Lambda]s\[Phi]", "[", "\[CapitalLambda]", "]"}], 
           "\[Equal]", "0.000"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Kappa]s", "[", "\[CapitalLambda]", "]"}], " ", 
           "\[Equal]", "0.0000"}], ",", "                     ", 
          RowBox[{
           RowBox[{"\[Kappa]s\[Phi]", "[", "\[CapitalLambda]", "]"}], 
           "\[Equal]", "0.000"}], ",", "                          ", 
          RowBox[{
           RowBox[{"as3", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "                          ", 
          RowBox[{
           RowBox[{"as", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asBt", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.00"}], ",", "                      ", 
          RowBox[{
           RowBox[{"asB", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "                          ", 
          RowBox[{
           RowBox[{"asWt", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "                        ", 
          RowBox[{
           RowBox[{"asW", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asGt", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.00"}], ",", "                      ", 
          RowBox[{
           RowBox[{"asG", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "                          ", 
          RowBox[{
           RowBox[{"as5", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0.000"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ase\[Phi]11", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"ase\[Phi]12", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"ase\[Phi]13", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ase\[Phi]21", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"ase\[Phi]22", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"ase\[Phi]23", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ase\[Phi]31", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"ase\[Phi]32", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"ase\[Phi]33", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asd\[Phi]11", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"asd\[Phi]12", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"asd\[Phi]13", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asd\[Phi]21", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"asd\[Phi]22", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"asd\[Phi]23", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asd\[Phi]31", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"asd\[Phi]32", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"asd\[Phi]33", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asu\[Phi]11", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"asu\[Phi]12", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"asu\[Phi]13", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asu\[Phi]21", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"asu\[Phi]22", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"asu\[Phi]23", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"asu\[Phi]31", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                     ", 
          RowBox[{
           RowBox[{"asu\[Phi]32", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}], ",", "                          ", 
          RowBox[{
           RowBox[{"asu\[Phi]33", "[", "\[CapitalLambda]", "]"}], "\[Equal]", 
           "0."}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Join", "[", 
           RowBox[{"tmp1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"DeleteCases", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"Thread", "[", 
                    RowBox[{
                    RowBox[{"Keys", "[", "#", "]"}], "->", 
                    RowBox[{"(", 
                    RowBox[{"Conjugate", "[", 
                    RowBox[{"Values", "[", "#", "]"}], "]"}], ")"}]}], "]"}], 
                   "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{"tmp1", "/.", 
                    RowBox[{"Equal", "->", "Rule"}]}], ")"}]}], ",", 
                 RowBox[{"Alternatives", "@@", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"g1", "[", "_", "]"}], "->", "_"}], ",", 
                    RowBox[{
                    RowBox[{"g2", "[", "_", "]"}], "->", "_"}], ",", 
                    RowBox[{
                    RowBox[{"g3", "[", "_", "]"}], "->", "_"}], ",", 
                    RowBox[{
                    RowBox[{"\[Mu]H2", "[", "_", "]"}], "->", "_"}], ",", 
                    RowBox[{
                    RowBox[{"\[Lambda]\[Phi]", "[", "_", "]"}], "->", "_"}]}],
                    "}"}]}]}], "]"}], "/.", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Ye11", "\[Rule]", "Yebar11"}], ",", 
                 RowBox[{"Ye12", "\[Rule]", "Yebar12"}], ",", 
                 RowBox[{"Ye13", "\[Rule]", "Yebar13"}], ",", 
                 RowBox[{"Ye21", "\[Rule]", "Yebar21"}], ",", 
                 RowBox[{"Ye22", "\[Rule]", "Yebar22"}], ",", 
                 RowBox[{"Ye23", "\[Rule]", "Yebar23"}], ",", 
                 RowBox[{"Ye31", "\[Rule]", "Yebar31"}], ",", 
                 RowBox[{"Ye32", "\[Rule]", "Yebar32"}], ",", 
                 RowBox[{"Ye33", "\[Rule]", "Yebar33"}], ",", 
                 RowBox[{"Yd11", "\[Rule]", "Ydbar11"}], ",", 
                 RowBox[{"Yd12", "\[Rule]", "Ydbar12"}], ",", 
                 RowBox[{"Yd13", "\[Rule]", "Ydbar13"}], ",", 
                 RowBox[{"Yd21", "\[Rule]", "Ydbar21"}], ",", 
                 RowBox[{"Yd22", "\[Rule]", "Ydbar22"}], ",", 
                 RowBox[{"Yd23", "\[Rule]", "Ydbar23"}], ",", 
                 RowBox[{"Yd31", "\[Rule]", "Ydbar31"}], ",", 
                 RowBox[{"Yd32", "\[Rule]", "Ydbar32"}], ",", 
                 RowBox[{"Yd33", "\[Rule]", "Ydbar33"}], ",", 
                 RowBox[{"Yu11", "\[Rule]", "Yubar11"}], ",", 
                 RowBox[{"Yu12", "\[Rule]", "Yubar12"}], ",", 
                 RowBox[{"Yu13", "\[Rule]", "Yubar13"}], ",", 
                 RowBox[{"Yu21", "\[Rule]", "Yubar21"}], ",", 
                 RowBox[{"Yu22", "\[Rule]", "Yubar22"}], ",", 
                 RowBox[{"Yu23", "\[Rule]", "Yubar23"}], ",", 
                 RowBox[{"Yu31", "\[Rule]", "Yubar31"}], ",", 
                 RowBox[{"Yu32", "\[Rule]", "Yubar32"}], ",", 
                 RowBox[{"Yu33", "\[Rule]", "Yubar33"}]}], "}"}]}], ")"}], "/.", 
             RowBox[{"Rule", "->", "Equal"}]}]}], "]"}]}], ")"}]}], 
       "\[IndentingNewLine]", "\t", "]"}]}]}], "]"}]}], ";"}]], "Input",
 PageWidth->Infinity,
 CellChangeTimes->{{3.887970399700261*^9, 3.8879704491762543`*^9}, {
   3.8879705324604397`*^9, 3.887970639943322*^9}, {3.8879707618351183`*^9, 
   3.887970762484013*^9}, {3.887970846122492*^9, 3.887970901457696*^9}, {
   3.887970955313181*^9, 3.8879710059516087`*^9}, {3.887971087620854*^9, 
   3.8879712207497272`*^9}, {3.8879713887067127`*^9, 3.887971391824238*^9}, {
   3.888047826712777*^9, 3.88804784599367*^9}, {3.8880478833319607`*^9, 
   3.8880478844902573`*^9}, 3.888048035815259*^9, {3.888048069631073*^9, 
   3.888048103298786*^9}, {3.8880481855211153`*^9, 3.8880483207289057`*^9}, 
   3.8880500059354553`*^9, {3.888483482970097*^9, 3.888483542192504*^9}, {
   3.888484100014052*^9, 3.888484113035853*^9}, {3.888484669646955*^9, 
   3.888484748763838*^9}, {3.8885749387292852`*^9, 3.888574940837771*^9}, {
   3.8885750672513857`*^9, 3.8885750711118393`*^9}, 3.888909225180784*^9, {
   3.888984912241705*^9, 3.888984913822638*^9}, {3.888984988820479*^9, 
   3.8889850623629093`*^9}, {3.888985463647727*^9, 3.888985467319799*^9}, 
   3.8889886119835043`*^9, {3.888988659025525*^9, 3.8889886791292152`*^9}, 
   3.8889887947275*^9, {3.889068561859934*^9, 3.8890685641433907`*^9}, {
   3.889678676623954*^9, 3.889678677361383*^9}, {3.889687229411738*^9, 
   3.889687244858569*^9}, {3.889687405165608*^9, 3.8896874705190887`*^9}, 
   3.8896888197402163`*^9, {3.889689881717634*^9, 3.889689892112932*^9}, 
   3.889689922750136*^9, {3.8896900495136538`*^9, 3.889690050000739*^9}, {
   3.889763765044176*^9, 3.889763777586773*^9}, {3.889764225843684*^9, 
   3.889764228775187*^9}, {3.8897645830944347`*^9, 3.889764624721491*^9}, {
   3.889767061528734*^9, 3.889767106966098*^9}, {3.889767144930407*^9, 
   3.8897671524318743`*^9}, {3.889767364315372*^9, 3.889767371929018*^9}, {
   3.88977060013481*^9, 3.88977060028865*^9}, {3.889770677850788*^9, 
   3.889770678262681*^9}, {3.889773471363599*^9, 3.889773479736712*^9}, {
   3.8897735183386374`*^9, 3.889773576267477*^9}, {3.8897737187795963`*^9, 
   3.889773722197793*^9}, {3.889774410433049*^9, 3.889774410863221*^9}, {
   3.8897870875857077`*^9, 3.889787116564831*^9}, {3.889787220722179*^9, 
   3.889787236934547*^9}, 3.889791116977768*^9, {3.889795251216525*^9, 
   3.8897953314416027`*^9}, {3.889795398499371*^9, 3.8897954734847593`*^9}, {
   3.889795586972101*^9, 3.889795667846466*^9}, {3.889795890060998*^9, 
   3.889795913000031*^9}, {3.8897959633693533`*^9, 3.889795965562114*^9}, 
   3.890125329964591*^9, 3.890125577881596*^9, {3.8901259673918467`*^9, 
   3.89012599280606*^9}, 3.890200048436414*^9, 3.89020016308178*^9, {
   3.890200412137532*^9, 3.8902004158350773`*^9}, {3.890200598882381*^9, 
   3.890200639081171*^9}, {3.890200805549561*^9, 3.890200808496984*^9}, {
   3.890293556281014*^9, 3.890293566271923*^9}, {3.890294364802443*^9, 
   3.890294372740593*^9}, {3.890311587537683*^9, 3.890311615868455*^9}, {
   3.8903129179124107`*^9, 3.8903129209562674`*^9}, {3.890313234702868*^9, 
   3.890313284398633*^9}, {3.8903133650184317`*^9, 3.890313408593844*^9}, {
   3.890313569684903*^9, 3.890313652580721*^9}, 3.890313686117263*^9, {
   3.8903818347067137`*^9, 3.89038184440387*^9}, 3.890724327460684*^9, {
   3.890724409248476*^9, 3.89072440985073*^9}, {3.890724507058834*^9, 
   3.8907245175150642`*^9}, {3.8907245833893633`*^9, 3.89072458718882*^9}, {
   3.890730195945384*^9, 3.8907302483954773`*^9}, 3.890730937789734*^9, {
   3.8907312068286457`*^9, 3.890731208362479*^9}, {3.890741655179986*^9, 
   3.890741668874487*^9}, 3.890766140256544*^9, 3.890766274541239*^9, {
   3.890766712669219*^9, 3.890766723892274*^9}, 3.890766797536034*^9, {
   3.890766996460108*^9, 3.890766999027454*^9}, {3.890806362947116*^9, 
   3.8908063689147167`*^9}, {3.890810283950829*^9, 3.8908102972296743`*^9}, {
   3.890822606787678*^9, 3.8908226323495398`*^9}, 3.890888176468865*^9, {
   3.890988491967402*^9, 3.8909884948661537`*^9}, {3.890989096635107*^9, 
   3.890989098709815*^9}, {3.890989212046815*^9, 3.890989216300572*^9}, {
   3.890990999854601*^9, 3.890990999958255*^9}, {3.890993939981739*^9, 
   3.89099395450774*^9}, {3.89099419508117*^9, 3.890994196582163*^9}, {
   3.891056248395006*^9, 3.891056292418688*^9}, {3.891056711730926*^9, 
   3.8910567119589653`*^9}, {3.891056758273677*^9, 3.891056760156519*^9}, {
   3.891056886219108*^9, 3.891056916075824*^9}, {3.8910613882279177`*^9, 
   3.891061402964821*^9}, {3.891061777128633*^9, 3.8910617788966093`*^9}, {
   3.891062314578466*^9, 3.891062332261544*^9}, {3.891062370492187*^9, 
   3.891062374339061*^9}, {3.89106243686131*^9, 3.891062438050845*^9}, 
   3.8910625501832457`*^9, 3.891062641567724*^9, 3.8910629044615192`*^9, 
   3.89106314229009*^9, {3.891063246432418*^9, 3.89106325394486*^9}, {
   3.891068520050511*^9, 3.891068521731003*^9}, {3.891068577608222*^9, 
   3.891068600368658*^9}, 3.891068686689049*^9, {3.891069326451663*^9, 
   3.891069334474526*^9}, 3.89106951044044*^9, {3.891069871390998*^9, 
   3.8910698727392406`*^9}, 3.891070105217465*^9, 3.8910701432601957`*^9, {
   3.891070190918334*^9, 3.891070192165538*^9}, {3.891070278463194*^9, 
   3.891070280052486*^9}, 3.891070316406124*^9, 3.891074340258553*^9, {
   3.891319957285987*^9, 3.891319957663735*^9}, {3.891320821498323*^9, 
   3.891320822049856*^9}, {3.891320935828189*^9, 3.8913209362411623`*^9}, {
   3.8914078261698627`*^9, 3.8914078272484083`*^9}, {3.895210266849422*^9, 
   3.89521030128734*^9}, 3.895651983885413*^9},
 FontWeight->"Bold",
 CellLabel->"In[6]:=",ExpressionUUID->"b1e9aa37-5e78-45c8-b183-7bd130c6a3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["We call the function \
\[OpenCurlyDoubleQuote]rgePSEFTreset\[CloseCurlyDoubleQuote] with the BCs and \
the scales. RGEs are saved in \[OpenCurlyQuote]rgePSEFT\[CloseCurlyQuote].",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649803416532*^9}},
 FontWeight->"Bold",ExpressionUUID->"fcb2a2c2-5442-427c-9263-9cf366eee144"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rgePSEFTreset", "[", 
   RowBox[{"bsmBC", ",", "1000", ",", "172"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.89219631891475*^9, 3.892196334006754*^9}, 
   3.895649782846178*^9, 3.8956519862920017`*^9},
 FontWeight->"Bold",
 CellLabel->"In[7]:=",ExpressionUUID->"d3ef75b4-9832-443a-ace2-adf3c138e3f6"],

Cell[BoxData["2.156484`"], "EchoTiming",
 CellChangeTimes->{
  3.8956543607661467`*^9},ExpressionUUID->"7a79a240-362d-426c-ad89-\
fc65528ac838"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Parametric solving",
 FontWeight->"Bold"]], "Subsection",
 CellChangeTimes->{
  3.8921949727629147`*^9, {3.892196399800112*^9, 3.892196408006854*^9}, {
   3.892196529837178*^9, 3.892196533586128*^9}},
 FontWeight->"Bold",ExpressionUUID->"188c2f4c-0230-4cb3-a6d7-094bbc54c9fa"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["One can solve the RGEs with parameters. RGEs are \
saved in \[OpenCurlyQuote]rgePSEFTparamsolve\[CloseCurlyQuote].",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}},
 FontWeight->"Bold",ExpressionUUID->"95bcf5d1-ed2c-4a4b-a4b2-ec26adbf416f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rgePSEFTparamsolvereset", "[", 
   RowBox[{"bsmBC", ",", "1000", ",", "172", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Mu]H2", ",", "\[Mu]H2param"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]\[Phi]", ",", "\[Lambda]\[Phi]param"}], "}"}]}], 
     "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.895649874508587*^9, 3.895649879105379*^9}, 
   3.89565198901705*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"3badc58f-a3a4-4893-af28-3c19b2106783"],

Cell[BoxData["0.01434`"], "EchoTiming",
 CellChangeTimes->{
  3.895654362599504*^9},ExpressionUUID->"89297fd8-7785-427b-8445-\
1772cdf93d5d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["One can solve also put in UV boundary conditions \
(satisfying tadpole equations):",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}, {
   3.8956506195908823`*^9, 3.8956506400245247`*^9}},
 FontWeight->"Bold",ExpressionUUID->"a6ad8f01-1962-4333-b2d3-cf2e6bb5d626"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bsmBC", "=", 
   RowBox[{"bsmBC", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Mu]H2", "[", "1000", "]"}], "==", "_"}], ")"}], "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Mu]H2", "[", "1000", "]"}], "==", "7867.071640983865`"}], 
        ")"}]}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Lambda]\[Phi]", "[", "1000", "]"}], "==", "_"}], ")"}], "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Lambda]\[Phi]", "[", "1000", "]"}], "==", 
         "0.13000077120797016`"}], ")"}]}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.895650415565772*^9, 3.8956504159924603`*^9}, {
  3.895650513067333*^9, 3.89565053064962*^9}, {3.895651992215513*^9, 
  3.8956519935348177`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ee092d8e-613d-4c72-b6dc-61365551b727"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["And then compute the UV RGEs:",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}, {
   3.8956506195908823`*^9, 3.895650659017376*^9}},
 FontWeight->"Bold",ExpressionUUID->"bb9fedc2-9d5a-462a-83a1-1fadeeab48d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rgePSEFTparamsolvereset", "[", 
   RowBox[{"bsmBC", ",", "1000", ",", "172", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"asBt", ",", "asBtparam"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"asB", ",", "asBparam"}], "}"}]}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.895651994956647*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"b4be9311-4ec3-4824-b18d-3cbf932f275c"],

Cell[BoxData["0.024753`"], "EchoTiming",
 CellChangeTimes->{
  3.895655316555208*^9},ExpressionUUID->"3c462616-6960-49e9-94cb-\
dd35e0f9aba5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running in broken-phase", "Section",
 CellChangeTimes->{{3.892194716840225*^9, 3.892194725406621*^9}, {
   3.89219516159726*^9, 3.8921951661799498`*^9}, {3.892195514502874*^9, 
   3.8921955292992563`*^9}, {3.89219656792104*^9, 3.8921965786820383`*^9}, 
   3.892196703520088*^9, 3.895210241738164*^9},
 FontWeight->"Bold",ExpressionUUID->"7d520e41-1d86-47ee-b060-f44552eb82dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"uvparamvaluelist", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", "172", "]"}], "&"}], "/@", 
     RowBox[{"rgePSEFTparamsolve", "[", " ", 
      RowBox[{"(*", 
       RowBox[{"benchmark", " ", "point"}], "*)"}], 
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}], ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}]}], "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.895651377800274*^9, 3.895651412066073*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d93def55-b07b-4810-8737-fb80e8847fc5"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solving VS:",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}, {
   3.8956506195908823`*^9, 3.895650659017376*^9}, {3.895650731064293*^9, 
   3.895650762976428*^9}, {3.895650934160921*^9, 3.8956509362450733`*^9}, {
   3.8956510073652573`*^9, 3.8956510076071787`*^9}},
 FontWeight->"Bold",ExpressionUUID->"460f12c8-66f0-45b5-a5ea-b1f3e1c82a88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveVsNP", "=", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "2"}], " ", "ms2", "  ", "Vs"}], "-", 
         RowBox[{"\[Kappa]s\[Phi]", " ", 
          SuperscriptBox["V\[Phi]", "2"]}], " ", "-", 
         RowBox[{"\[Lambda]s\[Phi]", "  ", 
          SuperscriptBox["V\[Phi]", "2"], " ", "Vs"}], "  ", "-", 
         RowBox[{"\[Kappa]s", " ", 
          SuperscriptBox["Vs", "2"]}], " ", "-", 
         RowBox[{
          FractionBox[
           RowBox[{"\[Lambda]s", " "}], "3"], " ", 
          SuperscriptBox["Vs", "3"]}], " ", "+", 
         RowBox[{
          FractionBox[
           RowBox[{"as", " "}], "2"], " ", 
          SuperscriptBox["V\[Phi]", "4"]}], "+", " ", 
         RowBox[{"3", " ", "as3", "   ", 
          SuperscriptBox["V\[Phi]", "2"], " ", 
          SuperscriptBox["Vs", "2"]}], "  ", "+", 
         RowBox[{"10", " ", "as5", "  ", 
          SuperscriptBox["Vs", "4"]}]}], ")"}], "/.", 
       RowBox[{"V\[Phi]", "->", "246"}]}], "/.", 
      RowBox[{"chop", "@", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"(", "varsPSEFT", ")"}], "->", "uvparamvaluelist"}], 
        "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"Vs", ",", "0"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.89565079490781*^9, 3.895650892622134*^9}, 
   3.895650925993414*^9, {3.8956513133222723`*^9, 3.895651365112443*^9}, {
   3.895651395336543*^9, 3.895651415538184*^9}, {3.895651448165805*^9, 
   3.895651454390608*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"26fa95d2-91e3-4f8c-a07d-82addea6de71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Making a list of UV parameter values:",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}, {
   3.8956506195908823`*^9, 3.895650659017376*^9}, {3.895650731064293*^9, 
   3.895650762976428*^9}, {3.895650934160921*^9, 3.8956509852610483`*^9}},
 FontWeight->"Bold",ExpressionUUID->"62a1f012-489a-428e-8c28-bbc5314bd385"],

Cell[BoxData[
 RowBox[{
  RowBox[{"npparamters", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", "172", "]"}], "&"}], "/@", "varsPSEFT"}], ")"}], "->",
      "uvparamvaluelist"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.895650949088358*^9, 3.8956509830653343`*^9}, {
   3.8956513502755527`*^9, 3.89565135131854*^9}, 3.895651467351873*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"a38ea359-1143-4150-8027-66e0ff939e1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Solving mixing-angle \[Theta] :",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}, {
   3.8956506195908823`*^9, 3.895650659017376*^9}, {3.895650731064293*^9, 
   3.895650762976428*^9}, {3.895650934160921*^9, 3.8956509362450733`*^9}, {
   3.8956509930518*^9, 3.895651005117168*^9}},
 FontWeight->"Bold",ExpressionUUID->"3e43b3c6-8ef3-41f5-98df-da266e546754"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mixang", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"WC\[Theta]", "[", "172", "]"}], "->", 
        RowBox[{
         FractionBox["1", "2"], "*", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "as", " ", 
               SuperscriptBox["V\[Phi]", "4"]}], "+", 
              RowBox[{"40", " ", "as5", " ", 
               SuperscriptBox["Vs", "4"]}], "-", 
              RowBox[{
               FractionBox["4", "3"], "Vs", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", "ms2"}], " ", "+", 
                 RowBox[{"3", "\[Kappa]s", "  ", "Vs"}], " ", "+", " ", 
                 RowBox[{"\[Lambda]s", "  ", 
                  SuperscriptBox["Vs", "2"]}]}], ")"}]}]}], ")"}], 
            RowBox[{"V\[Phi]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", "as"}], "  ", "-", " ", 
                  RowBox[{"6", " ", "as3"}]}], " ", ")"}], " ", 
                SuperscriptBox["V\[Phi]", "2"], " ", "Vs"}], " ", "-", " ", 
               RowBox[{"40", " ", "as5", "  ", 
                SuperscriptBox["Vs", "3"]}], "+", 
               RowBox[{"2", " ", "ms2"}], "  ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], "\[Lambda]\[Phi]"}], " ", "+", 
                  "\[Lambda]s\[Phi]"}], " ", ")"}], 
                SuperscriptBox["Vs", "2"]}], "+", 
               RowBox[{"Vs", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "\[Kappa]s"}], " ", "+", 
                  RowBox[{"\[Lambda]s", "  ", "Vs"}]}], ")"}]}]}], ")"}]}]], 
           ")"}], "]"}]}]}], "/.", 
       RowBox[{"(", 
        RowBox[{"npparamters", "/.", 
         RowBox[{
          RowBox[{"aa_", "[", "172", "]"}], ":>", "aa"}]}], ")"}]}], "/.", 
      "solveVsNP"}], "/.", 
     RowBox[{"V\[Phi]", "->", "246"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{3.8956509872491913`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"7716b4c8-c59e-4319-a983-a3d21272542f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["PSLEFTmatching[172] are the matching relations of \
parameter of HE and LE theories.",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.892194813192451*^9, 3.892194831628909*^9}, 
   3.892194868972439*^9, {3.892195352250757*^9, 3.8921954726377087`*^9}, {
   3.892196275832589*^9, 3.892196291594953*^9}, {3.8921963363419657`*^9, 
   3.8921963631857977`*^9}, {3.8956497933559237`*^9, 3.895649870175591*^9}, {
   3.8956506195908823`*^9, 3.895650659017376*^9}, {3.895650731064293*^9, 
   3.895650762976428*^9}},
 FontWeight->"Bold",ExpressionUUID->"4d956b42-cf7a-433c-8ff2-23d1c9b410ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"boundaryConditionLE", "=", 
   RowBox[{"bcLE", "[", 
    RowBox[{
     RowBox[{"PSLEFTmatching", "[", "172", "]"}], ",", "rgePSEFTparamsolve", 
     ",", 
     RowBox[{"{", 
      RowBox[{"(*", 
       RowBox[{"benchmark", " ", "point"}], "*)"}], 
      RowBox[{
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}], ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "6"}], ")"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rgeLEreset", "[", 
   RowBox[{"boundaryConditionLE", ",", "172", ",", "5"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.89565030856749*^9, 3.895650352263692*^9}, {
  3.895650385869224*^9, 3.89565041988445*^9}, {3.895650662055943*^9, 
  3.895650683298381*^9}, {3.895651502744063*^9, 3.895651504112609*^9}, {
  3.895651536386243*^9, 3.895651578444852*^9}, {3.895652221803001*^9, 
  3.8956522383642683`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7e164881-5a3b-4b2b-9933-4be5492e64e6"],

Cell[BoxData["5.498499`"], "EchoTiming",
 CellChangeTimes->{
  3.8956543765970716`*^9},ExpressionUUID->"5eb01f1a-cc78-44fb-af33-\
e01294cc3c2f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining an observable and making UV parameter scan", "Section",
 CellChangeTimes->{{3.8846668833433113`*^9, 3.884666886334733*^9}, {
   3.887975418324301*^9, 3.8879754325239773`*^9}, {3.887975519061376*^9, 
   3.8879755317051153`*^9}, {3.889119859162771*^9, 3.889119862566577*^9}, {
   3.8897984280753107`*^9, 3.889798428761602*^9}, {3.8902937517668247`*^9, 
   3.8902937816508493`*^9}, 3.8909694254023943`*^9, {3.890992530324231*^9, 
   3.890992539587619*^9}, {3.890992596934443*^9, 3.890992598752364*^9}, {
   3.890992886203423*^9, 3.890992888106452*^9}, {3.8910566712117853`*^9, 
   3.89105667972088*^9}, {3.891148929019561*^9, 3.891148930674893*^9}, {
   3.891153363991143*^9, 3.891153376019561*^9}, {3.895651602055806*^9, 
   3.895651622072814*^9}},
 FontWeight->"Bold",ExpressionUUID->"0066c6e0-7422-4bc1-9b29-5a5105556409"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"scanHEspace", "[", 
  RowBox[{"bsmBC", ",", "1000", ",", "172", ",", "5", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"asBt", ",", "asBtparam"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"asB", ",", "asBparam"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", 
          RowBox[{"-", "6"}]}], ",", 
         RowBox[{"10", "^", 
          RowBox[{"-", "6"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"10", "^", 
          RowBox[{"-", "6"}]}], ",", 
         RowBox[{"10", "^", 
          RowBox[{"-", "6"}]}]}], "}"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]ThORATIO", ",", "DHgRATIO", ",", "DnRATIO"}], "}"}], ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Output.m\>\""}], 
     "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.895651926101012*^9, {3.895653215795335*^9, 3.895653215884226*^9}, {
   3.895653950331321*^9, 3.8956539530537863`*^9}, {3.8956542485715103`*^9, 
   3.895654272575027*^9}, {3.895654308819512*^9, 3.895654315362728*^9}, {
   3.895655226650818*^9, 3.895655229284153*^9}, {3.895655489424326*^9, 
   3.895655517742495*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"f7593c05-8bd4-44ba-8a4a-2b35884f2c36"],

Cell[CellGroupData[{

Cell[BoxData["0.035936`"], "EchoTiming",
 CellChangeTimes->{
  3.895656582879776*^9},ExpressionUUID->"64390199-7870-4927-b0ba-\
2d53f6671914"],

Cell[BoxData["5.545787`"], "EchoTiming",
 CellChangeTimes->{
  3.8956565907988577`*^9},ExpressionUUID->"4cd58eb5-b53e-4df7-b3bf-\
603a27078561"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Customizations:", "Subsection",
 CellChangeTimes->{{3.895656447244363*^9, 
  3.895656465633081*^9}},ExpressionUUID->"df664d5f-df5a-410b-921f-\
974b90123bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"scanHEspace", "[", 
   RowBox[{
   "bsmBC_", ",", "Lam_", ",", "MatScale_", ",", "computeScale_", ",", 
    "paramlist_", ",", "window_", ",", "Observable_", ",", "filename_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Alpha]em", "=", 
       RowBox[{
        RowBox[{"WCgem", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", "\[Pi]"}], ")"}]}]}], ",", 
      RowBox[{"\[Alpha]3", "=", 
       RowBox[{
        RowBox[{"WCg3", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"4", "\[Pi]"}], ")"}]}]}], ",", 
      RowBox[{"QU", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "/", "3"}], ",", 
         RowBox[{"2", "/", "3"}]}], "}"}]}], ",", 
      RowBox[{"QD", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "/", "3"}], ",", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "3"}], ",", 
         RowBox[{
          RowBox[{"-", "1"}], "/", "3"}]}], "}"}]}], ",", 
      RowBox[{"QL", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], ",", 
      RowBox[{"hbarc", "=", 
       RowBox[{"197.3269804", "*", 
        SuperscriptBox["10", "6"], "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "15"}]], "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "9"}]]}]}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Factor", " ", "required", " ", "to", " ", "convert", " ", "from", " ",
         "natural", " ", "units", " ", "in", " ", 
        SuperscriptBox["GeV", 
         RowBox[{"-", "1"}]], " ", "to", " ", "IS", " ", "units", " ", "in", 
        " ", 
        RowBox[{"m", "."}]}], " ", "*)"}], ",", "\[IndentingNewLine]", 
      "DHgOVEReEXP", ",", "DnOVEReEXP", ",", 
      RowBox[{"\[Omega]ThOEXP", "=", "1.3"}], 
      RowBox[{"(*", " ", 
       RowBox[{"mrad", "/", "s"}], " ", "*)"}], ",", "L", ",", "F", ",", "G", 
      ",", "H", ",", "f", ",", "g", ",", "h", ",", "l", ",", "FunctionsRule", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"datalist\[Omega]ThO", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"datalist\[Omega]ThO2", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"datalistdHg", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"datalistdHg2", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"datalistdn", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"datalistdn2", "=", 
       RowBox[{"{", "}"}]}], ",", "randompoints", ",", "List1", ",", 
      "RulePackage"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"DHgOVEReEXP", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"6", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "32"}]]}], 
        RowBox[{"(*", " ", "m", " ", "*)"}], ")"}], "/", "hbarc"}]}], " ", 
     RowBox[{"(*", " ", 
      SuperscriptBox["GeV", 
       RowBox[{"-", "1"}]], "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"DnOVEReEXP", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1.8", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "28"}]]}], 
        RowBox[{"(*", " ", "m", " ", "*)"}], ")"}], "/", "hbarc"}]}], "  ", 
     RowBox[{"(*", " ", 
      SuperscriptBox["GeV", 
       RowBox[{"-", "1"}]], " ", "*)"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"L", "[", "x_", "]"}], ":=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"4", "x"}], "+", 
         RowBox[{"x", "^", "2"}], " ", "+", 
         RowBox[{"2", 
          RowBox[{"Log", "[", "x", "]"}]}]}], ")"}], "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "x"}], ")"}], "3"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"F", "[", "z_", "]"}], ":=", 
      RowBox[{
       FractionBox["1", "2"], "z", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"1", "-", 
            RowBox[{"2", "x", 
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}]}]}], 
           RowBox[{
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}]}], "-", "z"}]], 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}]}], "z"], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"G", "[", "z_", "]"}], ":=", 
      RowBox[{
       FractionBox["1", "2"], "z", " ", 
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          FractionBox["1", 
           RowBox[{
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}]}], "-", "z"}]], 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{"1", "-", "x"}], ")"}]}], "z"], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"H", "[", "z_", "]"}], ":=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["z", "2"], " ", 
           SuperscriptBox["u", "3"], " ", 
           SuperscriptBox["x", "3"], 
           RowBox[{"(", 
            RowBox[{"1", "-", "x"}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"z", " ", "x", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"u", " ", "x"}]}], ")"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "u"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "x"}], ")"}]}]}], ")"}], "2"]]}], ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"Method", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
           RowBox[{
           "\"\<SingularityHandler\>\"", "\[Rule]", 
            "\"\<DuffyCoordinates\>\""}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"FunctionsRule", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "\[Rule]", "F"}], ",", 
        RowBox[{"g", "\[Rule]", "G"}], ",", 
        RowBox[{"h", "\[Rule]", "H"}], ",", 
        RowBox[{"l", "\[Rule]", "L"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\n", 
     RowBox[{"randompoints", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"window", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"window", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n1", ",", 
          RowBox[{"window", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"rgePSEFTparamsolvereset", "[", 
      RowBox[{"bsmBC", ",", "Lam", ",", "MatScale", ",", " ", "paramlist"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"solveVsNP", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", " ", "2"}], " ", "ms2", "  ", "Vs"}], "-", 
               RowBox[{"\[Kappa]s\[Phi]", " ", 
                SuperscriptBox["V\[Phi]", "2"]}], " ", "-", 
               RowBox[{"\[Lambda]s\[Phi]", "  ", 
                SuperscriptBox["V\[Phi]", "2"], " ", "Vs"}], "  ", "-", 
               RowBox[{"\[Kappa]s", " ", 
                SuperscriptBox["Vs", "2"]}], " ", "-", 
               RowBox[{
                FractionBox[
                 RowBox[{"\[Lambda]s", " "}], "3"], " ", 
                SuperscriptBox["Vs", "3"]}], " ", "+", 
               RowBox[{
                FractionBox[
                 RowBox[{"as", " "}], "2"], " ", 
                SuperscriptBox["V\[Phi]", "4"]}], "+", " ", 
               RowBox[{"3", " ", "as3", "   ", 
                SuperscriptBox["V\[Phi]", "2"], " ", 
                SuperscriptBox["Vs", "2"]}], "\[IndentingNewLine]", " ", "+", 
               
               RowBox[{"10", " ", "as5", "  ", 
                SuperscriptBox["Vs", "4"]}]}], ")"}], "/.", 
             RowBox[{"V\[Phi]", "->", "246"}]}], "/.", 
            RowBox[{"chop", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"(", "varsPSEFT", ")"}], "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", "MatScale", "]"}], "&"}], "/@", 
                 RowBox[{"rgePSEFTparamsolve", "[", " ", 
                  RowBox[{
                   RowBox[{"randompoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", " ", 
                   RowBox[{"randompoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
                ")"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Vs", ",", "0"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"npparamters", "=", 
         RowBox[{"chop", "[", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "MatScale", "]"}], "&"}], "/@", 
              "varsPSEFT"}], ")"}], "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "MatScale", "]"}], "&"}], "/@", 
              RowBox[{"rgePSEFTparamsolve", "[", 
               RowBox[{
                RowBox[{"randompoints", "[", 
                 RowBox[{"[", 
                  RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"randompoints", "[", 
                 RowBox[{"[", 
                  RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        
        RowBox[{"mixang", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"WC\[Theta]", "[", "MatScale", "]"}], "->", 
              RowBox[{
               FractionBox["1", "2"], "*", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"(", 
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "as", " ", 
                    SuperscriptBox["V\[Phi]", "4"]}], "+", 
                    RowBox[{"40", " ", "as5", " ", 
                    SuperscriptBox["Vs", "4"]}], "-", 
                    RowBox[{
                    FractionBox["4", "3"], "Vs", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "ms2"}], " ", "+", 
                    RowBox[{"3", "\[Kappa]s", "  ", "Vs"}], " ", "+", " ", 
                    RowBox[{"\[Lambda]s", "  ", 
                    SuperscriptBox["Vs", "2"]}]}], ")"}]}]}], ")"}], 
                  RowBox[{"V\[Phi]", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "as"}], "  ", "-", " ", 
                    RowBox[{"6", " ", "as3"}]}], " ", ")"}], " ", 
                    SuperscriptBox["V\[Phi]", "2"], " ", "Vs"}], " ", "-", 
                    " ", 
                    RowBox[{"40", " ", "as5", "  ", 
                    SuperscriptBox["Vs", "3"]}], "+", 
                    RowBox[{"2", " ", "ms2"}], "  ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], "\[Lambda]\[Phi]"}], " ", "+", 
                    "\[Lambda]s\[Phi]"}], " ", ")"}], 
                    SuperscriptBox["Vs", "2"]}], "+", 
                    RowBox[{"Vs", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "\[Kappa]s"}], " ", "+", 
                    RowBox[{"\[Lambda]s", "  ", "Vs"}]}], ")"}]}]}], ")"}]}]],
                  ")"}], "]"}]}]}], "/.", 
             RowBox[{"(", 
              RowBox[{"npparamters", "/.", 
               RowBox[{
                RowBox[{"aa_", "[", "MatScale", "]"}], "->", "aa"}]}], 
              ")"}]}], "/.", "solveVsNP"}], "/.", 
           RowBox[{"V\[Phi]", "->", "246"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"-", "HIGH"}]}]}]}]}]}]}]}]}], " ", "ENERGY", " ", 
           "EFT", " ", "RUNNING", " ", "AND", " ", "MASS", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DIAGONALIZATION", "--"}], "--"}], "--"}], "--"}],
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
            "--"}]}], "-"}], " ", "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"solveVsNP", "=", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", " ", "2"}], " ", "ms2", "  ", "Vs"}], "-", 
               RowBox[{"\[Kappa]s\[Phi]", " ", 
                RowBox[{"V\[Phi]", "^", "2"}]}], " ", "-", 
               RowBox[{"\[Lambda]s\[Phi]", "  ", 
                RowBox[{"V\[Phi]", "^", "2"}], " ", "Vs"}], "  ", "-", 
               RowBox[{"\[Kappa]s", " ", 
                RowBox[{"Vs", "^", "2"}]}], " ", "-", 
               RowBox[{
                RowBox[{"\[Lambda]s", " ", "/", "3"}], " ", 
                RowBox[{"Vs", "^", "3"}]}], " ", "+", 
               RowBox[{
                RowBox[{"as", " ", "/", "2"}], " ", 
                RowBox[{"V\[Phi]", "^", "4"}]}], "+", " ", 
               RowBox[{"3", " ", "as3", "   ", 
                RowBox[{"V\[Phi]", "^", "2"}], " ", 
                RowBox[{"Vs", "^", "2"}]}], " ", "+", 
               RowBox[{"10", " ", "as5", "  ", 
                RowBox[{"Vs", "^", "4"}]}]}], ")"}], "/.", 
             RowBox[{"V\[Phi]", "->", "245.999"}]}], "/.", 
            RowBox[{"chop", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"(", "varsPSEFT", ")"}], "->", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", "MatScale", "]"}], "&"}], "/@", 
                 RowBox[{"rgePSEFTparamsolve", "[", 
                  RowBox[{"(*", " ", "asd\[Phi]11p", " ", "*)"}], 
                  RowBox[{
                   RowBox[{"randompoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"(*", " ", "asd\[Phi]13p", " ", "*)"}], " ", 
                   RowBox[{"randompoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
                ")"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"Vs", ",", "0"}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"npparamters00", "=", 
         RowBox[{"chop", "[", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "MatScale", "]"}], "&"}], "/@", 
              "varsPSEFT"}], ")"}], "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", "MatScale", "]"}], "&"}], "/@", 
              RowBox[{"rgePSEFTparamsolve", "[", 
               RowBox[{
                RowBox[{"randompoints", "[", 
                 RowBox[{"[", 
                  RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", " ", 
                RowBox[{"randompoints", "[", 
                 RowBox[{"[", 
                  RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "]"}]}], ")"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        
        RowBox[{"mixang", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"WC\[Theta]", "[", "MatScale", "]"}], "->", 
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "as", " ", 
                    RowBox[{"V\[Phi]", "^", "4"}]}], "+", 
                    RowBox[{"40", " ", "as5", " ", 
                    RowBox[{"Vs", "^", "4"}]}], "-", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], " ", "Vs", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"6", " ", "ms2"}], " ", "+", 
                    RowBox[{"3", "\[Kappa]s", "  ", "Vs"}], " ", "+", " ", 
                    RowBox[{"\[Lambda]s", "  ", 
                    RowBox[{"Vs", "^", "2"}]}]}], ")"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"V\[Phi]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", "as"}], "  ", "-", " ", 
                    RowBox[{"6", " ", "as3"}]}], " ", ")"}], " ", 
                    RowBox[{"V\[Phi]", "^", "2"}], " ", "Vs"}], " ", "-", " ", 
                    RowBox[{"40", " ", "as5", "  ", 
                    RowBox[{"Vs", "^", "3"}]}], "+", 
                    RowBox[{"2", " ", "ms2"}], "  ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], "\[Lambda]\[Phi]"}], " ", "+", 
                    "\[Lambda]s\[Phi]"}], " ", ")"}], 
                    RowBox[{"Vs", "^", "2"}]}], "+", 
                    RowBox[{"Vs", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "\[Kappa]s"}], " ", "+", 
                    RowBox[{"\[Lambda]s", "  ", "Vs"}]}], ")"}]}]}], ")"}]}], 
                   ")"}]}], ")"}], "]"}]}]}], "/.", 
             RowBox[{"(", 
              RowBox[{"npparamters00", "/.", 
               RowBox[{
                RowBox[{"aa_", "[", "MatScale", "]"}], "->", "aa"}]}], 
              ")"}]}], "/.", "solveVsNP"}], "/.", 
           RowBox[{"V\[Phi]", "->", "245.999"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\n", 
        "\[IndentingNewLine]", 
        RowBox[{"ivrMUHAT", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"PSLEFTmatching", "[", "MatScale", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{";;", "9"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "3"}], "]"}], 
              "/.", 
              RowBox[{"V\[Phi]", "->", "245.999"}]}], "/.", "solveVsNP"}], "/.",
             "npparamters00"}], "/.", "mixang"}], " ", "/.", 
          RowBox[{
           RowBox[{"\[Theta]QCD", "[", "MatScale", "]"}], "->", "0"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ivrMDHAT", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"PSLEFTmatching", "[", "MatScale", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"19", ";;", "27"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "3"}], "]"}], 
              "/.", 
              RowBox[{"V\[Phi]", "->", "245.999"}]}], "/.", "solveVsNP"}], "/.",
             "npparamters00"}], "/.", "mixang"}], " ", "/.", 
          RowBox[{
           RowBox[{"\[Theta]QCD", "[", "MatScale", "]"}], "->", "0"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"ivrMLHAT", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"PSLEFTmatching", "[", "MatScale", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"37", ";;", "45"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "3"}], "]"}], 
              "/.", 
              RowBox[{"V\[Phi]", "->", "245.999"}]}], "/.", "solveVsNP"}], "/.",
             "npparamters00"}], "/.", "mixang"}], " ", "/.", 
          RowBox[{
           RowBox[{"\[Theta]QCD", "[", "MatScale", "]"}], "->", "0"}]}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fermionmassmatrixU", ",", "AuL"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"chop", "[", 
              RowBox[{"(", " ", 
               RowBox[{"ivrMUHAT", " ", ".", " ", 
                RowBox[{"ConjugateTranspose", "[", "ivrMUHAT", "]"}]}], ")"}],
               "]"}], "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fermionmassmatrixU", ",", "AuR"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"(", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"chop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "ivrMUHAT", "]"}], " ", 
                 ".", " ", "ivrMUHAT"}], " ", ")"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fermionmassmatrixD", ",", "AdL"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"chop", "[", 
              RowBox[{"(", 
               RowBox[{"ivrMDHAT", " ", ".", " ", 
                RowBox[{"ConjugateTranspose", "[", "ivrMDHAT", "]"}]}], ")"}],
               "]"}], "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fermionmassmatrixD", ",", "AdR"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"(", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"chop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "ivrMDHAT", "]"}], " ", 
                 ".", " ", "ivrMDHAT"}], ")"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fermionmassmatrixE", ",", "AeL"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"chop", "[", 
              RowBox[{"(", 
               RowBox[{"ivrMLHAT", " ", ".", " ", 
                RowBox[{"ConjugateTranspose", "[", "ivrMLHAT", "]"}]}], ")"}],
               "]"}], "]"}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"fermionmassmatrixE", ",", "AeR"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"(", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"chop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "ivrMLHAT", "]"}], " ", 
                 ".", " ", "ivrMLHAT"}], ")"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"$Assumptions", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Delta]uL1", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]uL2", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]uL3", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]uR1", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]uR2", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]uR3", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]dL1", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]dL2", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]dL3", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]dR1", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]dR2", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]dR3", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]eL1", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]eL2", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]eL3", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]eR1", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]eR2", "\[Element]", "Reals"}], ",", 
           RowBox[{"\[Delta]eR3", "\[Element]", "Reals"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"KdL", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dL1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dL2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dL3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"KdR", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dR1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dR2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dR3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"KuL", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uL1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uL2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uL3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"KuR", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uR1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uR2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uR3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"KeL", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eL1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eL2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eL3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"KeR", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eR1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eR2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eR3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"LHSKd", "=", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "KdL", "]"}], " ", ".", " ", 
             RowBox[{"ConjugateTranspose", "[", "AdL", "]"}], " ", ".", " ", 
             "ivrMDHAT", " ", ".", " ", "AdR", " ", ".", " ", "KdR"}], ",", 
            RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}], "//", 
          "chop"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LHSKu", "=", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "KuL", "]"}], " ", ".", " ", 
             RowBox[{"ConjugateTranspose", "[", "AuL", "]"}], " ", ".", " ", 
             "ivrMUHAT", " ", ".", " ", "AuR", " ", ".", " ", "KuR"}], ",", 
            RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}], "//", 
          "chop"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"LHSKe", "=", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "KeL", "]"}], " ", ".", " ", 
             RowBox[{"ConjugateTranspose", "[", "AeL", "]"}], " ", ".", " ", 
             "ivrMLHAT", " ", ".", " ", "AeR", " ", ".", " ", "KeR"}], ",", 
            RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}], "//", 
          "chop"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"SolKdRot", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{"LHSKd", "==", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Sqrt", "[", "fermionmassmatrixD", "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Delta]dL1", ",", "\[Delta]dL2", ",", "\[Delta]dL3"}], 
                "}"}]}], "]"}]}], "//", "chop"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SolKuRot", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{"LHSKu", "==", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Sqrt", "[", "fermionmassmatrixU", "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Delta]uL1", ",", "\[Delta]uL2", ",", "\[Delta]uL3"}], 
                "}"}]}], "]"}]}], "//", "chop"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"SolKeRot", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{"LHSKe", "==", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Sqrt", "[", "fermionmassmatrixE", "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Delta]eL1", ",", "\[Delta]eL2", ",", "\[Delta]eL3"}], 
                "}"}]}], "]"}]}], "//", "chop"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\n", 
        
        RowBox[{"FinalVdL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"AdL", " ", ".", " ", "KdL"}], ")"}], "/.", 
             "SolKdRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"FinalVdR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"AdR", " ", ".", " ", "KdR"}], ")"}], "/.", 
             "SolKdRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"FinalVuL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"AuL", " ", ".", " ", "KuL"}], ")"}], "/.", 
             "SolKuRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"FinalVuR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"AuR", " ", ".", " ", "KuR"}], ")"}], "/.", 
             "SolKuRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"FinalVeL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"AeL", " ", ".", " ", "KeL"}], ")"}], "/.", 
             "SolKeRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"FinalVeR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"AeR", " ", ".", " ", "KeR"}], ")"}], "/.", 
             "SolKeRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\n", 
        RowBox[{"RuleDet", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{
           RowBox[{"NSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Det", "[", "FinalVdL", "]"}], "==", "1"}], ",", 
               RowBox[{
                RowBox[{"Det", "[", "FinalVuL", "]"}], "==", "1"}], ",", 
               RowBox[{
                RowBox[{"Det", "[", "FinalVeL", "]"}], "==", "1"}]}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]uR1", ",", "\[Delta]dR1", ",", "\[Delta]eR1"}],
               "}"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"VCKMdagger", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", 
                  RowBox[{"AdL", " ", ".", " ", "KdL"}], "]"}], " ", ".", " ",
                  "AuL", " ", ".", " ", "KuL"}], ")"}], "/.", "SolKdRot"}], "/.",
               "SolKuRot"}], "/.", "RuleDet"}], ")"}], "//", "Simplify"}], "//",
           "Chop"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"RuleCKM", "=", 
         RowBox[{
          RowBox[{"Quiet", "@", 
           RowBox[{
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"VCKMdagger", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", 
                 RowBox[{
                  RowBox[{"ConjugateTranspose", "[", "VCKM", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"VCKMdagger", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", 
                 RowBox[{
                  RowBox[{"ConjugateTranspose", "[", "VCKM", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"VCKMdagger", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "2"}], "]"}], "]"}], "==", 
                 RowBox[{
                  RowBox[{"ConjugateTranspose", "[", "VCKM", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "2"}], "]"}], "]"}]}], ",", 
                RowBox[{
                 RowBox[{"VCKMdagger", "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}], "==", 
                 RowBox[{
                  RowBox[{"ConjugateTranspose", "[", "VCKM", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
               "\[Delta]dR2", ",", "\[Delta]uR2", ",", "\[Delta]dR3", ",", 
                "\[Delta]uR3"}], "}"}]}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "//", "Chop"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Rule\[Delta]e", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Delta]eR2", "->", "0"}], ",", 
           RowBox[{"\[Delta]eR3", "->", "0"}]}], "}"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"VCKMphy", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"ConjugateTranspose", "[", "VCKMdagger", "]"}], "/.", 
            "RuleCKM"}], "//", "Chop"}], ")"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"fermionRotationVdL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"AdL", " ", ".", " ", "KdL"}], ")"}], "/.", 
               "SolKdRot"}], "/.", "RuleDet"}], "/.", "RuleCKM"}], "//", 
            "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fermionRotationVdR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"AdR", " ", ".", " ", "KdR"}], ")"}], "/.", 
               "SolKdRot"}], "/.", "RuleDet"}], "/.", "RuleCKM"}], "//", 
            "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fermionRotationVuL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"AuL", " ", ".", " ", "KuL"}], ")"}], "/.", 
               "SolKuRot"}], "/.", "RuleDet"}], "/.", "RuleCKM"}], "//", 
            "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fermionRotationVuR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"AuR", " ", ".", " ", "KuR"}], ")"}], "/.", 
               "SolKuRot"}], "/.", "RuleDet"}], "/.", "RuleCKM"}], "//", 
            "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fermionRotationVeL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"AeL", " ", ".", " ", "KeL"}], ")"}], "/.", 
               "SolKeRot"}], "/.", "RuleDet"}], "/.", "Rule\[Delta]e"}], "//",
             "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"fermionRotationVeR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"AeR", " ", ".", " ", "KeR"}], ")"}], "/.", 
               "SolKeRot"}], "/.", "RuleDet"}], "/.", "Rule\[Delta]e"}], "//",
             "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"diagmassu", "=", 
         RowBox[{"chop", "[", 
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", "fermionRotationVuL", "]"}], 
           " ", ".", " ", "ivrMUHAT", " ", ".", " ", "fermionRotationVuR"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"diagmassd", "=", 
         RowBox[{"chop", "[", 
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", "fermionRotationVdL", "]"}], 
           " ", ".", " ", "ivrMDHAT", " ", ".", " ", "fermionRotationVdR"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"diagmasse", "=", 
         RowBox[{"chop", "[", 
          RowBox[{
           RowBox[{"ConjugateTranspose", "[", "fermionRotationVeL", "]"}], 
           " ", ".", " ", "ivrMLHAT", " ", ".", " ", "fermionRotationVeR"}], 
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"rulediag0", "=", 
         RowBox[{"Join", "[", "\n", 
          RowBox[{
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yu\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yu\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"(", 
                   RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVuL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yu\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVuR"}], "]"}], ")"}], "]"}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yd\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yd\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"(", 
                   RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVdL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yd\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVdR"}], "]"}], ")"}], "]"}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Ye\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Ye\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"(", 
                   RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVeL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Ye\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVeR"}], "]"}], ")"}], "]"}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asu\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asu\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"(", 
                   RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVuL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asu\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVuR"}], "]"}], ")"}], "]"}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asd\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asd\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"(", 
                   RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVdL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asd\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVdR"}], "]"}], ")"}], "]"}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<ase\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<ase\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"(", 
                   RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVeL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<ase\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVeR"}], "]"}], ")"}], "]"}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yubar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yubar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Conjugate", "@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"(", 
                    RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVuL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yu\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVuR"}], "]"}], ")"}], "]"}]}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Ydbar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Ydbar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Conjugate", "@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"(", 
                    RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVdL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yd\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVdR"}], "]"}], ")"}], "]"}]}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yebar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Yebar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Conjugate", "@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"(", 
                    RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVeL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<Ye\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVeR"}], "]"}], ")"}], "]"}]}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asu\[Phi]bar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asu\[Phi]bar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Conjugate", "@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"(", 
                    RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVuL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asu\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVuR"}], "]"}], ")"}], "]"}]}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asd\[Phi]bar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asd\[Phi]bar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Conjugate", "@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"(", 
                    RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVdL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<asd\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVdR"}], "]"}], ")"}], "]"}]}]}], "]"}]}], 
              "]"}], "]"}]}], ",", "\n", 
           RowBox[{"chop", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"Thread", "[", 
              RowBox[{
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<ase\[Phi]bar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 "_"}], "]"}], "->", 
               RowBox[{"Thread", "[", 
                RowBox[{
                 RowBox[{"Flatten", "[", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<ase\[Phi]bar\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "]"}], "->", 
                 RowBox[{"Conjugate", "@", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"(", 
                    RowBox[{"chop", "[", 
                    RowBox[{
                    RowBox[{
                    "ConjugateTranspose", "[", "fermionRotationVeL", "]"}], 
                    " ", ".", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ToExpression", "[", 
                    RowBox[{"\"\<ase\[Phi]\>\"", "<>", 
                    RowBox[{"ToString", "[", "i", "]"}], "<>", 
                    RowBox[{"ToString", "[", "j", "]"}], "<>", "\"\<[\>\"", "<>", 
                    RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                    "\"\<]\>\""}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "3"}], "}"}]}], "]"}], "/.", 
                    "npparamters00"}], ")"}], " ", ".", " ", 
                    "fermionRotationVeR"}], "]"}], ")"}], "]"}]}]}], "]"}]}], 
              "]"}], "]"}]}]}], "\n", "]"}]}], ";", "\n", "\n", 
        RowBox[{"npparamters", " ", "=", " ", 
         RowBox[{"npparamters00", "/.", "rulediag0"}]}], ";", "\n", "\n", 
        "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "INTEGRATE"}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
          "TOP", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"QUARK", "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                    "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
             "--"}], "--"}], "--"}]}], " ", "*)"}], "\n", "\n", 
        RowBox[{"topintegrate", "=", 
         RowBox[{"Join", "[", "\n", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yu3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yu3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yubar3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yubar3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yu\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yu\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yubar\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<Yubar\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]bar3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]bar3\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "3"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2"}], "}"}]}], "]"}], ",", "\n", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]bar\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "_"}], ")"}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"ToExpression", "[", 
                 RowBox[{"\"\<asu\[Phi]bar\>\"", "<>", 
                  RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<3\>\"", 
                  "<>", "\"\<[\>\"", "<>", 
                  RowBox[{"ToString", "[", "MatScale", "]"}], "<>", 
                  "\"\<]\>\""}], "]"}], "->", "0"}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "2"}], "}"}]}], "]"}]}], "\n", "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"boundaryConditionLE", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"chop", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"PSLEFTmatching", "[", "MatScale", "]"}], "/.", 
                 "solveVsNP"}], "/.", 
                RowBox[{"(", 
                 RowBox[{"npparamters", "/.", "topintegrate"}], ")"}]}], "/.",
                "mixang"}], "/.", 
              RowBox[{
               RowBox[{"\[Theta]QCD", "[", "MatScale", "]"}], "->", "0"}]}], 
             ")"}], "]"}], "/.", 
           RowBox[{"V\[Phi]", "->", "245.999"}]}], ")"}]}], ";", "\n", 
        RowBox[{"rgeLEreset", "[", 
         RowBox[{
         "boundaryConditionLE", ",", "MatScale", ",", "computeScale"}], "]"}],
         ";", "\[IndentingNewLine]", "\n", 
        RowBox[{"List1", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"randompoints", "[", 
            RowBox[{"[", 
             RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"randompoints", "[", 
            RowBox[{"[", 
             RowBox[{"n1", ",", "2"}], "]"}], "]"}], ",", "rgeLE"}], "}"}]}], 
        ";", "\n", "\n", 
        RowBox[{"RulePackage", "=", 
         RowBox[{
          RowBox[{"chop", "[", 
           RowBox[{"(", 
            RowBox[{"Thread", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"#", "[", "computeScale", "]"}], ")"}], "&"}], "/@", 
               
               RowBox[{
                RowBox[{"List1", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "->", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", "[", "computeScale", "]"}], ")"}], "&"}], "/@", 
                 RowBox[{
                  RowBox[{"List1", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "/.", 
                RowBox[{"List1", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "]"}], ")"}], 
           "]"}], "//.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"aa_", "[", "computeScale", "]"}], ":>", "aa"}], 
           "}"}]}]}], ";", "\n", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "LOW"}]}]}]}]}]}]}]}]}]}]}]}], " ", 
          "ENERGY", " ", "MASS", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"DIAGONALIZATION", "--"}], "--"}], "--"}], "--"}],
                     "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
                "--"}], "--"}], "--"}], "--"}], "--"}], "--"}]}], " ", "*)"}],
         "\n", "\t\t\t\t\t", "\n", 
        RowBox[{"ivrMUHATLE", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"MU11", ",", "MU12"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"MU21", ",", "MU22"}], "}"}]}], "}"}], "//.", 
          "RulePackage"}]}], ";", "\n", 
        RowBox[{"ivrMDHATLE", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"MD11", ",", "MD12", ",", "MD13"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"MD21", ",", "MD22", ",", "MD23"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"MD31", ",", "MD32", ",", "MD33"}], "}"}]}], "}"}], "//.",
           "RulePackage"}]}], ";", "\n", 
        RowBox[{"ivrMLHATLE", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"ML11", ",", "ML12", ",", "MD13"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ML21", ",", "ML22", ",", "ML23"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"ML31", ",", "ML32", ",", "ML33"}], "}"}]}], "}"}], "//.",
           "RulePackage"}]}], ";", "\n", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LEfermionmassmatrixU", ",", "LEAuL"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"chop", "[", 
              RowBox[{"(", " ", 
               RowBox[{"ivrMUHATLE", " ", ".", " ", 
                RowBox[{"ConjugateTranspose", "[", "ivrMUHATLE", "]"}]}], 
               ")"}], "]"}], "]"}]}], ")"}]}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LEfermionmassmatrixU", ",", "LEAuR"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"(", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"chop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "ivrMUHATLE", "]"}], " ", 
                 ".", " ", "ivrMUHATLE"}], " ", ")"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LEfermionmassmatrixD", ",", "LEAdL"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"chop", "[", 
              RowBox[{"(", 
               RowBox[{"ivrMDHATLE", " ", ".", " ", 
                RowBox[{"ConjugateTranspose", "[", "ivrMDHATLE", "]"}]}], 
               ")"}], "]"}], "]"}]}], ")"}]}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LEfermionmassmatrixD", ",", "LEAdR"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"(", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"chop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "ivrMDHATLE", "]"}], " ", 
                 ".", " ", "ivrMDHATLE"}], ")"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LEfermionmassmatrixE", ",", "LEAeL"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"Eigensystem", "[", 
             RowBox[{"chop", "[", 
              RowBox[{"(", 
               RowBox[{"ivrMLHATLE", " ", ".", " ", 
                RowBox[{"ConjugateTranspose", "[", "ivrMLHATLE", "]"}]}], 
               ")"}], "]"}], "]"}]}], ")"}]}]}], ";", "\n", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"LEfermionmassmatrixE", ",", "LEAeR"}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{"Reverse", "/@", 
            RowBox[{"(", 
             RowBox[{"Eigensystem", "[", 
              RowBox[{"chop", "[", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"ConjugateTranspose", "[", "ivrMLHATLE", "]"}], " ", 
                 ".", " ", "ivrMLHATLE"}], ")"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\n", "\n", 
        RowBox[{"LEKdL", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dL1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dL2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dL3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"LEKdR", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dR1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dR2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]dR3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"LEKuL", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uL1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uL2"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"LEKuR", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uR1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]uR2"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"LEKeL", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eL1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eL2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eL3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", 
        RowBox[{"LEKeR", "=", 
         RowBox[{"DiagonalMatrix", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eR1"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eR2"}], "]"}], ",", 
            RowBox[{"Exp", "[", 
             RowBox[{"I", " ", "\[Delta]eR3"}], "]"}]}], "}"}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"LHSLEKd", "=", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "LEKdL", "]"}], " ", ".", " ", 
             RowBox[{"ConjugateTranspose", "[", "LEAdL", "]"}], " ", ".", " ",
              "ivrMDHATLE", " ", ".", " ", "LEAdR", " ", ".", " ", "LEKdR"}], 
            ",", 
            RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}], "//", 
          "chop"}]}], ";", "\n", 
        RowBox[{"LHSLEKu", "=", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "LEKuL", "]"}], " ", ".", " ", 
             RowBox[{"ConjugateTranspose", "[", "LEAuL", "]"}], " ", ".", " ",
              "ivrMUHATLE", " ", ".", " ", "LEAuR", " ", ".", " ", "LEKuR"}], 
            ",", 
            RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}], "//", 
          "chop"}]}], ";", "\n", 
        RowBox[{"LHSLEKe", "=", 
         RowBox[{
          RowBox[{"Simplify", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ConjugateTranspose", "[", "LEKeL", "]"}], " ", ".", " ", 
             RowBox[{"ConjugateTranspose", "[", "LEAeL", "]"}], " ", ".", " ",
              "ivrMLHATLE", " ", ".", " ", "LEAeR", " ", ".", " ", "LEKeR"}], 
            ",", 
            RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}], "//", 
          "chop"}]}], ";", "\n", "\n", 
        RowBox[{"SolLEKdRot", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{"LHSLEKd", "==", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Sqrt", "[", "LEfermionmassmatrixD", "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Delta]dL1", ",", "\[Delta]dL2", ",", "\[Delta]dL3"}], 
                "}"}]}], "]"}]}], "//", "chop"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"SolLEKuRot", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{"LHSLEKu", "==", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Sqrt", "[", "LEfermionmassmatrixU", "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"\[Delta]uL1", ",", "\[Delta]uL2"}], "}"}]}], "]"}]}],
             "//", "chop"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
        RowBox[{"SolLEKeRot", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Quiet", "@", 
             RowBox[{"NSolve", "[", 
              RowBox[{
               RowBox[{"LHSLEKe", "==", 
                RowBox[{"DiagonalMatrix", "[", 
                 RowBox[{"Sqrt", "[", "LEfermionmassmatrixE", "]"}], "]"}]}], 
               ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Delta]eL1", ",", "\[Delta]eL2", ",", "\[Delta]eL3"}], 
                "}"}]}], "]"}]}], "//", "chop"}], ")"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", "\n", 
        RowBox[{"FinalLEVdL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"LEAdL", " ", ".", " ", "LEKdL"}], ")"}], "/.", 
             "SolLEKdRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"FinalLEVdR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"LEAdR", " ", ".", " ", "LEKdR"}], ")"}], "/.", 
             "SolLEKdRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"FinalLEVuL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"LEAuL", " ", ".", " ", "LEKuL"}], ")"}], "/.", 
             "SolLEKuRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"FinalLEVuR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"LEAuR", " ", ".", " ", "LEKuR"}], ")"}], "/.", 
             "SolLEKuRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"FinalLEVeL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"LEAeL", " ", ".", " ", "LEKeL"}], ")"}], "/.", 
             "SolLEKeRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"FinalLEVeR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"LEAeR", " ", ".", " ", "LEKeR"}], ")"}], "/.", 
             "SolLEKeRot"}], "//", "chop"}], ",", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"RuleDetLE", "=", 
         RowBox[{"Quiet", "@", 
          RowBox[{
           RowBox[{"NSolve", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"Det", "[", "FinalLEVdL", "]"}], "==", "1"}], ",", 
               RowBox[{
                RowBox[{"Det", "[", "FinalLEVuL", "]"}], "==", "1"}], ",", 
               RowBox[{
                RowBox[{"Det", "[", "FinalLEVeL", "]"}], "==", "1"}]}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"\[Delta]uR1", ",", "\[Delta]dR1", ",", "\[Delta]eR1"}],
               "}"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\n", "\n", 
        RowBox[{"Rule\[Delta]LE", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Delta]dR2", "->", "0"}], ",", 
           RowBox[{"\[Delta]dR3", "->", "0"}], ",", 
           RowBox[{"\[Delta]uR2", "->", "0"}], ",", 
           RowBox[{"\[Delta]eR2", "->", "0"}], ",", 
           RowBox[{"\[Delta]eR3", "->", "0"}]}], "}"}]}], ";", "\n", "\n", 
        RowBox[{"fermionRotationLEVdL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"LEAdL", " ", ".", " ", "LEKdL"}], ")"}], "/.", 
               "SolLEKdRot"}], "/.", "RuleDetLE"}], "/.", "Rule\[Delta]LE"}], 
            "//", "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"fermionRotationLEVdR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"LEAdR", " ", ".", " ", "LEKdR"}], ")"}], "/.", 
               "SolLEKdRot"}], "/.", "RuleDetLE"}], "/.", "Rule\[Delta]LE"}], 
            "//", "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"fermionRotationLEVuL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"LEAuL", " ", ".", " ", "LEKuL"}], ")"}], "/.", 
               "SolLEKuRot"}], "/.", "RuleDetLE"}], "/.", "Rule\[Delta]LE"}], 
            "//", "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"fermionRotationLEVuR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"LEAuR", " ", ".", " ", "LEKuR"}], ")"}], "/.", 
               "SolLEKuRot"}], "/.", "RuleDetLE"}], "/.", "Rule\[Delta]LE"}], 
            "//", "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"fermionRotationLEVeL", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"LEAeL", " ", ".", " ", "LEKeL"}], ")"}], "/.", 
               "SolLEKeRot"}], "/.", "RuleDetLE"}], "/.", "Rule\[Delta]LE"}], 
            "//", "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\n", 
        RowBox[{"fermionRotationLEVeR", "=", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"LEAeR", " ", ".", " ", "LEKeR"}], ")"}], "/.", 
               "SolLEKeRot"}], "/.", "RuleDetLE"}], "/.", "Rule\[Delta]LE"}], 
            "//", "chop"}], ",", " ", 
           RowBox[{"Assumptions", "->", "$Assumptions"}]}], "]"}]}], ";", 
        "\t\t\t\t\t", "\n", "\t\t\t\t\t\t\t\t\t", "\n", "\t\t\t\t\t", "\n", 
        RowBox[{"CEpckg", "=", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "fermionRotationLEVeL", "]"}], 
          " ", ".", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"WCOsce11", ",", "WCOsce12", ",", "WCOsce13"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"WCOsce21", ",", "WCOsce22", ",", "WCOsce23"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"WCOsce31", ",", "WCOsce32", ",", "WCOsce33"}], "}"}]}], 
           "}"}], " ", ".", " ", "fermionRotationLEVeR"}]}], ";", "\n", "\n", 
        
        RowBox[{"CUpckg", "=", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "fermionRotationLEVuL", "]"}], 
          " ", ".", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"WCOscu11", ",", "WCOscu12"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"WCOscu21", ",", "WCOscu22"}], "}"}]}], "}"}], " ", ".", 
          " ", "fermionRotationLEVuR"}]}], ";", "\n", "\n", 
        RowBox[{"CDpckg", "=", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "fermionRotationLEVdL", "]"}], 
          " ", ".", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"WCOscd11", ",", "WCOscd12", ",", "WCOscd13"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"WCOscd21", ",", "WCOscd22", ",", "WCOscd23"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"WCOscd31", ",", "WCOscd32", ",", "WCOscd33"}], "}"}]}], 
           "}"}], " ", ".", " ", "fermionRotationLEVdR"}]}], ";", "\n", "\n", 
        
        RowBox[{"MU2pckg", "=", 
         RowBox[{"DiagonalMatrix", "[", "LEfermionmassmatrixU", "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"MD2pckg", "=", 
         RowBox[{"DiagonalMatrix", "[", "LEfermionmassmatrixD", "]"}]}], ";", 
        "\n", "\n", 
        RowBox[{"ML2pckg", "=", 
         RowBox[{"DiagonalMatrix", "[", "LEfermionmassmatrixE", "]"}]}], ";", 
        "\n", "\n", "\n", 
        RowBox[{"Cud", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"CUpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"Re", "[", 
               RowBox[{"CDpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
            "WCms2"}], ")"}]}]}], ";", "\n", 
        RowBox[{"Cdu", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"CDpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"Re", "[", 
               RowBox[{"CUpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
            "WCms2"}], ")"}]}]}], ";", "\n", 
        RowBox[{"Cue", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"CUpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"Re", "[", 
               RowBox[{"CEpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
            "WCms2"}], ")"}]}]}], ";", "\n", 
        RowBox[{"Ceu", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"CEpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"Re", "[", 
               RowBox[{"CUpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
            "WCms2"}], ")"}]}]}], ";", "\n", 
        RowBox[{"Cde", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"CDpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"Re", "[", 
               RowBox[{"CEpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
            "WCms2"}], ")"}]}]}], ";", "\n", 
        RowBox[{"Ced", "=", 
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Im", "[", 
               RowBox[{"CEpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
              RowBox[{"Re", "[", 
               RowBox[{"CDpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
            "WCms2"}], ")"}]}]}], ";", "\n", "\n", 
        RowBox[{"CGe", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"WCms2", " ", 
             RowBox[{"WCg3", "^", "2"}]}], ")"}]}], " ", "WCOsG", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"CEpckg", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", 
             RowBox[{"Conjugate", "[", 
              RowBox[{"CEpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}], "/", 
           "2"}]}]}], ";", "\n", 
        RowBox[{"CGte", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"4", "\[Pi]"}], " ", ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"WCms2", " ", 
             RowBox[{"WCg3", "^", "2"}]}], ")"}]}], " ", "WCOsGt", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"I", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"CEpckg", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"CEpckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}], 
            ")"}], "/", "2"}]}]}], ";", "\n", 
        RowBox[{"CS", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "17"}], " ", 
           RowBox[{"V\[Phi]", "^", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"Cue", " ", "+", "Cde"}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"V\[Phi]", "^", "2"}], " ", 
           RowBox[{"(", "4.7", " ", 
            RowBox[{"(*", "GeV", "*)"}], ")"}], "CGe"}]}]}], ";", " ", "\n", 
        RowBox[{"CP", "=", 
         RowBox[{
          RowBox[{"350", 
           RowBox[{"V\[Phi]", "^", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"Ceu", " ", "+", " ", "Ced"}], ")"}]}], "+", " ", 
          RowBox[{
           RowBox[{"V\[Phi]", "^", "2"}], " ", 
           RowBox[{"(", "1.1", " ", 
            RowBox[{"(*", "GeV", "*)"}], ")"}], "CGte"}]}]}], ";", "\n", "\n", 
        RowBox[{"DG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"WCg3", " ", "\[Alpha]3"}], ")"}], "/", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"4", " ", "\[Pi]"}], ")"}], "^", "3"}]}], ")"}]}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"i", "=", "1"}], "3"], 
              FractionBox[
               RowBox[{
                RowBox[{"h", "[", 
                 FractionBox[
                  RowBox[{"MD2pckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                " ", 
                RowBox[{"Im", "[", 
                 RowBox[{"CDpckg", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}], " ", 
                RowBox[{"Re", "[", 
                 RowBox[{"CDpckg", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], 
               RowBox[{"4", " ", 
                RowBox[{"MD2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}]}]]}], "+", 
             RowBox[{
              UnderoverscriptBox["\[Sum]", 
               RowBox[{"j", "=", "1"}], "2"], 
              FractionBox[
               RowBox[{
                RowBox[{"h", "[", 
                 FractionBox[
                  RowBox[{"MU2pckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                " ", 
                RowBox[{"Im", "[", 
                 RowBox[{"CUpckg", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}], " ", 
                RowBox[{"Re", "[", 
                 RowBox[{"CUpckg", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}], 
               RowBox[{"4", " ", 
                RowBox[{"MU2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "j"}], "]"}], "]"}]}]]}]}], ")"}]}], "+", 
          
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", " ", "WCg3", " ", "WCOsG", " ", "WCOsGt"}], ")"}], 
            "/", 
            RowBox[{"\[Pi]", "^", "2"}]}], " ", 
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}]}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"D1e", "=", 
         RowBox[{
          RowBox[{"WCgem", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "2"}], " ", "WCms2"}], ")"}]}], 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CEpckg", " ", "-", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CEpckg", "]"}]}], ")"}], 
               "/", "2"}], ",", 
              RowBox[{"DiagonalMatrix", "[", "QL", "]"}], ",", 
              RowBox[{"Sqrt", "[", "ML2pckg", "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"Diagonal", "[", 
                   RowBox[{"ML2pckg", "/", "WCms2"}], "]"}], "]"}], "/.", 
                 "RulePackage"}], "  ", "/.", "FunctionsRule"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CEpckg", " ", "+", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CEpckg", "]"}]}], ")"}], 
               "/", "2"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";", "\n", 
        "\n", 
        RowBox[{"D2e", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"WCgem", " ", "\[Alpha]em", " ", 
             RowBox[{"QL", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"8", " ", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"QD", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "2"]}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MD2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "2"], 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"QU", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "2"]}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MU2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"QL", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "2"], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"ML2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"ML2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"ML2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}]}], ")"}]}]}], ";", "\n", 
        RowBox[{"D3e", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"QL", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "WCgem"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"\[Pi]", "^", "2"}]}], ")"}]}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsAt", " ", 
             RowBox[{"Im", "[", 
              RowBox[{"CEpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"WCOsA", " ", 
             RowBox[{"Re", "[", 
              RowBox[{"CEpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalLambda]", "/", 
            RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}]}]}], ";", "\n", 
        RowBox[{"D4e", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", " ", 
               RowBox[{
                RowBox[{"QL", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "^", "3"}], " ", "WCgem", 
               " ", "\[Alpha]em"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"ML2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "WCOsA", " ", 
          "WCOsAt", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"De", "=", 
         RowBox[{"D1e", "+", "D2e", "+", "D3e", "+", "D4e"}]}], ";", "\n", 
        "\n", "\n", 
        RowBox[{"D1u", "=", 
         RowBox[{
          RowBox[{"WCgem", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "2"}], " ", "WCms2"}], ")"}]}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CUpckg", " ", "-", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CUpckg", "]"}]}], ")"}], 
               "/", "2"}], ",", 
              RowBox[{"DiagonalMatrix", "[", "QU", "]"}], ",", 
              RowBox[{"Sqrt", "[", "MU2pckg", "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"Diagonal", "[", 
                   RowBox[{"MU2pckg", "/", "WCms2"}], "]"}], "]"}], "/.", 
                 "RulePackage"}], "  ", "/.", "FunctionsRule"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CUpckg", " ", "+", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CUpckg", "]"}]}], ")"}], 
               "/", "2"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\n", "\n", 
        RowBox[{"D2u", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"WCgem", " ", "\[Alpha]em", " ", 
             RowBox[{"QU", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"8", " ", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"QD", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "2"]}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MD2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "2"], 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"QU", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "2"]}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MU2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"QL", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "2"], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"ML2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"ML2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"ML2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}]}], ")"}]}]}], ";", "\n", 
        RowBox[{"D3u", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"QU", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "WCgem"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"\[Pi]", "^", "2"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsAt", " ", 
             RowBox[{"Im", "[", 
              RowBox[{"CUpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"WCOsA", " ", 
             RowBox[{"Re", "[", 
              RowBox[{"CUpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalLambda]", "/", 
            RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}]}]}], ";", "\n", 
        RowBox[{"D4u", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", " ", 
               RowBox[{
                RowBox[{"QU", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "^", "3"}], " ", "WCgem", 
               " ", "\[Alpha]em"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MU2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "WCOsA", " ", 
          "WCOsAt", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"D5u", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", " ", 
               RowBox[{"QU", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "WCgem", " ", 
               "\[Alpha]3"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MU2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsA", " ", "WCOsGt"}], " ", "+", " ", 
            RowBox[{"WCOsAt", " ", "WCOsG"}]}], ")"}], 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"Du", "=", 
         RowBox[{"D1u", "+", "D2u", "+", "D3u", "+", "D4u", "+", "D5u"}]}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"D1d", "=", 
         RowBox[{
          RowBox[{"WCgem", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "2"}], " ", "WCms2"}], ")"}]}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CDpckg", " ", "-", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CDpckg", "]"}]}], ")"}], 
               "/", "2"}], ",", 
              RowBox[{"DiagonalMatrix", "[", "QD", "]"}], ",", 
              RowBox[{"Sqrt", "[", "MD2pckg", "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"Diagonal", "[", 
                   RowBox[{"MD2pckg", "/", "WCms2"}], "]"}], "]"}], "/.", 
                 "RulePackage"}], "  ", "/.", "FunctionsRule"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CDpckg", " ", "+", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CDpckg", "]"}]}], ")"}], 
               "/", "2"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";", "\n", 
        "\n", 
        RowBox[{"D2d", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"WCgem", " ", "\[Alpha]em", " ", 
             RowBox[{"QD", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"8", " ", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"QD", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "2"]}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MD2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "2"], 
             RowBox[{
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox[
                 RowBox[{"QU", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], "2"]}], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MU2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox[
               SuperscriptBox[
                RowBox[{"QL", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "2"], 
               RowBox[{"Sqrt", "[", 
                RowBox[{"ML2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"ML2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"ML2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CEpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}]}], ")"}]}]}], ";", "\n", 
        RowBox[{"D3d", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"QD", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "WCgem"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"\[Pi]", "^", "2"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsAt", " ", 
             RowBox[{"Im", "[", 
              RowBox[{"CDpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"WCOsA", " ", 
             RowBox[{"Re", "[", 
              RowBox[{"CDpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalLambda]", "/", 
            RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}]}]}], ";", "\n", 
        RowBox[{"D4d", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", " ", 
               RowBox[{
                RowBox[{"QD", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "^", "3"}], " ", "WCgem", 
               " ", "\[Alpha]em"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MD2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "WCOsA", " ", 
          "WCOsAt", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"D5d", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", " ", 
               RowBox[{"QD", "[", 
                RowBox[{"[", "1", "]"}], "]"}], " ", "WCgem", " ", 
               "\[Alpha]3"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MD2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsA", " ", "WCOsGt"}], " ", "+", " ", 
            RowBox[{"WCOsAt", " ", "WCOsG"}]}], ")"}], 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"Dd", "=", 
         RowBox[{"D1d", "+", "D2d", "+", "D3d", "+", "D4d", "+", "D5d"}]}], 
        ";", "\n", "\n", "\n", 
        RowBox[{"D1uC", "=", 
         RowBox[{
          RowBox[{"1", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "2"}], " ", "WCms2"}], ")"}]}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CUpckg", " ", "-", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CUpckg", "]"}]}], ")"}], 
               "/", "2"}], ",", 
              RowBox[{"Sqrt", "[", "MU2pckg", "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"Diagonal", "[", 
                   RowBox[{"MU2pckg", "/", "WCms2"}], "]"}], "]"}], "/.", 
                 "RulePackage"}], "  ", "/.", "FunctionsRule"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CUpckg", " ", "+", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CUpckg", "]"}]}], ")"}], 
               "/", "2"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";", "\n", 
        "\n", 
        RowBox[{"D2uC", "=", " ", 
         RowBox[{
          RowBox[{"\[Alpha]3", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox["1", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MD2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "2"], 
             RowBox[{
              FractionBox["1", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MU2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}]}], ")"}]}]}], ";", "\n", 
        RowBox[{"D3uC", "=", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"\[Pi]", "^", "2"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsGt", " ", 
             RowBox[{"Im", "[", 
              RowBox[{"CUpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"WCOsG", " ", 
             RowBox[{"Re", "[", 
              RowBox[{"CUpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalLambda]", "/", 
            RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}]}]}], ";", "\n", 
        RowBox[{"D4uC", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "\[Alpha]3"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MU2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "WCOsG", " ", 
          "WCOsGt", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"D5uC", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", " ", 
               RowBox[{
                RowBox[{"QU", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "  ", 
               "\[Alpha]em"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", 
               RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], ")"}]}], 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MU2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsA", " ", "WCOsGt"}], " ", "+", " ", 
            RowBox[{"WCOsAt", " ", "WCOsG"}]}], ")"}], 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"DuC", "=", 
         RowBox[{
         "D1uC", "+", "D2uC", "+", "D3uC", "+", "D4uC", "+", "D5uC"}]}], ";", 
        "\n", "\n", 
        RowBox[{"D1dC", "=", 
         RowBox[{
          RowBox[{"1", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "2"}], " ", "WCms2"}], ")"}]}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{
            RowBox[{"Dot", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CDpckg", " ", "-", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CDpckg", "]"}]}], ")"}], 
               "/", "2"}], ",", 
              RowBox[{"Sqrt", "[", "MD2pckg", "]"}], ",", 
              RowBox[{"DiagonalMatrix", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"l", "[", 
                  RowBox[{"Diagonal", "[", 
                   RowBox[{"MD2pckg", "/", "WCms2"}], "]"}], "]"}], "/.", 
                 "RulePackage"}], "  ", "/.", "FunctionsRule"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"CDpckg", " ", "+", " ", 
                 RowBox[{"ConjugateTranspose", "[", "CDpckg", "]"}]}], ")"}], 
               "/", "2"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ";", "\n", 
        "\n", 
        RowBox[{"D2dC", "=", " ", 
         RowBox[{
          RowBox[{"\[Alpha]3", " ", "/", 
           RowBox[{"(", 
            RowBox[{"16", " ", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "3"], 
             RowBox[{
              FractionBox["1", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MD2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MD2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "i"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}], " ", "+", " ", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"j", "=", "1"}], "2"], 
             RowBox[{
              FractionBox["1", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"MU2pckg", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"f", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Re", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Im", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}], " ", "+", 
                " ", 
                RowBox[{
                 RowBox[{"g", "[", 
                  FractionBox[
                   RowBox[{"MU2pckg", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "WCms2"], "]"}], 
                 RowBox[{"Im", "[", 
                  RowBox[{"CDpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], " ", 
                 RowBox[{"Re", "[", 
                  RowBox[{"CUpckg", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "j"}], "]"}], "]"}], "]"}]}]}], 
               ")"}]}]}]}], ")"}]}]}], ";", "\n", 
        RowBox[{"D3dC", "=", 
         RowBox[{
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"\[Pi]", "^", "2"}]}], ")"}]}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsGt", " ", 
             RowBox[{"Im", "[", 
              RowBox[{"CDpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], " ", "+", " ", 
            RowBox[{"WCOsG", " ", 
             RowBox[{"Re", "[", 
              RowBox[{"CDpckg", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]}], ")"}], 
          RowBox[{"Log", "[", 
           RowBox[{"\[CapitalLambda]", "/", 
            RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}]}]}], ";", "\n", 
        RowBox[{"D4dC", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"4", "\[Alpha]3"}], ")"}], "/", 
             RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], " ", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MD2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "WCOsG", " ", 
          "WCOsGt", " ", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"D5dC", "=", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", " ", 
               RowBox[{
                RowBox[{"QD", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "  ", 
               "\[Alpha]em"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", 
               RowBox[{"\[Pi]", "^", "3"}]}], ")"}]}], ")"}]}], 
          RowBox[{"Sqrt", "[", 
           RowBox[{"MD2pckg", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"WCOsA", " ", "WCOsGt"}], " ", "+", " ", 
            RowBox[{"WCOsAt", " ", "WCOsG"}]}], ")"}], 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"\[CapitalLambda]", "/", 
             RowBox[{"Sqrt", "[", "WCms2", "]"}]}], "]"}], "^", "2"}]}]}], 
        ";", "\n", 
        RowBox[{"DdC", "=", 
         RowBox[{
         "D1dC", "+", "D2dC", "+", "D3dC", "+", "D4dC", "+", "D5dC"}]}], ";", 
        "\n", "\n", "\n", 
        RowBox[{"Dn", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0.784", "*", "Du"}], " ", "-", " ", 
           RowBox[{"0.204", " ", "Dd"}], " ", "-", " ", 
           RowBox[{"0.55", " ", "WCgem", " ", "DuC"}], " ", "-", " ", 
           RowBox[{"1.10", " ", "WCgem", " ", "DdC"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"50", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "3"}]}]}], " ", 
             RowBox[{"(*", "GeV", "*)"}], ")"}], "WCgem", " ", "DG"}], " ", 
           "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"30", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "3"}]}]}], " ", 
             RowBox[{"(*", "GeV", "*)"}], ")"}], "WCgem", 
            RowBox[{"(", 
             RowBox[{"Cud", " ", "-", " ", "Cdu"}], ")"}]}]}], ")"}]}], "  ", 
        
        RowBox[{"(*", 
         RowBox[{"e", "*", 
          RowBox[{"GeV", "^", 
           RowBox[{"-", "1"}]}]}], "*)"}], ";", "\n", 
        RowBox[{"DHg", "=", 
         RowBox[{
          RowBox[{"4.0", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "4"}]}], " ", "Dn"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2.8", " ", "CS"}], " ", "-", " ", 
               RowBox[{"2.1", "CP"}]}], ")"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "24"}]}]}], " ", 
            RowBox[{"(*", " ", "m", " ", "*)"}], ")"}], 
           RowBox[{"WCgem", "/", "hbarc"}]}]}]}], "   ", 
        RowBox[{"(*", 
         RowBox[{"e", "*", 
          RowBox[{"GeV", "^", 
           RowBox[{"-", "1"}]}]}], "*)"}], ";", "\n", 
        RowBox[{"\[Omega]ThO", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "1.2", " ", 
            RowBox[{"(*", 
             RowBox[{"mrad", "/", "s"}], "*)"}], ")"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"De", "/", "WCgem"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"10", "^", "31"}], 
               RowBox[{"(*", 
                RowBox[{"m", "^", 
                 RowBox[{"-", "1"}]}], "*)"}], "*", "hbarc"}], "    ", 
              RowBox[{"(*", "GeV", "*)"}], ")"}]}], ")"}]}], " ", "+", "  ", 
          RowBox[{
           RowBox[{"(", "1.8", 
            RowBox[{"(*", 
             RowBox[{"mrad", "/", "s"}], "*)"}], ")"}], 
           RowBox[{"(", 
            RowBox[{"CS", "*", 
             RowBox[{"10", "^", "9"}]}], ")"}]}]}]}], ";", "\n", 
        RowBox[{"DnRATIO", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Dn", "/", "WCgem"}], " ", 
              RowBox[{"(*", " ", 
               RowBox[{"GeV", "^", 
                RowBox[{"-", "1"}]}], " ", "*)"}], ")"}], "/", "DnOVEReEXP"}],
             " ", 
            RowBox[{"(*", " ", 
             RowBox[{"GeV", "^", 
              RowBox[{"-", "1"}]}], " ", "*)"}], "//.", "RulePackage"}], "/.",
            "FunctionsRule"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"V\[Phi]", "->", "246"}], ",", 
            RowBox[{"\[CapitalLambda]", "->", "1000"}]}], "}"}]}]}], ";", 
        "\n", 
        RowBox[{"DHgRATIO", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"DHg", "/", "WCgem"}], " ", 
               RowBox[{"(*", " ", 
                RowBox[{"GeV", "^", 
                 RowBox[{"-", "1"}]}], " ", "*)"}], ")"}], "/", 
              "DHgOVEReEXP"}], " ", 
             RowBox[{"(*", " ", 
              RowBox[{"GeV", "^", 
               RowBox[{"-", "1"}]}], " ", "*)"}], ")"}], "//.", 
            "RulePackage"}], "/.", "FunctionsRule"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"V\[Phi]", "->", "246"}], ",", 
            RowBox[{"\[CapitalLambda]", "->", "1000"}]}], "}"}]}]}], ";", 
        "\n", 
        RowBox[{"\[Omega]ThORATIO", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Omega]ThO", " ", 
              RowBox[{"(*", 
               RowBox[{"mrad", "/", "s"}], "*)"}], "/", "\[Omega]ThOEXP"}], 
             ")"}], "//.", "RulePackage"}], "/.", "FunctionsRule"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"V\[Phi]", "\[Rule]", "246"}], ",", 
            RowBox[{"\[CapitalLambda]", "\[Rule]", "1000"}]}], "}"}]}]}], ";",
         "\n", "\n", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0", "<=", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{"Observable", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "<=", " ", "1"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"datalist\[Omega]ThO", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"datalist\[Omega]ThO2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0", "<=", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{"Observable", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "<=", " ", "1"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"datalistdHg", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"datalistdHg2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         "]"}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"0", "<=", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{"Observable", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "]"}], "<=", " ", "1"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"datalistdn", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"datalistdn2", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"randompoints", "[", 
               RowBox[{"[", 
                RowBox[{"n1", ",", "2"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"n1", ",", 
         RowBox[{"window", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{"filename", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"datalist\[Omega]ThO", ",", "datalist\[Omega]ThO2"}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"datalistdHg", ",", "datalistdHg2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"datalistdn", ",", "datalistdn2"}], "}"}]}], "}"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.895653729755005*^9, 3.895653758347307*^9}, {
   3.895653809979556*^9, 3.895653814068039*^9}, 3.895655882133835*^9, {
   3.895656541381538*^9, 3.895656564971346*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"025b4275-ec50-41aa-b4db-b9f7ee39a63f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["changeBasis", "Section",
 CellChangeTimes->{
  3.894423069412416*^9},ExpressionUUID->"ae3e6bda-12b3-4cc0-855f-\
bf935985e10b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"derivativebasisinput", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<CQ\>\"", "->"}], ",", 
     RowBox[{"\"\<CU\>\"", "->"}], ",", 
     RowBox[{"\"\<CD\>\"", "->"}], ",", 
     RowBox[{"\"\<CL\>\"", "->"}], ",", 
     RowBox[{"\"\<CE\>\"", "->"}], ",", " ", 
     RowBox[{"\"\<YQ\>\"", "->"}], " ", ",", " ", 
     RowBox[{"\"\<YU\>\"", "->"}], ",", 
     RowBox[{"\"\<YD\>\"", "->"}], ",", 
     RowBox[{"\"\<CG\>\"", "->"}], ",", 
     RowBox[{"\"\<CW\>\"", "->"}], ",", 
     RowBox[{"\"\<CB\>\"", "->"}], ",", 
     RowBox[{"\"\<g1\>\"", "->"}], ",", 
     RowBox[{"\"\<g2\>\"", "->"}], ",", 
     RowBox[{"\"\<g3\>\"", "->"}]}], "}"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8944233167880697`*^9, 3.8944233298757553`*^9}, {
  3.894423371768291*^9, 3.894423415130352*^9}, {3.894423453499754*^9, 
  3.894423458556602*^9}, {3.894423511400569*^9, 3.894423568760281*^9}, {
  3.8944236111432543`*^9, 3.894423634577607*^9}, {3.894423693142249*^9, 
  3.894423703009692*^9}},ExpressionUUID->"0611c67a-66cd-4dc0-ac01-\
38d9af434889"],

Cell["\<\
Use the following template to input the values of {\[OpenCurlyDoubleQuote]CQ\
\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]CU\[CloseCurlyDoubleQuote]-\
>,\[CloseCurlyDoubleQuote]CD\[CloseCurlyDoubleQuote]->,\
\[CloseCurlyDoubleQuote]CL\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]\
CE\[CloseCurlyDoubleQuote]->, \[OpenCurlyDoubleQuote]YQ\
\[CloseCurlyDoubleQuote]-> , \
\[OpenCurlyDoubleQuote]YU\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]\
YD\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]CG\
\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]CW\[CloseCurlyDoubleQuote]-\
>,\[CloseCurlyDoubleQuote]CB\[CloseCurlyDoubleQuote]->,\
\[CloseCurlyDoubleQuote]g1\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]\
g2\[CloseCurlyDoubleQuote]->,\[CloseCurlyDoubleQuote]g3\
\[CloseCurlyDoubleQuote]->}.\
\>", "Text",
 CellChangeTimes->{{3.895209961563882*^9, 
  3.895210005938295*^9}},ExpressionUUID->"ff8f9d5b-bae7-4292-b339-\
55b6039194f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"derivativebasisinput", "=", "dbinputtemplate"}]], "Input",
 CellChangeTimes->{{3.894424865546899*^9, 3.894424886484222*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"f1efd1e0-25bd-4b10-b07f-413da1d1d4c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"CQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CU\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CL\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CE\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"YU\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"YD\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"YE\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "0.9457459314888121`", ",", "0.19470927579253328`", ",", 
        "0.5515613139866333`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.8675593955018621`", ",", "0.43931062717180636`", ",", 
        "0.8713684419109828`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.2589147804308187`", ",", "0.9111649229178709`", ",", 
        "0.5775859437153128`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"CG\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"CW\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"CB\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"g1\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"g2\"\>", "\[Rule]", "1"}], ",", 
   RowBox[{"\<\"g3\"\>", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.894424867498765*^9, 3.894424887051401*^9}, 
   3.8944249345427713`*^9, 3.894425111735639*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"d913fe09-ce63-41e6-a25f-4ce48426acd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"changeBasis", "[", "derivativebasisinput", "]"}]], "Input",
 CellChangeTimes->{{3.894424860090657*^9, 3.894424896616856*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"09299b2b-4b77-4849-9c5d-b13d12eca5cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"asu\[Phi]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"asd\[Phi]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ase\[Phi]\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"asGt\"\>", "\[Rule]", "0.006332573977646111`"}], ",", 
   RowBox[{"\<\"asWt\"\>", "\[Rule]", "0.031189731653582246`"}], ",", 
   RowBox[{"\<\"asBt\"\>", "\[Rule]", 
    RowBox[{"-", "0.013168582344476883`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.89442487262153*^9, 3.894424897076561*^9}, 
   3.8944249380202827`*^9, 3.8944251131119137`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"ff24bcb7-cac0-452c-8609-61012552c2aa"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1391, 847},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (December 2, 2021)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"506dafa5-ac4f-4407-9c80-96a3efbbc865"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 2, 97, "Title",ExpressionUUID->"29d66fd7-2431-4bb0-b94e-300693c0f54a"],
Cell[763, 26, 638, 18, 43, "Author",ExpressionUUID->"d9219c39-7c30-4b74-9716-a96ccf7144cf"],
Cell[1404, 46, 654, 17, 20, "Department",ExpressionUUID->"4d60c931-98bc-43d9-9f57-61eb6eaf3a5b"],
Cell[2061, 65, 221, 3, 42, "Date",ExpressionUUID->"2c437474-571a-45e6-bf99-fef681688897"],
Cell[CellGroupData[{
Cell[2307, 72, 186, 2, 69, "Section",ExpressionUUID->"f0205d89-241d-49d2-8914-508281dceb93"],
Cell[CellGroupData[{
Cell[2518, 78, 246, 3, 34, "Subsection",ExpressionUUID->"5682ba6e-b862-4dd0-9ae9-3c3db5011579"],
Cell[2767, 83, 563, 14, 63, "Input",ExpressionUUID->"6c74d0e1-9d2b-4332-9fd0-7e030a6cd0ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3367, 102, 186, 2, 34, "Subsection",ExpressionUUID->"b97bdda6-b361-4a3e-86d0-0d9352d8b06b"],
Cell[3556, 106, 267, 5, 41, "Input",ExpressionUUID->"3aecb975-3943-475f-a401-fd6fa015a235"],
Cell[3826, 113, 335865, 5527, 249, InheritFromParent,ExpressionUUID->"20ad06da-68a6-493b-b5f5-433affa60ca6"],
Cell[339694, 5642, 595, 16, 120, "Print",ExpressionUUID->"4acad692-8429-4fb4-9d32-005eff9baad4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340326, 5663, 182, 2, 34, "Subsection",ExpressionUUID->"bd9e3af9-debc-4a92-9c26-6e61a8417d3d"],
Cell[CellGroupData[{
Cell[340533, 5669, 339, 5, 28, "Item",ExpressionUUID->"7d0a1503-900b-4c3f-be37-a3f6959406ce"],
Cell[CellGroupData[{
Cell[340897, 5678, 147, 3, 41, "Input",ExpressionUUID->"47710a56-bf63-49e4-9885-bac37198fd79"],
Cell[341047, 5683, 173808, 4053, 1529, "Output",ExpressionUUID->"7a6f6714-373d-485d-a186-d99ccb4abc7e"]
}, Open  ]]
}, Open  ]],
Cell[514882, 9740, 284, 4, 34, "Text",ExpressionUUID->"47861e54-3feb-46aa-817b-b1c3024cb809"]
}, Closed]],
Cell[CellGroupData[{
Cell[515203, 9749, 279, 4, 34, "Subsection",ExpressionUUID->"08c2894b-03a7-4454-a4ea-8bde602e00a2"],
Cell[CellGroupData[{
Cell[515507, 9757, 152, 3, 41, "Input",ExpressionUUID->"66894d6d-e72b-4764-b00a-a0bfa34c3bf7"],
Cell[515662, 9762, 4560, 112, 102, "Output",ExpressionUUID->"e8d069de-29d0-422a-a0dc-3f3d3959aa22"]
}, Open  ]],
Cell[520237, 9877, 412, 6, 34, "Text",ExpressionUUID->"7ccf515d-93a6-49b2-ba57-4ce0d8e59e42"],
Cell[520652, 9885, 375, 5, 34, "Text",ExpressionUUID->"77c7a02e-b001-4256-863a-20a3a8463c30"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[521076, 9896, 222, 3, 69, "Section",ExpressionUUID->"5d0479ac-3660-4bb2-a53f-0cd87eafc55f"],
Cell[CellGroupData[{
Cell[521323, 9903, 391, 6, 28, "Item",ExpressionUUID->"0707b00d-f861-480a-9a46-d44d52093ff1"],
Cell[521717, 9911, 5049, 121, 529, "Input",ExpressionUUID->"7bb9c2f1-796d-4665-ad67-4621d7e42a4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[526803, 10037, 259, 3, 28, "Item",ExpressionUUID->"ae9d726d-9a18-46f5-a11d-69c5877f0632"],
Cell[CellGroupData[{
Cell[527087, 10044, 402, 8, 44, "Input",ExpressionUUID->"04e0595d-452b-455e-8af8-2a295d08b8ac"],
Cell[CellGroupData[{
Cell[527514, 10056, 142, 3, 25, "EchoTiming",ExpressionUUID->"d0bb37f1-918b-4270-b06f-75fb575f2645"],
Cell[527659, 10061, 289, 5, 24, "Print",ExpressionUUID->"b3f9e18a-bfb1-449b-a80e-d049c31862c2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[527987, 10071, 524, 7, 28, "Item",ExpressionUUID->"8cba03ca-0596-41f9-aa98-2e469109c3bf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[528548, 10083, 336, 4, 69, "Section",ExpressionUUID->"2829038c-c8fd-4f3d-9298-7c13838da9e8"],
Cell[CellGroupData[{
Cell[528909, 10091, 255, 4, 34, "Subsection",ExpressionUUID->"54b69eb6-933e-48a9-bd54-f66048cbf887"],
Cell[CellGroupData[{
Cell[529189, 10099, 444, 7, 28, "Item",ExpressionUUID->"e18e25f0-4d96-4aea-91e9-1cccbc3bb603"],
Cell[529636, 10108, 16597, 311, 420, "Input",ExpressionUUID->"b1e9aa37-5e78-45c8-b183-7bd130c6a3ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[546270, 10424, 602, 8, 28, "Item",ExpressionUUID->"fcb2a2c2-5442-427c-9263-9cf366eee144"],
Cell[CellGroupData[{
Cell[546897, 10436, 341, 7, 41, "Input",ExpressionUUID->"d3ef75b4-9832-443a-ace2-adf3c138e3f6"],
Cell[547241, 10445, 144, 3, 25, "EchoTiming",ExpressionUUID->"7a79a240-362d-426c-ad89-fc65528ac838"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547446, 10455, 300, 5, 34, "Subsection",ExpressionUUID->"188c2f4c-0230-4cb3-a6d7-094bbc54c9fa"],
Cell[CellGroupData[{
Cell[547771, 10464, 539, 7, 28, "Item",ExpressionUUID->"95bcf5d1-ed2c-4a4b-a4b2-ec26adbf416f"],
Cell[CellGroupData[{
Cell[548335, 10475, 533, 13, 41, "Input",ExpressionUUID->"3badc58f-a3a4-4893-af28-3c19b2106783"],
Cell[548871, 10490, 141, 3, 25, "EchoTiming",ExpressionUUID->"89297fd8-7785-427b-8445-1772cdf93d5d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[549061, 10499, 561, 8, 28, "Item",ExpressionUUID->"a6ad8f01-1962-4333-b2d3-cf2e6bb5d626"],
Cell[549625, 10509, 931, 25, 41, "Input",ExpressionUUID->"ee092d8e-613d-4c72-b6dc-61365551b727"]
}, Open  ]],
Cell[CellGroupData[{
Cell[550593, 10539, 506, 7, 28, "Item",ExpressionUUID->"bb9fedc2-9d5a-462a-83a1-1fadeeab48d3"],
Cell[CellGroupData[{
Cell[551124, 10550, 457, 12, 41, "Input",ExpressionUUID->"b4be9311-4ec3-4824-b18d-3cbf932f275c"],
Cell[551584, 10564, 142, 3, 25, "EchoTiming",ExpressionUUID->"3c462616-6960-49e9-94cb-dd35e0f9aba5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[551799, 10575, 382, 5, 69, "Section",ExpressionUUID->"7d520e41-1d86-47ee-b060-f44552eb82dd"],
Cell[552184, 10582, 652, 18, 41, "Input",ExpressionUUID->"d93def55-b07b-4810-8737-fb80e8847fc5"],
Cell[CellGroupData[{
Cell[552861, 10604, 640, 9, 28, "Item",ExpressionUUID->"460f12c8-66f0-45b5-a5ea-b1f3e1c82a88"],
Cell[553504, 10615, 1687, 42, 89, "Input",ExpressionUUID->"26fa95d2-91e3-4f8c-a07d-82addea6de71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555228, 10662, 612, 8, 28, "Item",ExpressionUUID->"62a1f012-489a-428e-8c28-bbc5314bd385"],
Cell[555843, 10672, 499, 12, 41, "Input",ExpressionUUID->"a38ea359-1143-4150-8027-66e0ff939e1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[556379, 10689, 654, 9, 28, "Item",ExpressionUUID->"3e43b3c6-8ef3-41f5-98df-da266e546754"],
Cell[557036, 10700, 2387, 61, 109, "Input",ExpressionUUID->"7716b4c8-c59e-4319-a983-a3d21272542f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[559460, 10766, 611, 9, 28, "Item",ExpressionUUID->"4d956b42-cf7a-433c-8ff2-23d1c9b410ae"],
Cell[CellGroupData[{
Cell[560096, 10779, 1045, 27, 63, "Input",ExpressionUUID->"7e164881-5a3b-4b2b-9933-4be5492e64e6"],
Cell[561144, 10808, 144, 3, 25, "EchoTiming",ExpressionUUID->"5eb01f1a-cc78-44fb-af33-e01294cc3c2f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[561349, 10818, 837, 11, 69, "Section",ExpressionUUID->"0066c6e0-7422-4bc1-9b29-5a5105556409"],
Cell[CellGroupData[{
Cell[562211, 10833, 1437, 38, 63, "Input",ExpressionUUID->"f7593c05-8bd4-44ba-8a4a-2b35884f2c36"],
Cell[CellGroupData[{
Cell[563673, 10875, 142, 3, 25, "EchoTiming",ExpressionUUID->"64390199-7870-4927-b0ba-2d53f6671914"],
Cell[563818, 10880, 144, 3, 25, "EchoTiming",ExpressionUUID->"4cd58eb5-b53e-4df7-b3bf-603a27078561"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564011, 10889, 163, 3, 34, "Subsection",ExpressionUUID->"df664d5f-df5a-410b-921f-974b90123bb3"],
Cell[564177, 10894, 173857, 4222, 8117, "Input",ExpressionUUID->"025b4275-ec50-41aa-b4db-b9f7ee39a63f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[738083, 15122, 132, 3, 69, "Section",ExpressionUUID->"ae3e6bda-12b3-4cc0-855f-bf935985e10b"],
Cell[738218, 15127, 1082, 24, 41, "Input",ExpressionUUID->"0611c67a-66cd-4dc0-ac01-38d9af434889"],
Cell[739303, 15153, 968, 17, 34, "Text",ExpressionUUID->"ff8f9d5b-bae7-4292-b339-55b6039194f0"],
Cell[CellGroupData[{
Cell[740296, 15174, 226, 3, 41, "Input",ExpressionUUID->"f1efd1e0-25bd-4b10-b07f-413da1d1d4c6"],
Cell[740525, 15179, 4701, 131, 189, "Output",ExpressionUUID->"d913fe09-ce63-41e6-a25f-4ce48426acd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[745263, 15315, 227, 3, 41, "Input",ExpressionUUID->"09299b2b-4b77-4849-9c5d-b13d12eca5cf"],
Cell[745493, 15320, 3982, 90, 84, "Output",ExpressionUUID->"ff24bcb7-cac0-452c-8609-61012552c2aa"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

